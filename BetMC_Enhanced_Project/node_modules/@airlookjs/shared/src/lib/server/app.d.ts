import type { FastifyRateLimitOptions } from '@fastify/rate-limit';
import type { FastifyCorsOptions } from '@fastify/cors';
import type { FastifyInstance, FastifyServerOptions } from 'fastify';
import type { ShareInfo } from '../shares.js';
export interface CommonServiceConfig {
    routePrefix: string;
    shares: ShareInfo[];
    rateLimit?: FastifyRateLimitOptions;
    cors?: FastifyCorsOptions;
    cacheDir?: string;
}
export type ServiceBuildFunction<Config extends CommonServiceConfig> = (config: Partial<Config>, fastifyOptions?: FastifyServerOptions) => Promise<FastifyInstance>;
export declare const getBuildFunction: <Config extends CommonServiceConfig>(register: (app: FastifyInstance, config: Config) => Promise<void>, defaults: Partial<Config>) => ServiceBuildFunction<Config>;
//# sourceMappingURL=app.d.ts.map