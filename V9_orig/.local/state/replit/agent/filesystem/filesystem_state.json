{"file_contents":{"cleaner.js":{"content":"const fs = require('fs');\nconst path = require('path');\nconst cron = require('node-cron');\n\nclass FileCleanupService {\n  constructor(config = {}) {\n    this.config = {\n      uploadsDir: config.uploadsDir || 'uploads',\n      outputDir: config.outputDir || 'output', \n      zipsDir: config.zipsDir || 'zips',\n      tempDir: config.tempDir || 'temp',\n      tempFileLifetime: config.tempFileLifetime || 3600, // 1 hour\n      outputFileLifetime: config.outputFileLifetime || 86400, // 24 hours\n      zipFileLifetime: config.zipFileLifetime || 86400, // 24 hours\n      logFileLifetime: config.logFileLifetime || 604800, // 1 week\n      cleanupInterval: config.cleanupInterval || 1800, // 30 minutes\n      maxDiskUsage: config.maxDiskUsage || 10 * 1024 * 1024 * 1024, // 10GB\n      ...config\n    };\n\n    this.stats = {\n      totalCleaned: 0,\n      spaceFree: 0,\n      lastCleanup: null,\n      errors: []\n    };\n\n    this.initialize();\n  }\n\n  initialize() {\n    console.log('🧹 File Cleanup Service initialized');\n    \n    // Ensure directories exist\n    this.ensureDirectories();\n    \n    // Start periodic cleanup (every 30 minutes by default)\n    this.startPeriodicCleanup();\n    \n    // Initial cleanup\n    this.performCleanup();\n\n    // Handle process termination\n    process.on('SIGTERM', () => this.shutdown());\n    process.on('SIGINT', () => this.shutdown());\n  }\n\n  ensureDirectories() {\n    const directories = [\n      this.config.uploadsDir,\n      this.config.outputDir,\n      this.config.zipsDir,\n      this.config.tempDir\n    ];\n\n    directories.forEach(dir => {\n      if (!fs.existsSync(dir)) {\n        fs.mkdirSync(dir, { recursive: true });\n        console.log(`📁 Created directory: ${dir}`);\n      }\n    });\n  }\n\n  startPeriodicCleanup() {\n    // Convert interval from seconds to minutes for cron\n    const intervalMinutes = Math.max(1, Math.floor(this.config.cleanupInterval / 60));\n    const cronPattern = `*/${intervalMinutes} * * * *`;\n    \n    cron.schedule(cronPattern, () => {\n      this.performCleanup();\n    }, {\n      scheduled: true,\n      timezone: 'Asia/Bangkok'\n    });\n\n    console.log(`⏰ Scheduled cleanup every ${intervalMinutes} minutes`);\n  }\n\n  async performCleanup() {\n    console.log('🧹 Starting cleanup process...');\n    const startTime = Date.now();\n    let totalFilesRemoved = 0;\n    let totalSpaceFreed = 0;\n\n    try {\n      // Clean temporary files\n      const tempResults = await this.cleanDirectory(this.config.uploadsDir, this.config.tempFileLifetime);\n      totalFilesRemoved += tempResults.filesRemoved;\n      totalSpaceFreed += tempResults.spaceFreed;\n\n      // Clean output directories\n      const outputResults = await this.cleanDirectory(this.config.outputDir, this.config.outputFileLifetime);\n      totalFilesRemoved += outputResults.filesRemoved;\n      totalSpaceFreed += outputResults.spaceFreed;\n\n      // Clean zip files\n      const zipResults = await this.cleanZipFiles();\n      totalFilesRemoved += zipResults.filesRemoved;\n      totalSpaceFreed += zipResults.spaceFreed;\n\n      // Clean temp directory\n      if (fs.existsSync(this.config.tempDir)) {\n        const tempDirResults = await this.cleanDirectory(this.config.tempDir, this.config.tempFileLifetime);\n        totalFilesRemoved += tempDirResults.filesRemoved;\n        totalSpaceFreed += tempDirResults.spaceFreed;\n      }\n\n      // Clean orphaned files\n      const orphanResults = await this.cleanOrphanedFiles();\n      totalFilesRemoved += orphanResults.filesRemoved;\n      totalSpaceFreed += orphanResults.spaceFreed;\n\n      // Check disk usage and emergency cleanup if needed\n      await this.checkDiskUsage();\n\n      // Update stats\n      this.stats.totalCleaned += totalFilesRemoved;\n      this.stats.spaceFree += totalSpaceFreed;\n      this.stats.lastCleanup = new Date();\n\n      const duration = Date.now() - startTime;\n      console.log(`✅ Cleanup completed in ${duration}ms`);\n      console.log(`📊 Files removed: ${totalFilesRemoved}, Space freed: ${this.formatBytes(totalSpaceFreed)}`);\n\n    } catch (error) {\n      console.error('❌ Cleanup error:', error);\n      this.stats.errors.push({\n        timestamp: new Date(),\n        error: error.message\n      });\n    }\n  }\n\n  async cleanDirectory(dirPath, maxAge) {\n    if (!fs.existsSync(dirPath)) {\n      return { filesRemoved: 0, spaceFreed: 0 };\n    }\n\n    let filesRemoved = 0;\n    let spaceFreed = 0;\n    const currentTime = Date.now();\n\n    try {\n      const items = fs.readdirSync(dirPath);\n\n      for (const item of items) {\n        const itemPath = path.join(dirPath, item);\n        \n        try {\n          const stats = fs.statSync(itemPath);\n          const age = (currentTime - stats.mtime.getTime()) / 1000; // Age in seconds\n\n          if (age > maxAge) {\n            const size = this.getItemSize(itemPath);\n            \n            if (stats.isDirectory()) {\n              fs.rmSync(itemPath, { recursive: true, force: true });\n            } else {\n              fs.unlinkSync(itemPath);\n            }\n            \n            filesRemoved++;\n            spaceFreed += size;\n            console.log(`🗑️  Removed: ${itemPath} (age: ${Math.floor(age/60)}min, size: ${this.formatBytes(size)})`);\n          }\n        } catch (itemError) {\n          console.warn(`⚠️  Could not process ${itemPath}:`, itemError.message);\n        }\n      }\n    } catch (error) {\n      console.error(`❌ Error cleaning directory ${dirPath}:`, error);\n    }\n\n    return { filesRemoved, spaceFreed };\n  }\n\n  async cleanZipFiles() {\n    const zipDir = this.config.zipsDir;\n    if (!fs.existsSync(zipDir)) {\n      return { filesRemoved: 0, spaceFreed: 0 };\n    }\n\n    let filesRemoved = 0;\n    let spaceFreed = 0;\n    const currentTime = Date.now();\n    const maxAge = this.config.zipFileLifetime;\n\n    try {\n      const zipFiles = fs.readdirSync(zipDir).filter(file => file.endsWith('.zip'));\n\n      for (const zipFile of zipFiles) {\n        const zipPath = path.join(zipDir, zipFile);\n        \n        try {\n          const stats = fs.statSync(zipPath);\n          const age = (currentTime - stats.mtime.getTime()) / 1000;\n\n          if (age > maxAge) {\n            const size = stats.size;\n            fs.unlinkSync(zipPath);\n            \n            filesRemoved++;\n            spaceFreed += size;\n            console.log(`🗑️  Removed zip: ${zipFile} (age: ${Math.floor(age/60)}min, size: ${this.formatBytes(size)})`);\n          }\n        } catch (error) {\n          console.warn(`⚠️  Could not process zip ${zipFile}:`, error.message);\n        }\n      }\n    } catch (error) {\n      console.error('❌ Error cleaning zip files:', error);\n    }\n\n    return { filesRemoved, spaceFreed };\n  }\n\n  async cleanOrphanedFiles() {\n    let filesRemoved = 0;\n    let spaceFreed = 0;\n\n    // Clean files that match temporary patterns\n    const patterns = [\n      /^temp_.*$/,\n      /^tmp_.*$/,\n      /.*\\.tmp$/,\n      /.*_youtube\\..*$/,\n      /.*_audio\\..*$/,\n      /.*_separate_audio\\..*$/,\n      /.*_sounds\\.zip$/\n    ];\n\n    const directories = [this.config.uploadsDir];\n\n    for (const dir of directories) {\n      if (!fs.existsSync(dir)) continue;\n\n      try {\n        const files = fs.readdirSync(dir);\n        \n        for (const file of files) {\n          const filePath = path.join(dir, file);\n          \n          if (patterns.some(pattern => pattern.test(file))) {\n            try {\n              const stats = fs.statSync(filePath);\n              const age = (Date.now() - stats.mtime.getTime()) / 1000;\n              \n              // Clean orphaned files older than 1 hour\n              if (age > 3600) {\n                const size = stats.size;\n                fs.unlinkSync(filePath);\n                \n                filesRemoved++;\n                spaceFreed += size;\n                console.log(`🗑️  Removed orphaned: ${file}`);\n              }\n            } catch (error) {\n              console.warn(`⚠️  Could not process orphaned file ${file}:`, error.message);\n            }\n          }\n        }\n      } catch (error) {\n        console.error(`❌ Error cleaning orphaned files in ${dir}:`, error);\n      }\n    }\n\n    return { filesRemoved, spaceFreed };\n  }\n\n  async checkDiskUsage() {\n    try {\n      const usage = this.calculateDiskUsage();\n      \n      if (usage.total > this.config.maxDiskUsage) {\n        console.log(`⚠️  Disk usage (${this.formatBytes(usage.total)}) exceeds limit, performing emergency cleanup...`);\n        await this.emergencyCleanup();\n      }\n    } catch (error) {\n      console.error('❌ Error checking disk usage:', error);\n    }\n  }\n\n  async emergencyCleanup() {\n    console.log('🚨 Starting emergency cleanup...');\n    \n    // More aggressive cleanup - reduce file lifetimes by 50%\n    const emergencyConfig = {\n      tempFileLifetime: this.config.tempFileLifetime * 0.5,\n      outputFileLifetime: this.config.outputFileLifetime * 0.5,\n      zipFileLifetime: this.config.zipFileLifetime * 0.5\n    };\n\n    // Clean with reduced lifetimes\n    await this.cleanDirectory(this.config.uploadsDir, emergencyConfig.tempFileLifetime);\n    await this.cleanDirectory(this.config.outputDir, emergencyConfig.outputFileLifetime);\n    \n    // Remove oldest zip files first\n    await this.cleanOldestZips(50); // Remove up to 50 oldest zips\n    \n    console.log('✅ Emergency cleanup completed');\n  }\n\n  async cleanOldestZips(maxToRemove) {\n    const zipDir = this.config.zipsDir;\n    if (!fs.existsSync(zipDir)) return;\n\n    try {\n      const zipFiles = fs.readdirSync(zipDir)\n        .filter(file => file.endsWith('.zip'))\n        .map(file => {\n          const filePath = path.join(zipDir, file);\n          const stats = fs.statSync(filePath);\n          return { file, path: filePath, mtime: stats.mtime, size: stats.size };\n        })\n        .sort((a, b) => a.mtime - b.mtime); // Sort by modification time (oldest first)\n\n      let removed = 0;\n      for (const zipInfo of zipFiles) {\n        if (removed >= maxToRemove) break;\n        \n        try {\n          fs.unlinkSync(zipInfo.path);\n          removed++;\n          console.log(`🗑️  Emergency removed: ${zipInfo.file}`);\n        } catch (error) {\n          console.warn(`⚠️  Could not remove ${zipInfo.file}:`, error.message);\n        }\n      }\n    } catch (error) {\n      console.error('❌ Error in emergency zip cleanup:', error);\n    }\n  }\n\n  calculateDiskUsage() {\n    let total = 0;\n    const directories = [\n      this.config.uploadsDir,\n      this.config.outputDir,\n      this.config.zipsDir,\n      this.config.tempDir\n    ];\n\n    directories.forEach(dir => {\n      if (fs.existsSync(dir)) {\n        total += this.getDirectorySize(dir);\n      }\n    });\n\n    return { total };\n  }\n\n  getDirectorySize(dirPath) {\n    let totalSize = 0;\n    \n    try {\n      const items = fs.readdirSync(dirPath);\n      \n      for (const item of items) {\n        const itemPath = path.join(dirPath, item);\n        totalSize += this.getItemSize(itemPath);\n      }\n    } catch (error) {\n      console.warn(`⚠️  Could not calculate size for ${dirPath}:`, error.message);\n    }\n    \n    return totalSize;\n  }\n\n  getItemSize(itemPath) {\n    try {\n      const stats = fs.statSync(itemPath);\n      \n      if (stats.isDirectory()) {\n        return this.getDirectorySize(itemPath);\n      } else {\n        return stats.size;\n      }\n    } catch (error) {\n      return 0;\n    }\n  }\n\n  formatBytes(bytes) {\n    if (bytes === 0) return '0 Bytes';\n    \n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    \n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  }\n\n  getStats() {\n    return {\n      ...this.stats,\n      diskUsage: this.calculateDiskUsage(),\n      uptime: process.uptime(),\n      memoryUsage: process.memoryUsage()\n    };\n  }\n\n  // Manual cleanup trigger\n  async forceCleanup() {\n    console.log('🧹 Force cleanup triggered...');\n    await this.performCleanup();\n  }\n\n  // Clean specific namespace\n  async cleanNamespace(namespace) {\n    let filesRemoved = 0;\n    let spaceFreed = 0;\n    \n    const directories = [\n      this.config.uploadsDir,\n      this.config.outputDir,\n      this.config.zipsDir\n    ];\n\n    for (const dir of directories) {\n      if (!fs.existsSync(dir)) continue;\n      \n      try {\n        const items = fs.readdirSync(dir);\n        \n        for (const item of items) {\n          if (item.includes(namespace)) {\n            const itemPath = path.join(dir, item);\n            const size = this.getItemSize(itemPath);\n            \n            if (fs.statSync(itemPath).isDirectory()) {\n              fs.rmSync(itemPath, { recursive: true, force: true });\n            } else {\n              fs.unlinkSync(itemPath);\n            }\n            \n            filesRemoved++;\n            spaceFreed += size;\n            console.log(`🗑️  Cleaned namespace file: ${item}`);\n          }\n        }\n      } catch (error) {\n        console.error(`❌ Error cleaning namespace ${namespace} in ${dir}:`, error);\n      }\n    }\n\n    return { filesRemoved, spaceFreed };\n  }\n\n  shutdown() {\n    console.log('🧹 File Cleanup Service shutting down...');\n    // Perform final cleanup\n    this.performCleanup().then(() => {\n      console.log('✅ Cleanup service shutdown complete');\n    });\n  }\n}\n\n// Initialize cleanup service\nconst cleanupService = new FileCleanupService();\n\n// Export for use in other modules\nmodule.exports = FileCleanupService;\n\n// Graceful process handling\nprocess.on('unhandledRejection', (reason, promise) => {\n  console.error('Unhandled Rejection at:', promise, 'reason:', reason);\n});\n\nprocess.on('uncaughtException', (error) => {\n  console.error('Uncaught Exception:', error);\n  process.exit(1);\n});\n","size_bytes":13747},"main.js":{"content":"\n// This file serves as the entry point for the BetMC Texture Generator\n// The actual server logic is in server.js\nconst { spawn } = require('child_process');\nconst path = require('path');\n\nconsole.log('🚀 Starting BetMC Texture Generator Pro...');\n\n// Start the main server\nconst server = spawn('node', ['server.js'], {\n  stdio: 'inherit',\n  cwd: path.resolve(__dirname)\n});\n\nserver.on('error', (error) => {\n  console.error('❌ Failed to start server:', error);\n  process.exit(1);\n});\n\nserver.on('close', (code) => {\n  console.log(`🛑 Server process exited with code ${code}`);\n  if (code !== 0) {\n    process.exit(code);\n  }\n});\n","size_bytes":636},"pyproject.toml":{"content":"[project]\nname = \"repl-nix-workspace\"\nversion = \"0.1.0\"\ndescription = \"Add your description here\"\nrequires-python = \">=3.11\"\ndependencies = [\n    \"flask>=3.1.1\",\n    \"gunicorn>=23.0.0\",\n    \"requests>=2.32.4\",\n    \"werkzeug>=3.1.3\",\n]\n","size_bytes":235},"replit.md":{"content":"# BetMC Texture Generator Pro\n\n## Project Overview\nA web-based Minecraft texture pack generator with real-time admin controls, YouTube/TikTok integration, and automated file processing. The application creates custom Minecraft texture packs with user-provided content and includes an admin dashboard for managing configurations and monitoring usage.\n\n## Architecture\n- **Framework**: Node.js with Express.js (Direct execution)\n- **Real-time Communication**: Socket.IO for live updates\n- **File Processing**: FFmpeg for video/audio, ImageMagick for images\n- **Frontend**: Vanilla JavaScript with Bootstrap CSS\n- **Port**: 5000 (Single Node.js server, no proxy)\n\n## Key Features\n- Texture pack generation from video/audio files\n- YouTube URL integration for content download\n- TikTok URL integration for content download\n- Real-time progress tracking via WebSockets\n- Admin dashboard with authentication\n- Email notifications for completed packs\n- Automated file cleanup system\n- Custom theming and branding controls\n\n## File Structure\n```\n├── server.js           # Main application server\n├── main.js             # Application entry point\n├── cleaner.js          # File cleanup service\n├── public/             # Static web assets\n│   ├── index.html      # Main user interface\n│   ├── admin.html      # Admin dashboard\n│   ├── script.js       # Client-side logic\n│   ├── admin.js        # Admin panel logic\n│   └── styles.css      # Application styling\n├── uploads/            # Temporary file uploads\n├── output/             # Processing workspace\n├── zips/               # Generated texture packs\n├── config/             # Configuration files\n└── temp/               # Temporary processing files\n```\n\n## Core Dependencies\n- **Express.js 5.1.0**: Web application framework\n- **Socket.IO 4.8.1**: Real-time bidirectional communication\n- **Multer 2.0.2**: File upload handling\n- **Archiver 7.0.1**: ZIP file creation\n- **Unzipper 0.12.3**: Archive extraction\n- **youtube-dl-exec 3.0.23**: YouTube content download\n- **bcrypt 6.0.0**: Password hashing for admin auth\n- **node-cron 4.2.1**: Scheduled file cleanup\n- **node-fetch 3.3.2**: HTTP client for external requests\n- **nodemailer 7.0.5**: Email notifications\n\n## External Services\n- **Gmail SMTP**: Email notification delivery\n- **YouTube API**: Content download via youtube-dl-exec\n- **FFmpeg**: Video/audio processing and conversion\n- **ImageMagick**: Image processing and optimization\n\n## Admin Configuration\n- Default password: 'man999' (bcrypt hashed)\n- Configurable UI themes and colors\n- Upload/YouTube feature toggles\n- Custom announcement messages\n- Real-time configuration updates\n\n## Recent Changes (Aug 10, 2025)\n- **Fixed Admin Authentication Issues**: Resolved password validation problems by updating bcrypt hash\n- **Restored Admin Password System**: Re-enabled secure authentication after debugging session  \n- **Enhanced Socket.IO Connection**: Improved connection stability for admin panel access\n- **Debug Mode Implementation**: Added comprehensive logging for troubleshooting authentication\n- **Advanced Admin Panel Features**: Added comprehensive analytics dashboard with real-time metrics\n- **Real-time Analytics Dashboard**: Live tracking of users, downloads, processing times, and system load\n- **User Activity Monitoring**: Real-time display of active users with activity timeline\n- **System Performance Monitor**: CPU, Memory, Disk usage with live progress bars and network I/O stats\n- **Advanced Settings Panel**: Tabbed interface for General, Limits, and Security settings\n- **Interactive Charts**: Hourly usage and texture type distribution with Chart.js integration\n- **Enhanced Socket.IO Integration**: Real-time updates for all admin components\n- **Activity Tracking System**: Comprehensive logging of user actions and system events\n- **Performance Metrics API**: New endpoints for analytics, performance, and user data\n- **Advanced Admin APIs**: Full CRUD operations for settings and monitoring data\n- **Real-time User Presence**: Live count and details of connected users\n- **Process Monitoring**: Display of active system processes with resource usage\n- **Live Chat System**: Added real-time chat between admin mode and main page users with file sharing support\n- **Media Player Integration**: Admin can control YouTube video/audio playback on main page with volume controls\n- **Background Media Control**: Videos can play as background or audio-only mode on texture generator page\n- **Fixed TikTok Preview System**: Replaced mock data with real video metadata from TikTok API\n- **Connected Frontend to Backend**: TikTok load function now calls `/api/tiktok-info` for authentic data\n- **Enforced Port 5000**: Modified server configuration to run exclusively on port 5000\n- **Enhanced TikTok integration**: Full support for vt.tiktok.com URLs with real video processing\n- **Improved performance**: Direct Node.js execution removes all proxy overhead\n- **Fixed TikTok Download Issues**: Replaced failing youtube-dl-exec with @tobyg74/tiktok-api-dl\n- **Enhanced Admin File Cleanup**: Real-time console updates and improved file deletion accuracy\n- **Real-time Admin Monitoring**: Added live console updates during file cleanup operations\n- **Complete Console Integration**: Override all console methods (log, error, warn, info) to capture every output\n- **Real-time Progress Tracking**: All progress updates, connections, and HTTP requests sent to admin mode\n- **Enhanced Socket.IO Monitoring**: Track user connections, disconnections, and Socket.IO events\n- **Comprehensive HTTP Request Logging**: Monitor all requests with IP, User-Agent, status codes, and response times\n- **Admin Room Integration**: Automatic joining of admin room for real-time updates\n- **Increased Log Capacity**: Extended error log display to 50 entries for better monitoring\n- File cleanup service automatically manages temporary files\n- Enhanced texture generator with advanced UI generation system\n- Added Server-Sent Events (SSE) progress tracking alongside Socket.IO\n- Improved audio processing with menu music generation (menu1-4.ogg)\n- Added comprehensive betmc_config generation for better customization\n- Enhanced background animation system with proper frame positioning\n\n## Fixed Issues (Aug 9, 2025)\n- ✅ Fixed progress tracking stuck at 0% by improving Socket.IO connections\n- ✅ Fixed download link generation and file serving\n- ✅ Added proper logging for debugging progress and download issues\n- ✅ Improved Flask proxy for large file downloads with streaming\n- ✅ Fixed Socket.IO disconnection handling and reconnection\n- ✅ Enhanced error handling and user feedback systems\n- 🚀 System now fully functional for texture pack generation and download\n\n## User Preferences\n- Language: Thai (ภาษาไทย) \n- Prefers using port 5000 directly for faster loading\n- Keep responses concise and technical when needed\n- Focus on immediate problem resolution\n- Provide clear step-by-step solutions\n\n## Latest Updates (Aug 9, 2025)\n### Enhanced Admin Mode with Advanced File Management\n- ✅ Successfully moved server to port 5000 as requested\n- ✅ Fixed admin toggle functionality for upload/YouTube controls\n- ✅ Implemented real file management system showing actual disk usage\n- ✅ Added automatic file cleanup with configurable lifetimes\n- ✅ Enhanced Socket.IO debugging and error handling\n- ✅ Added system monitoring with live statistics\n- ✅ Implemented error logging system with real-time updates\n- ✅ Added auto-refresh functionality every 30 seconds\n- 🔧 Webview still connects to port 3000 but server runs on 5000 successfully\n\n### YouTube Video Quality Enhancement (Aug 9, 2025)\n- ✅ Fixed YouTube video quality issues by upgrading download format selection\n- ✅ Added \"best quality available\" option for maximum resolution (4K/1440p support)\n- ✅ Improved format-sort parameters for optimal video/audio quality\n- ✅ Enhanced FFmpeg frame extraction with lanczos scaling for better image quality\n- ✅ Improved ImageMagick compression settings to preserve image sharpness\n- ✅ Added codec preferences (H.264 video, AAC audio) for better compatibility\n- 🎯 YouTube videos now download in highest available quality instead of being limited to 1080p\n\n### TikTok Integration (Aug 9, 2025)\n- ✅ Added complete TikTok video download functionality using yt-dlp\n- ✅ Implemented TikTok URL validation and extraction  \n- ✅ Added quality options: Best (no watermark), High, Medium, Low\n- ✅ Created TikTok UI section matching YouTube design\n- ✅ Added TikTok audio download support with separate audio URL option\n- ✅ Integrated TikTok processing into existing texture generation pipeline\n- ✅ Enhanced file cleanup to handle TikTok downloads\n- ✅ Fixed TikTok preview functionality with proper video info display (Aug 10, 2025)\n- ✅ TikTok button now works correctly with preview showing video details\n- 🎯 TikTok videos download with best quality available and watermark avoidance when possible","size_bytes":9103},"server.js":{"content":"const express = require('express');\nconst multer = require('multer');\nconst fs = require('fs');\nconst path = require('path');\nconst { execSync } = require('child_process');\nconst archiver = require('archiver');\nconst unzipper = require('unzipper');\nconst crypto = require('crypto');\nconst fetch = (...args) => import('node-fetch').then(({default: fetch}) => fetch(...args));\nconst nodemailer = require('nodemailer');\nconst youtubeDl = require('youtube-dl-exec');\nconst http = require('http');\nconst socketIo = require('socket.io');\nconst bcrypt = require('bcrypt');\n\nrequire('./cleaner');\n\n// Binary path detection for Nix environment\nconst { execSync: execSyncBase } = require('child_process');\n\nfunction findBinary(name) {\n  try {\n    return execSyncBase(`which ${name}`, { encoding: 'utf8' }).trim();\n  } catch (error) {\n    console.warn(`Warning: ${name} not found in PATH`);\n    return name; // fallback to just the name\n  }\n}\n\nconst FFMPEG_PATH = findBinary('ffmpeg');\nconst MAGICK_PATH = findBinary('magick');\n\nconsole.log(`🔧 FFmpeg path: ${FFMPEG_PATH}`);\nconsole.log(`🔧 ImageMagick path: ${MAGICK_PATH}`);\n\nconst app = express();\nconst server = http.createServer(app);\nconst io = socketIo(server, {\n  cors: {\n    origin: \"*\",\n    methods: [\"GET\", \"POST\"]\n  }\n});\n\nconst upload = multer({ dest: 'uploads/' });\n\n// Progress tracking for SSE\nconst progressClients = new Map();\n\n// Static files\napp.use(express.static('public'));\napp.use('/zips', express.static('zips'));\napp.use(express.json());\n\n// Admin configuration\nlet adminConfig = {\n  password: null, // null means no password set yet - allow any password\n  isFirstLogin: true, // flag to track if this is first setup\n  gifUrl: 'https://media.tenor.com/XQu4UfesS_kAAAAC/minecraft-block.gif',\n  primaryColor: '#667eea',\n  secondaryColor: '#764ba2',\n  accentColor: '#f093fb',\n  uploadEnabled: true,\n  youtubeEnabled: true,\n  announcement: ''\n};\n\n// Load admin config\nconst configPath = './config/admin-config.json';\nif (fs.existsSync(configPath)) {\n  try {\n    const loadedConfig = JSON.parse(fs.readFileSync(configPath, 'utf8'));\n    adminConfig = { ...adminConfig, ...loadedConfig };\n\n    // Check if password is properly set\n    if (adminConfig.password && adminConfig.password !== null) {\n      adminConfig.isFirstLogin = false;\n      console.log('✅ Admin config loaded - รหัสผ่านถูกตั้งค่าแล้ว');\n    } else {\n      adminConfig.isFirstLogin = true;\n      console.log('⚠️ Admin config loaded - ยังไม่ได้ตั้งรหัสผ่าน');\n    }\n  } catch (error) {\n    console.log('❌ Failed to load admin config, using default');\n    console.error(error);\n  }\n} else {\n  console.log('🔧 Config file ไม่พบ - รอการตั้งรหัสผ่านครั้งแรก');\n}\n\n// Save admin config\nfunction saveAdminConfig() {\n  try {\n    fs.mkdirSync('./config', { recursive: true });\n    fs.writeFileSync(configPath, JSON.stringify(adminConfig, null, 2));\n  } catch (error) {\n    console.error('Failed to save admin config:', error);\n  }\n}\n\nfunction generateNamespace() {\n  return [...Array(32)].map(() => Math.random().toString(36)[2]).join('');\n}\n\nfunction escapePath(filePath) {\n  return `\"${filePath.replace(/\"/g, '\\\\\"')}\"`;\n}\n\nconst adminSessions = new Set();\n\n// System monitoring data\nlet systemStats = {\n  connectedUsers: 0,\n  activeProcesses: 0,\n  totalRequests: 0,\n  uptime: 0,\n  startTime: Date.now()\n};\n\n// Advanced Analytics System\nlet analyticsData = {\n  totalUsersToday: 0,\n  totalDownloads: 0,\n  avgProcessTime: 0,\n  systemLoad: 0,\n  hourlyUsage: new Array(24).fill(0),\n  textureTypes: { youtube: 0, tiktok: 0, upload: 0 },\n  userSessions: new Map(),\n  activeUsers: new Map(),\n  processingQueue: [],\n  systemPerformance: {\n    cpu: 0,\n    memory: 0,\n    disk: 0,\n    networkUp: 0,\n    networkDown: 0\n  },\n  recentActivity: [],\n  processList: []\n};\n\n// Rate limiting system\nlet rateLimitData = {\n  ipRequests: new Map(), // IP -> { count, lastReset }\n  blockedIPs: new Set(),\n  maxRequestsPerHour: 50,\n  totalRequestsThisHour: 0\n};\n\n// Queue management system\nlet queueSystem = {\n  items: [],\n  paused: false,\n  maxConcurrent: 3,\n  currentProcessing: 0\n};\n\n// Event system\nlet eventSystem = {\n  events: [],\n  eventConfigPath: './config/events.json'\n};\n\n// Load events\nif (fs.existsSync(eventSystem.eventConfigPath)) {\n  try {\n    eventSystem.events = JSON.parse(fs.readFileSync(eventSystem.eventConfigPath, 'utf8'));\n    console.log(`✅ Loaded ${eventSystem.events.length} events from ${eventSystem.eventConfigPath}`);\n  } catch (error) {\n    console.error('❌ Failed to load events:', error);\n    eventSystem.events = [];\n  }\n}\n\nfunction saveEventSystem() {\n  try {\n    fs.mkdirSync(path.dirname(eventSystem.eventConfigPath), { recursive: true });\n    fs.writeFileSync(eventSystem.eventConfigPath, JSON.stringify(eventSystem.events, null, 2));\n  } catch (error) {\n    console.error('Failed to save event system:', error);\n  }\n}\n\n// Helper function to create an event\nfunction createEvent(data) {\n  const newEvent = {\n    id: crypto.randomUUID(),\n    title: data.title || `Event ${Date.now()}`,\n    description: data.description || '',\n    command: data.command || '',\n    isActive: data.isActive === undefined ? true : data.isActive,\n    createdAt: Date.now(),\n    updatedAt: Date.now()\n  };\n  eventSystem.events.push(newEvent);\n  saveEventSystem();\n  addActivity('event_created', `✨ อีเว้นท์ใหม่ถูกสร้าง: ${newEvent.title} (ID: ${newEvent.id})`);\n  return newEvent;\n}\n\n// Helper function to execute event commands\nfunction executeEventCommand(command, event = {}) {\n  console.log(`🚀 กำลังประมวลผลคำสั่งสำหรับอีเว้นท์ '${event.title}': ${command}`);\n  addErrorLog('info', `🚀 Admin Executed Command: \"${command}\" triggered by Event \"${event.title}\"`);\n\n  try {\n    // Execute the command using execSync for simplicity\n    // In a production environment, consider using exec for async operations and better error handling\n    const result = execSync(command, { encoding: 'utf8', stdio: 'pipe' }); // Capture output\n    console.log(`✅ คำสั่งสำเร็จ: ${result}`);\n    addErrorLog('info', `✅ Command Result: ${result.trim()}`);\n    return { success: true, output: result.trim() };\n  } catch (error) {\n    console.error(`❌ คำสั่งล้มเหลว: ${error.message}`);\n    console.error(`Stderr: ${error.stderr}`);\n    console.error(`Stdout: ${error.stdout}`);\n    addErrorLog('error', `❌ Command Failed: ${error.message}`);\n    addErrorLog('error', `Command Stderr: ${error.stderr}`);\n    addErrorLog('error', `Command Stdout: ${error.stdout}`);\n    throw new Error(`Command execution failed: ${error.message}`);\n  }\n}\n\n// Helper functions for new systems\nfunction getRateLimitStats() {\n  const now = Date.now();\n  const oneHour = 60 * 60 * 1000;\n\n  // Clean old entries\n  for (const [ip, data] of rateLimitData.ipRequests.entries()) {\n    if (now - data.lastReset > oneHour) {\n      rateLimitData.ipRequests.delete(ip);\n    }\n  }\n\n  return {\n    totalIPs: rateLimitData.ipRequests.size,\n    blockedIPs: rateLimitData.blockedIPs.size,\n    requestsPerHour: rateLimitData.totalRequestsThisHour,\n    blockedIPsList: Array.from(rateLimitData.blockedIPs).map(ip => ({ address: ip }))\n  };\n}\n\nfunction getQueueStats() {\n  const avgWaitTime = queueSystem.items.length > 0\n    ? Math.round(queueSystem.items.reduce((sum, item) => sum + (Date.now() - item.addedTime), 0) / queueSystem.items.length / 1000)\n    : 0;\n\n  return {\n    length: queueSystem.items.length,\n    processing: queueSystem.currentProcessing,\n    avgWaitTime,\n    paused: queueSystem.paused,\n    items: queueSystem.items.map(item => ({\n      id: item.id,\n      type: item.type,\n      status: item.status,\n      startTime: item.addedTime\n    }))\n  };\n}\n\nfunction isIPBlocked(ip) {\n  // Check if IP is blocked\n  if (rateLimitData.blockedIPs.has(ip)) {\n    return true;\n  }\n\n  // Check rate limit\n  const now = Date.now();\n  const oneHour = 60 * 60 * 1000;\n\n  if (!rateLimitData.ipRequests.has(ip)) {\n    rateLimitData.ipRequests.set(ip, { count: 0, lastReset: now });\n  }\n\n  const ipData = rateLimitData.ipRequests.get(ip);\n\n  // Reset counter if more than an hour has passed\n  if (now - ipData.lastReset > oneHour) {\n    ipData.count = 0;\n    ipData.lastReset = now;\n  }\n\n  ipData.count++;\n  rateLimitData.totalRequestsThisHour++;\n\n  // Block if exceeded limit\n  if (ipData.count > rateLimitData.maxRequestsPerHour) {\n    rateLimitData.blockedIPs.add(ip);\n    addActivity('auto_ip_block', `IP ${ip} auto-blocked for exceeding rate limit`);\n    return true;\n  }\n\n  return false;\n}\n\n// Activity tracking functions\nfunction addActivity(type, description, userId = null) {\n  const activity = {\n    id: generateNamespace().substring(0, 8),\n    type,\n    description,\n    userId,\n    timestamp: Date.now()\n  };\n\n  analyticsData.recentActivity.unshift(activity);\n\n  // Keep only last 50 activities\n  if (analyticsData.recentActivity.length > 50) {\n    analyticsData.recentActivity = analyticsData.recentActivity.slice(0, 50);\n  }\n\n  // Emit to admin clients\n  io.emit('activity-update', activity);\n\n  addErrorLog('info', `📊 ACTIVITY: ${description}`);\n}\n\nfunction updateUserActivity(socketId, activity) {\n  if (analyticsData.activeUsers.has(socketId)) {\n    analyticsData.activeUsers.get(socketId).lastActivity = activity;\n    analyticsData.activeUsers.get(socket.id).timestamp = Date.now();\n  }\n}\n\nfunction generateUserId() {\n  return 'user_' + Math.random().toString(36).substring(2, 8);\n}\n\n// Performance monitoring\nfunction updateSystemPerformance() {\n  try {\n    // Simulate system performance data (in production, use actual system APIs)\n    analyticsData.systemPerformance = {\n      cpu: Math.random() * 100,\n      memory: Math.random() * 100,\n      disk: Math.random() * 100,\n      networkUp: Math.random() * 1000,\n      networkDown: Math.random() * 5000\n    };\n\n    analyticsData.systemLoad = analyticsData.systemPerformance.cpu;\n\n    // Update hourly usage\n    const currentHour = new Date().getHours();\n    analyticsData.hourlyUsage[currentHour]++;\n\n    // Emit to admin\n    io.emit('performance-update', analyticsData.systemPerformance);\n\n  } catch (error) {\n    console.error('Performance monitoring error:', error);\n  }\n}\n\n// Start performance monitoring\nsetInterval(updateSystemPerformance, 5000); // Update every 5 seconds\n\n// Advanced settings system\nlet advancedSettings = {\n  maxConcurrentProcesses: 3,\n  defaultVideoQuality: '720',\n  emailNotifications: false,\n  maxFileSize: 100,\n  rateLimitPerIP: 50,\n  maxProcessingTime: 10,\n  enableIPWhitelist: false,\n  blockSuspiciousActivity: false,\n  sessionTimeout: 30\n};\n\n// Load advanced settings\nconst advancedSettingsPath = './config/advanced-settings.json';\nif (fs.existsSync(advancedSettingsPath)) {\n  try {\n    advancedSettings = { ...advancedSettings, ...JSON.parse(fs.readFileSync(advancedSettingsPath, 'utf8')) };\n  } catch (error) {\n    console.log('Using default advanced settings');\n  }\n}\n\nfunction saveAdvancedSettings() {\n  try {\n    fs.mkdirSync('./config', { recursive: true });\n    fs.writeFileSync(advancedSettingsPath, JSON.stringify(advancedSettings, null, 2));\n  } catch (error) {\n    console.error('Failed to save advanced settings:', error);\n  }\n}\n\n// Error logging system\nlet errorLogs = [];\nconst MAX_ERROR_LOGS = 500;\n\nfunction addErrorLog(level, message) {\n  const logEntry = {\n    timestamp: Date.now(),\n    level: level,\n    message: message\n  };\n\n  errorLogs.unshift(logEntry);\n\n  if (errorLogs.length > MAX_ERROR_LOGS) {\n    errorLogs = errorLogs.slice(0, MAX_ERROR_LOGS);\n  }\n\n  // Emit to admin clients if connected\n  io.emit('new-error-log', logEntry);\n}\n\n// Override console methods to capture ALL console output and send to admin\nconst originalConsoleLog = console.log;\nconst originalConsoleError = console.error;\nconst originalConsoleWarn = console.warn;\nconst originalConsoleInfo = console.info;\n\nconsole.log = function(...args) {\n  const message = args.map(arg =>\n    typeof arg === 'object' ? JSON.stringify(arg, null, 2) : String(arg)\n  ).join(' ');\n\n  // แสดงใน console ปกติ\n  originalConsoleLog.apply(console, args);\n\n  // ส่งไปยัง admin mode\n  addErrorLog('info', `🖥️ LOG: ${message}`);\n};\n\nconsole.error = function(...args) {\n  const message = args.map(arg =>\n    typeof arg === 'object' ? JSON.stringify(arg, null, 2) : String(arg)\n  ).join(' ');\n\n  // แสดงใน console ปกติ\n  originalConsoleError.apply(console, args);\n\n  // ส่งไปยัง admin mode\n  addErrorLog('error', `❌ ERROR: ${message}`);\n};\n\nconsole.warn = function(...args) {\n  const message = args.map(arg =>\n    typeof arg === 'object' ? JSON.stringify(arg, null, 2) : String(arg)\n  ).join(' ');\n\n  // แสดงใน console ปกติ\n  originalConsoleWarn.apply(console, args);\n\n  // ส่งไปยัง admin mode\n  addErrorLog('warning', `⚠️ WARN: ${message}`);\n};\n\nconsole.info = function(...args) {\n  const message = args.map(arg =>\n    typeof arg === 'object' ? JSON.stringify(arg, null, 2) : String(arg)\n  ).join(' ');\n\n  // แสดงใน console ปกติ\n  originalConsoleInfo.apply(console, args);\n\n  // ส่งไปยัง admin mode\n  addErrorLog('info', `ℹ️ INFO: ${message}`);\n};\n\n// Email transporter\nconst transporter = nodemailer.createTransport({\n  service: 'gmail',\n  auth: {\n    user: process.env.EMAIL_USER || '',\n    pass: process.env.EMAIL_PASS || ''\n  }\n});\n\nasync function sendNotificationEmail(email, textureName, downloadUrl) {\n  if (!email || !process.env.EMAIL_USER) return;\n\n  try {\n    const mailOptions = {\n      from: process.env.EMAIL_USER,\n      to: email,\n      subject: `🎮 Texture Pack \"${textureName}\" พร้อมแล้ว!`,\n      html: `\n        <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\n          <h2 style=\"color: #4CAF50;\">🎉 Texture Pack ของคุณพร้อมแล้ว!</h2>\n          <p>สวัสดีครับ!</p>\n          <p>Texture Pack \"<strong>${textureName}</strong>\" ของคุณได้สร้างเสร็จแล้ว</p>\n          <div style=\"text-align: center; margin: 20px 0;\">\n            <a href=\"${downloadUrl}\"\n               style=\"background-color: #4CAF50; color: white; padding: 12px 24px;\n                      text-decoration: none; border-radius: 8px; font-weight: bold;\">\n              📦 ดาวน์โหลดเลย\n            </a>\n          </div>\n          <p style=\"color: #666; font-size: 12px;\">\n            หมายเหตุ: ลิงก์นี้จะหมดอายุภายใน 24 ชั่วโมง\n          </p>\n          <hr>\n          <p style=\"color: #888; font-size: 12px;\">\n            ขอบคุณที่ใช้บริการ BetMC UI Generator!\n          </p>\n        </div>\n      `\n    };\n\n    await transporter.sendMail(mailOptions);\n    console.log(`✅ ส่งอีเมลแจ้งเตือนไปยัง ${email} แล้ว`);\n  } catch (error) {\n    console.error('❌ ไม่สามารถส่งอีเมลได้:', error);\n  }\n}\n\n// SSE Progress endpoint\napp.get('/progress/:sessionId', (req, res) => {\n  const sessionId = req.params.sessionId;\n\n  res.writeHead(200, {\n    'Content-Type': 'text/event-stream',\n    'Cache-Control': 'no-cache',\n    'Connection': 'keep-alive',\n    'Access-Control-Allow-Origin': '*'\n  });\n\n  progressClients.set(sessionId, res);\n\n  req.on('close', () => {\n    progressClients.delete(sessionId);\n  });\n});\n\n// Socket.IO connections\nio.on('connection', (socket) => {\n  console.log('Client connected:', socket.id);\n  systemStats.connectedUsers++;\n  \n  // Notify about user joining chat\n  io.emit('chat-user-joined', { userId: socket.id });\n\n  // Send current config to new connections\n  socket.emit('config-update', {\n    gifUrl: adminConfig.gifUrl,\n    primaryColor: adminConfig.primaryColor,\n    secondaryColor: adminConfig.secondaryColor,\n    accentColor: adminConfig.accentColor,\n    uploadEnabled: adminConfig.uploadEnabled,\n    youtubeEnabled: adminConfig.youtubeEnabled,\n    announcement: adminConfig.announcement\n  });\n\n  // Debug: Log admin config hash for debugging\n  console.log('🔐 Current admin password hash exists:', !!adminConfig.password);\n  console.log('🔐 Hash length:', adminConfig.password ? adminConfig.password.length : 0);\n\n  // Admin authentication\n  socket.on('admin-login', async (data) => {\n    console.log('🔑 Admin login attempt from socket:', socket.id);\n    console.log('📦 Login data:', data);\n\n    try {\n      // ถ้ายังไม่ได้ตั้งรหัสผ่าน ให้ใส่อะไรก็ได้เข้าได้\n      if (adminConfig.isFirstLogin || !adminConfig.password) {\n        console.log('🔓 First login - accepting any password');\n        adminSessions.add(socket.id);\n        socket.emit('admin-login-success');\n        socket.emit('admin-config', { ...adminConfig, needPasswordSetup: true });\n\n        // Join admin room for real-time updates\n        socket.join('admin-room');\n        console.log('🏠 Socket joined admin room (first login)');\n      } else {\n        // ตรวจสอบรหัสผ่านปกติ\n        const isValid = await bcrypt.compare(data.password, adminConfig.password);\n        console.log('🔐 Password validation result:', isValid);\n\n        if (isValid) {\n          console.log('✅ Admin login successful for socket:', socket.id);\n          adminSessions.add(socket.id);\n          socket.emit('admin-login-success');\n          socket.emit('admin-config', { ...adminConfig, needPasswordSetup: false });\n\n          // Join admin room for real-time updates\n          socket.join('admin-room');\n          console.log('🏠 Socket joined admin room');\n        } else {\n          console.log('❌ Admin login failed - wrong password for socket:', socket.id);\n          socket.emit('admin-login-failed', { reason: 'Invalid password' });\n        }\n      }\n    } catch (error) {\n      console.error('💥 Admin login error:', error);\n      socket.emit('admin-login-failed', { reason: 'Server error' });\n    }\n  });\n\n  // Admin get config (for debugging without password)\n  socket.on('admin-get-config', () => {\n    console.log('📄 Sending admin config to socket:', socket.id);\n    socket.emit('admin-config', adminConfig);\n  });\n\n  // Admin config updates\n  socket.on('admin-update-config', (data) => {\n    if (!adminSessions.has(socket.id)) {\n      console.log('❌ Unauthorized config update attempt from', socket.id);\n      return;\n    }\n\n    console.log('✅ Admin config update:', data); // Debug log\n\n    Object.keys(data).forEach(key => {\n      if (key !== 'password' && adminConfig.hasOwnProperty(key)) {\n        console.log(`Updating ${key}: ${adminConfig[key]} -> ${data[key]}`);\n        adminConfig[key] = data[key];\n      }\n    });\n\n    saveAdminConfig();\n\n    const configUpdate = {\n      gifUrl: adminConfig.gifUrl,\n      primaryColor: adminConfig.primaryColor,\n      secondaryColor: adminConfig.secondaryColor,\n      accentColor: adminConfig.accentColor,\n      uploadEnabled: adminConfig.uploadEnabled,\n      youtubeEnabled: adminConfig.youtubeEnabled,\n      announcement: adminConfig.announcement\n    };\n\n    console.log('📡 Broadcasting config update:', configUpdate);\n\n    // Broadcast to all clients\n    io.emit('config-update', configUpdate);\n\n    // Send confirmation back to admin\n    socket.emit('config-update-success', configUpdate);\n  });\n\n  // Password setup for first time\n  socket.on('admin-setup-password', async (data) => {\n    if (!adminSessions.has(socket.id)) return;\n\n    try {\n      const hashedPassword = await bcrypt.hash(data.newPassword, 10);\n      adminConfig.password = hashedPassword;\n      adminConfig.isFirstLogin = false;\n      saveAdminConfig();\n      console.log('🔒 รหัสผ่านถูกตั้งค่าเรียบร้อยแล้ว');\n      socket.emit('password-setup-success');\n    } catch (error) {\n      console.error('❌ Password setup failed:', error);\n      socket.emit('password-setup-failed');\n    }\n  });\n\n  // Password change (for existing password)\n  socket.on('admin-change-password', async (data) => {\n    if (!adminSessions.has(socket.id)) return;\n\n    try {\n      const hashedPassword = await bcrypt.hash(data.newPassword, 10);\n      adminConfig.password = hashedPassword;\n      saveAdminConfig();\n      socket.emit('password-changed');\n    } catch (error) {\n      socket.emit('password-change-failed');\n    }\n  });\n\n  // Progress tracking\n  socket.on('join-progress', (sessionId) => {\n    console.log(`🔗 Client ${socket.id} joined progress room: progress-${sessionId}`);\n    socket.join(`progress-${sessionId}`);\n\n    // Send initial progress to confirm connection\n    socket.emit('progress-update', {\n      step: 0,\n      progress: 0,\n      message: 'เชื่อมต่อแล้ว รอการประมวลผล...',\n      timeLeft: null\n    });\n  });\n\n  // File management handlers\n  socket.on('admin-get-file-stats', async () => {\n    if (!adminSessions.has(socket.id)) return;\n\n    try {\n      const stats = await getFileStats();\n      socket.emit('file-stats-update', stats);\n    } catch (error) {\n      addErrorLog('error', `Failed to get file stats: ${error.message}`);\n      socket.emit('error', 'Failed to get file statistics');\n    }\n  });\n\n  socket.on('admin-cleanup-files', async () => {\n    if (!adminSessions.has(socket.id)) return;\n\n    try {\n      systemStats.activeProcesses++;\n      addErrorLog('info', '🚀 Admin เริ่มล้างไฟล์เก่าด้วยตนเอง...');\n      const result = await performFileCleanup();\n      socket.emit('cleanup-completed', result);\n      addErrorLog('success', `✅ การล้างไฟล์สำเร็จ: ${result.message}`);\n      systemStats.activeProcesses--;\n    } catch (error) {\n      addErrorLog('error', `❌ การล้างไฟล์ล้มเหลว: ${error.message}`);\n      socket.emit('cleanup-failed', { error: error.message });\n      systemStats.activeProcesses--;\n    }\n  });\n\n  socket.on('admin-emergency-cleanup', async () => {\n    if (!adminSessions.has(socket.id)) return;\n\n    try {\n      systemStats.activeProcesses++;\n      const result = await performEmergencyCleanup();\n      socket.emit('emergency-cleanup-completed', result);\n      systemStats.activeProcesses--;\n    } catch (error) {\n      addErrorLog('error', `Emergency cleanup failed: ${error.message}`);\n      socket.emit('error', 'Emergency cleanup failed');\n      systemStats.activeProcesses--;\n    }\n  });\n\n  // System monitoring handlers\n  socket.on('admin-get-system-stats', () => {\n    if (!adminSessions.has(socket.id)) return;\n\n    systemStats.uptime = Math.floor((Date.now() - systemStats.startTime) / 1000);\n    systemStats.connectedUsers = io.engine.clientsCount;\n    socket.emit('system-stats-update', systemStats);\n  });\n\n  // Error log handlers\n  socket.on('admin-get-error-logs', () => {\n    if (!adminSessions.has(socket.id)) return;\n    socket.emit('error-logs-update', errorLogs);\n  });\n\n  socket.on('admin-clear-error-logs', () => {\n    if (!adminSessions.has(socket.id)) return;\n    errorLogs = [];\n    socket.emit('error-logs-cleared');\n  });\n\n  // Backup & Restore handlers\n  socket.on('admin-create-backup', (options) => {\n    if (!adminSessions.has(socket.id)) return;\n\n    try {\n      const backupData = {\n        timestamp: Date.now(),\n        version: '1.0',\n        data: {}\n      };\n\n      if (options.includeConfig) {\n        backupData.data.config = adminConfig;\n        backupData.data.advancedSettings = advancedSettings;\n      }\n\n      if (options.includeAnalytics) {\n        backupData.data.analytics = {\n          totalUsersToday: analyticsData.totalUsersToday,\n          totalDownloads: analyticsData.totalDownloads,\n          hourlyUsage: analyticsData.hourlyUsage,\n          textureTypes: analyticsData.textureTypes\n        };\n      }\n\n      if (options.includeLogs) {\n        backupData.data.errorLogs = errorLogs.slice(0, 100); // Last 100 logs\n      }\n\n      socket.emit('backup-created', backupData);\n      addActivity('backup_created', 'System backup created by admin');\n\n    } catch (error) {\n      addErrorLog('error', `Backup creation failed: ${error.message}`);\n      socket.emit('backup-restore-failed', { message: error.message });\n    }\n  });\n\n  socket.on('admin-restore-backup', (backupData) => {\n    if (!adminSessions.has(socket.id)) return;\n\n    try {\n      if (backupData.data.config) {\n        adminConfig = { ...adminConfig, ...backupData.data.config };\n        saveAdminConfig();\n      }\n\n      if (backupData.data.advancedSettings) {\n        advancedSettings = { ...advancedSettings, ...backupData.data.advancedSettings };\n        saveAdvancedSettings();\n      }\n\n      if (backupData.data.analytics) {\n        Object.assign(analyticsData, backupData.data.analytics);\n      }\n\n      if (backupData.data.errorLogs) {\n        errorLogs = backupData.data.errorLogs;\n      }\n\n      socket.emit('backup-restored');\n      addActivity('backup_restored', 'System backup restored by admin');\n\n      // Broadcast config updates\n      io.emit('config-update', {\n        gifUrl: adminConfig.gifUrl,\n        primaryColor: adminConfig.primaryColor,\n        secondaryColor: adminConfig.secondaryColor,\n        accentColor: adminConfig.accentColor,\n        uploadEnabled: adminConfig.uploadEnabled,\n        youtubeEnabled: adminConfig.youtubeEnabled,\n        announcement: adminConfig.announcement\n      });\n\n    } catch (error) {\n      addErrorLog('error', `Backup restore failed: ${error.message}`);\n      socket.emit('backup-restore-failed', { message: error.message });\n    }\n  });\n\n  // Rate limiting handlers\n  socket.on('admin-block-ip', (data) => {\n    if (!adminSessions.has(socket.id)) return;\n\n    rateLimitData.blockedIPs.add(data.ip);\n    socket.emit('ip-blocked');\n    addActivity('ip_blocked', `IP ${data.ip} blocked by admin`);\n  });\n\n  socket.on('admin-unblock-ip', (data) => {\n    if (!adminSessions.has(socket.id)) return;\n\n    rateLimitData.blockedIPs.delete(data.ip);\n    socket.emit('rate-limit-stats', getRateLimitStats());\n    addActivity('ip_unblocked', `IP ${data.ip} unblocked by admin`);\n  });\n\n  socket.on('admin-get-rate-limit-stats', () => {\n    if (!adminSessions.has(socket.id)) return;\n    socket.emit('rate-limit-stats', getRateLimitStats());\n  });\n\n  // Queue management handlers\n  socket.on('admin-pause-queue', () => {\n    if (!adminSessions.has(socket.id)) return;\n    queueSystem.paused = true;\n    socket.emit('queue-paused');\n    addActivity('queue_paused', 'Processing queue paused by admin');\n  });\n\n  socket.on('admin-resume-queue', () => {\n    if (!adminSessions.has(socket.id)) return;\n    queueSystem.paused = false;\n    socket.emit('queue-resumed');\n    addActivity('queue_resumed', 'Processing queue resumed by admin');\n  });\n\n  socket.on('admin-clear-queue', () => {\n    if (!adminSessions.has(socket.id)) return;\n\n    queueSystem.items = [];\n    socket.emit('queue-cleared');\n    addActivity('queue_cleared', 'Processing queue cleared by admin');\n  });\n\n  socket.on('admin-cancel-queue-item', (data) => {\n    if (!adminSessions.has(socket.id)) return;\n\n    queueSystem.items = queueSystem.items.filter(item => item.id !== data.id);\n    socket.emit('queue-stats', getQueueStats());\n    addActivity('queue_item_cancelled', `Queue item ${data.id} cancelled by admin`);\n  });\n\n  // Event management handlers\n  socket.on('admin-create-event', (data) => {\n    if (!adminSessions.has(socket.id)) return;\n\n    try {\n      const event = createEvent(data);\n      socket.emit('event-created', event);\n\n      // Execute event command if provided\n      if (data.command) {\n        executeEventCommand(data.command, event);\n      }\n    } catch (error) {\n      socket.emit('event-create-failed', { error: error.message });\n    }\n  });\n\n  socket.on('admin-get-events', () => {\n    if (!adminSessions.has(socket.id)) return;\n    socket.emit('events-list', eventSystem.events);\n  });\n\n  socket.on('admin-delete-event', (data) => {\n    if (!adminSessions.has(socket.id)) return;\n\n    eventSystem.events = eventSystem.events.filter(e => e.id !== data.eventId);\n    saveEventSystem();\n\n    io.emit('event-deleted', data.eventId);\n    socket.emit('event-deleted-success');\n    addActivity('event_deleted', `🗑️ ลบอีเว้นท์ ID: ${data.eventId}`);\n  });\n\n  socket.on('admin-toggle-event', (data) => {\n    if (!adminSessions.has(socket.id)) return;\n\n    const event = eventSystem.events.find(e => e.id === data.eventId);\n    if (event) {\n      event.isActive = data.active;\n      saveEventSystem();\n\n      io.emit('event-toggled', { eventId: data.eventId, active: data.active });\n      socket.emit('event-toggled-success');\n      addActivity('event_toggled', `🔄 อีเว้นท์ ${event.title} ${data.active ? 'เปิดใช้งาน' : 'ปิดใช้งาน'}`);\n    }\n  });\n\n  socket.on('admin-execute-command', (data) => {\n    if (!adminSessions.has(socket.id)) return;\n\n    try {\n      executeEventCommand(data.command, { title: 'Manual Command' });\n      socket.emit('command-executed', { success: true });\n    } catch (error) {\n      socket.emit('command-executed', { success: false, error: error.message });\n    }\n  });\n\n  // Chat System Events\n  socket.on('chat-message', (messageData) => {\n    console.log('💬 Chat message from user:', socket.id);\n    \n    // Broadcast to all connected clients including admin\n    io.emit('chat-message', {\n      ...messageData,\n      timestamp: Date.now()\n    });\n    \n    // Also send to admin room specifically\n    io.to('admin-room').emit('chat-message', {\n      ...messageData,\n      timestamp: Date.now()\n    });\n  });\n\n  socket.on('admin-chat-message', (messageData) => {\n    console.log('💬 Chat message from admin:', socket.id);\n    \n    // Only admins can send admin messages\n    if (adminSessions.has(socket.id)) {\n      // Broadcast to all connected clients\n      io.emit('admin-chat-message', {\n        ...messageData,\n        timestamp: Date.now()\n      });\n    }\n  });\n\n  // Media Control Events\n  socket.on('media-play', (mediaData) => {\n    console.log('🎵 Media play request from admin:', socket.id);\n    \n    // Only admins can control media\n    if (adminSessions.has(socket.id)) {\n      console.log('📺 Broadcasting media play to all clients:', mediaData);\n      \n      // Broadcast to all connected clients except admin\n      socket.broadcast.emit('media-play', mediaData);\n      \n      // Update status in admin\n      socket.emit('media-control-status', {\n        action: 'play',\n        media: mediaData\n      });\n    }\n  });\n\n  socket.on('media-pause', () => {\n    console.log('⏸️ Media pause request from admin:', socket.id);\n    \n    if (adminSessions.has(socket.id)) {\n      socket.broadcast.emit('media-pause');\n      socket.emit('media-control-status', { action: 'pause' });\n    }\n  });\n\n  socket.on('media-stop', () => {\n    console.log('⏹️ Media stop request from admin:', socket.id);\n    \n    if (adminSessions.has(socket.id)) {\n      socket.broadcast.emit('media-stop');\n      socket.emit('media-control-status', { action: 'stop' });\n    }\n  });\n\n  socket.on('media-volume', (volumeData) => {\n    console.log('🔊 Media volume change from admin:', socket.id, volumeData);\n    \n    if (adminSessions.has(socket.id)) {\n      socket.broadcast.emit('media-volume', volumeData);\n    }\n  });\n\n  socket.on('disconnect', () => {\n    adminSessions.delete(socket.id);\n    systemStats.connectedUsers = Math.max(0, systemStats.connectedUsers - 1);\n    console.log('Client disconnected:', socket.id);\n    \n    // Notify about user leaving chat\n    io.emit('chat-user-left', { userId: socket.id });\n  });\n});\n\n// File management functions\nasync function getFileStats() {\n  const stats = {\n    uploadFiles: 0,\n    outputFiles: 0,\n    zipFiles: 0,\n    diskUsage: 0,\n    recentActivity: []\n  };\n\n  try {\n    // Count upload files\n    if (fs.existsSync('uploads')) {\n      const uploadFiles = fs.readdirSync('uploads');\n      stats.uploadFiles = uploadFiles.length;\n\n      // Calculate disk usage for uploads\n      for (const file of uploadFiles) {\n        const filePath = path.join('uploads', file);\n        try {\n          const stat = fs.statSync(filePath);\n          stats.diskUsage += stat.size;\n\n          // Add to recent activity if modified in last hour\n          if (Date.now() - stat.mtime.getTime() < 3600000) {\n            stats.recentActivity.push({\n              time: stat.mtime.getTime(),\n              message: `Upload: ${file} (${formatBytes(stat.size)})`\n            });\n          }\n        } catch (err) {\n          console.warn(`Could not stat file: ${filePath}`);\n        }\n      }\n    }\n\n    // Count output files\n    if (fs.existsSync('output')) {\n      const countOutputFiles = (dir) => {\n        let count = 0;\n        try {\n          const items = fs.readdirSync(dir);\n          for (const item of items) {\n            const itemPath = path.join(dir, item);\n            const stat = fs.statSync(itemPath);\n            if (stat.isDirectory()) {\n              count += countOutputFiles(itemPath);\n            } else {\n              count++;\n              stats.diskUsage += stat.size;\n\n              // Add to recent activity if modified in last hour\n              if (Date.now() - stat.mtime.getTime() < 3600000) {\n                stats.recentActivity.push({\n                  time: stat.mtime.getTime(),\n                  message: `Output: ${item} (${formatBytes(stat.size)})`\n                });\n              }\n            }\n          }\n        } catch (err) {\n          console.warn(`Could not read directory: ${dir}`);\n        }\n        return count;\n      };\n      stats.outputFiles = countOutputFiles('output');\n    }\n\n    // Count zip files\n    if (fs.existsSync('zips')) {\n      const zipFiles = fs.readdirSync('zips').filter(file => file.endsWith('.zip'));\n      stats.zipFiles = zipFiles.length;\n\n      for (const file of zipFiles) {\n        const filePath = path.join('zips', file);\n        try {\n          const stat = fs.statSync(filePath);\n          stats.diskUsage += stat.size;\n\n          // Add to recent activity if modified in last hour\n          if (Date.now() - stat.mtime.getTime() < 3600000) {\n            stats.recentActivity.push({\n              time: stat.mtime.getTime(),\n              message: `Zip created: ${file} (${formatBytes(stat.size)})`\n            });\n          }\n        } catch (err) {\n          console.warn(`Could not stat zip file: ${filePath}`);\n        }\n      }\n    }\n\n    // Sort recent activity by time (newest first)\n    stats.recentActivity.sort((a, b) => b.time - a.time);\n\n  } catch (error) {\n    addErrorLog('error', `Error getting file stats: ${error.message}`);\n    throw error;\n  }\n\n  return stats;\n}\n\nasync function performFileCleanup() {\n  const cleaner = require('./cleaner');\n  let cleanedFiles = 0;\n  let freedSpace = 0;\n\n  try {\n    // Run standard cleanup\n    const beforeStats = await getFileStats();\n\n    // Run manual cleanup by cleaning old files\n    await performManualCleanup();\n\n    const afterStats = await getFileStats();\n    cleanedFiles = (beforeStats.uploadFiles + beforeStats.outputFiles + beforeStats.zipFiles) -\n                   (afterStats.uploadFiles + afterStats.outputFiles + afterStats.zipFiles);\n    freedSpace = beforeStats.diskUsage - afterStats.diskUsage;\n\n    addErrorLog('info', `Cleanup completed: ${cleanedFiles} files removed, ${formatBytes(freedSpace)} freed`);\n\n    return {\n      success: true,\n      message: `${cleanedFiles} files cleaned, ${formatBytes(freedSpace)} freed`,\n      cleanedFiles,\n      freedSpace\n    };\n  } catch (error) {\n    addErrorLog('error', `Cleanup failed: ${error.message}`);\n    throw error;\n  }\n}\n\nasync function performEmergencyCleanup() {\n  const cleaner = require('./cleaner');\n  let cleanedFiles = 0;\n  let freedSpace = 0;\n\n  try {\n    const beforeStats = await getFileStats();\n\n    // Run emergency cleanup\n    if (cleaner && cleaner.emergencyCleanup) {\n      await cleaner.emergencyCleanup();\n    }\n\n    const afterStats = await getFileStats();\n    cleanedFiles = (beforeStats.uploadFiles + beforeStats.outputFiles + beforeStats.zipFiles) -\n                   (afterStats.uploadFiles + afterStats.outputFiles + afterStats.zipFiles);\n    freedSpace = beforeStats.diskUsage - afterStats.diskUsage;\n\n    addErrorLog('warning', `Emergency cleanup completed: ${cleanedFiles} files removed, ${formatBytes(freedSpace)} freed`);\n\n    return {\n      success: true,\n      message: `${cleanedFiles} files emergency cleaned, ${formatBytes(freedSpace)} freed`,\n      cleanedFiles,\n      freedSpace\n    };\n  } catch (error) {\n    addErrorLog('error', `Emergency cleanup failed: ${error.message}`);\n    throw error;\n  }\n}\n\n// Manual cleanup function with real-time admin updates\nasync function performManualCleanup() {\n  const now = Date.now();\n  const oneHour = 60 * 60 * 1000; // 1 hour in ms\n  const oneDay = 24 * 60 * 60 * 1000; // 1 day in ms\n\n  let deletedCount = 0;\n  let freedSpace = 0;\n\n  // Send initial cleanup status to admin\n  addErrorLog('info', '🧹 เริ่มต้นการล้างไฟล์เก่า...');\n\n  try {\n    // Clean uploads older than 1 hour\n    addErrorLog('info', '📁 กำลังตรวจสอบโฟลเดอร์ uploads...');\n    if (fs.existsSync('uploads')) {\n      const files = fs.readdirSync('uploads');\n      addErrorLog('info', `พบไฟล์ใน uploads: ${files.length} ไฟล์`);\n\n      for (const file of files) {\n        const filePath = path.join('uploads', file);\n        try {\n          const stats = fs.statSync(filePath);\n          const fileAge = now - stats.mtime.getTime();\n          const fileSize = stats.size;\n\n          if (fileAge > oneHour) {\n            fs.unlinkSync(filePath);\n            deletedCount++;\n            freedSpace += fileSize;\n            addErrorLog('info', `🗑️ ลบไฟล์: ${file} (${formatBytes(fileSize)}, อายุ ${Math.round(fileAge / (60 * 1000))} นาที)`);\n          } else {\n            addErrorLog('info', `⏳ เก็บไฟล์: ${file} (อายุ ${Math.round(fileAge / (60 * 1000))} นาที)`);\n          }\n        } catch (err) {\n          addErrorLog('error', `❌ ไม่สามารถเข้าถึงไฟล์: ${file} - ${err.message}`);\n        }\n      }\n    } else {\n      addErrorLog('info', '📁 ไม่พบโฟลเดอร์ uploads');\n    }\n\n    // Clean output files older than 1 day\n    addErrorLog('info', '📁 กำลังตรวจสอบโฟลเดอร์ output...');\n    if (fs.existsSync('output')) {\n      const dirs = fs.readdirSync('output');\n      addErrorLog('info', `พบโฟลเดอร์ใน output: ${dirs.length} โฟลเดอร์`);\n\n      for (const dir of dirs) {\n        const dirPath = path.join('output', dir);\n        try {\n          const stats = fs.statSync(dirPath);\n          const dirAge = now - stats.mtime.getTime();\n\n          if (stats.isDirectory() && dirAge > oneDay) {\n            // Calculate directory size before deletion\n            const dirSize = getDirSize(dirPath);\n            fs.rmSync(dirPath, { recursive: true, force: true });\n            deletedCount++;\n            freedSpace += dirSize;\n            addErrorLog('info', `🗑️ ลบโฟลเดอร์: ${dir} (${formatBytes(dirSize)}, อายุ ${Math.round(dirAge / (24 * 60 * 60 * 1000))} วัน)`);\n          } else {\n            addErrorLog('info', `⏳ เก็บโฟลเดอร์: ${dir} (อายุ ${Math.round(dirAge / (24 * 60 * 60 * 1000))} วัน)`);\n          }\n        } catch (err) {\n          addErrorLog('error', `❌ ไม่สามารถเข้าถึงโฟลเดอร์: ${dir} - ${err.message}`);\n        }\n      }\n    } else {\n      addErrorLog('info', '📁 ไม่พบโฟลเดอร์ output');\n    }\n\n    // Clean zip files older than 1 day\n    addErrorLog('info', '📁 กำลังตรวจสอบโฟลเดอร์ zips...');\n    if (fs.existsSync('zips')) {\n      const files = fs.readdirSync('zips').filter(file => file.endsWith('.zip'));\n      addErrorLog('info', `พบไฟล์ ZIP: ${files.length} ไฟล์`);\n\n      for (const file of files) {\n        const filePath = path.join('zips', file);\n        try {\n          const stats = fs.statSync(filePath);\n          const fileAge = now - stats.mtime.getTime();\n          const fileSize = stats.size;\n\n          if (fileAge > oneDay) {\n            fs.unlinkSync(filePath);\n            deletedCount++;\n            freedSpace += fileSize;\n            addErrorLog('info', `🗑️ ลบไฟล์: ${file} (${formatBytes(fileSize)}, อายุ ${Math.round(fileAge / (24 * 60 * 60 * 1000))} วัน)`);\n          } else {\n            addErrorLog('info', `⏳ เก็บไฟล์: ${file} (อายุ ${Math.round(fileAge / (24 * 60 * 60 * 1000))} วัน)`);\n          }\n        } catch (err) {\n          addErrorLog('error', `❌ ไม่สามารถเข้าถึงไฟล์: ${file} - ${err.message}`);\n        }\n      }\n    } else {\n      addErrorLog('info', '📁 ไม่พบโฟลเดอร์ zips');\n    }\n\n    const finalMessage = `✅ การล้างไฟล์เสร็จสิ้น: ลบ ${deletedCount} รายการ, ประหยัดพื้นที่ ${formatBytes(freedSpace)}`;\n    console.log(finalMessage);\n    addErrorLog('success', finalMessage);\n\n    return deletedCount;\n\n  } catch (error) {\n    const errorMessage = `❌ เกิดข้อผิดพลาดในการล้างไฟล์: ${error.message}`;\n    console.error(errorMessage);\n    addErrorLog('error', errorMessage);\n    throw error;\n  }\n}\n\n// Helper function to calculate directory size\nfunction getDirSize(dirPath) {\n  let totalSize = 0;\n  try {\n    const items = fs.readdirSync(dirPath);\n    for (const item of items) {\n      const itemPath = path.join(dirPath, item);\n      const stats = fs.statSync(itemPath);\n      if (stats.isDirectory()) {\n        totalSize += getDirSize(itemPath);\n      } else {\n        totalSize += stats.size;\n      }\n    }\n  } catch (err) {\n    // Ignore errors when calculating size\n  }\n  return totalSize;\n}\n\nfunction formatBytes(bytes) {\n  if (bytes === 0) return '0 B';\n  const k = 1024;\n  const sizes = ['B', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}\n\nfunction sendProgress(sessionId, step, progress, message, timeLeft = null) {\n  const data = { step, progress, message, timeLeft };\n\n  console.log(`📊 Progress for ${sessionId}: ${progress}% - ${message}`);\n\n  // ส่งข้อมูล progress ไปยัง admin mode ด้วย\n  addErrorLog('info', `📊 PROGRESS [${sessionId.substring(0,8)}]: ${progress}% - ${message}${timeLeft ? ` (${timeLeft})` : ''}`);\n\n  // Send via Socket.IO\n  io.to(`progress-${sessionId}`).emit('progress-update', data);\n\n  // Send via SSE\n  const client = progressClients.get(sessionId);\n  if (client) {\n    try {\n      client.write(`data: ${JSON.stringify(data)}\\n\\n`);\n    } catch (error) {\n      console.error('❌ SSE write error:', error);\n      progressClients.delete(sessionId);\n    }\n  }\n}\n\n// YouTube download functions\nasync function downloadYouTubeVideo(videoId, outputPath, quality = '720') {\n  try {\n    let format;\n    switch (quality) {\n      case '480':\n        // เลือกคุณภาพ 480p แบบมีความชัดสูงสุด\n        format = 'best[height>=480][height<=480]/best[height<=480]';\n        break;\n      case '720':\n        // เลือกคุณภาพ 720p แบบมีความชัดสูงสุด\n        format = 'best[height>=720][height<=720]/best[height<=720]';\n        break;\n      case '1080':\n        // เลือกคุณภาพ 1080p แบบมีความชัดสูงสุด พร้อม bitrate สูง\n        format = 'best[height>=1080][height<=1080]/best[height<=1080]';\n        break;\n      case 'best':\n        // เลือกคุณภาพสูงสุดที่มีอยู่โดยไม่จำกัดความละเอียด\n        format = 'best[vcodec!=none]/best';\n        break;\n      default:\n        format = 'best[height>=720][height<=720]/best[height<=720]';\n    }\n\n    // เพิ่ม options สำหรับคุณภาพที่ดีขึ้น\n    const options = {\n      format: format,\n      output: outputPath,\n      // เพิ่ม options เพื่อให้ได้คุณภาพดีที่สุด\n      'prefer-free-formats': false,\n      'merge-output-format': 'mp4',\n      // บังคับใช้ codecs ที่มีคุณภาพสูง\n      'format-sort': 'res,fps,vcodec:h264,acodec:aac,vbr,abr',\n      // ให้ความสำคัญกับ bitrate และความละเอียดสูง\n      'format-sort-force': true,\n      // เลือก format ที่มี video และ audio คุณภาพดี\n      'prefer-merged': true\n    };\n\n    await youtubeDl(`https://www.youtube.com/watch?v=${videoId}`, options);\n  } catch (error) {\n    throw new Error('ไม่สามารถดาวน์โหลดวิดีโอจาก YouTube ได้');\n  }\n}\n\nasync function downloadYouTubeAudio(videoId, outputPath) {\n  try {\n    await youtubeDl(`https://www.youtube.com/watch?v=${videoId}`, {\n      format: 'bestaudio[ext=m4a]',\n      output: outputPath\n    });\n  } catch (error) {\n    throw new Error('ไม่สามารถดาวน์โหลดเสียงจาก YouTube ได้');\n  }\n}\n\n// TikTok download functions\nasync function downloadTikTokVideo(url, outputPath, quality = 'best') {\n  try {\n    // Use the same TikTok API library that works for info extraction\n    const Tiktok = await import(\"@tobyg74/tiktok-api-dl\");\n    let result;\n\n    try {\n      result = await Tiktok.default.Downloader(url, { version: \"v2\" });\n    } catch (error) {\n      console.log(\"TikTok v2 failed, trying v1:\", error.message);\n      result = await Tiktok.default.Downloader(url, { version: \"v1\" });\n    }\n\n    if (!result || result.status !== \"success\") {\n      throw new Error(`Failed to get TikTok video data: ${result?.message || 'Unknown error'}`);\n    }\n\n    const data = result.result;\n    let videoUrl;\n\n    // Select video URL based on quality preference\n    if (data?.video?.playAddr && data.video.playAddr.length > 0) {\n      videoUrl = data.video.playAddr[0];\n    } else if (data?.video?.downloadAddr && data.video.downloadAddr.length > 0) {\n      videoUrl = data.video.downloadAddr[0];\n    } else {\n      throw new Error('No video download URL found');\n    }\n\n    console.log(`📥 Downloading TikTok video from: ${videoUrl}`);\n\n    // Download the video file using fetch\n    const response = await fetch(videoUrl, {\n      headers: {\n        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'\n      }\n    });\n\n    if (!response.ok) {\n      throw new Error(`Failed to download video: ${response.status} ${response.statusText}`);\n    }\n\n    // Write the video to file\n    const buffer = await response.buffer();\n    fs.writeFileSync(outputPath, buffer);\n\n    console.log(`✅ TikTok video downloaded successfully to: ${outputPath}`);\n\n  } catch (error) {\n    console.error('TikTok download error:', error);\n    throw new Error('ไม่สามารถดาวน์โหลดวิดีโอจาก TikTok ได้');\n  }\n}\n\nasync function downloadTikTokAudio(url, outputPath) {\n  try {\n    // Use the same TikTok API library that works for info extraction\n    const Tiktok = await import(\"@tobyg74/tiktok-api-dl\");\n    let result;\n\n    try {\n      result = await Tiktok.default.Downloader(url, { version: \"v2\" });\n    } catch (error) {\n      console.log(\"TikTok v2 failed, trying v1:\", error.message);\n      result = await Tiktok.default.Downloader(url, { version: \"v1\" });\n    }\n\n    if (!result || result.status !== \"success\") {\n      throw new Error(`Failed to get TikTok audio data: ${result?.message || 'Unknown error'}`);\n    }\n\n    const data = result.result;\n    let audioUrl;\n\n    // Get audio URL\n    if (data?.music?.playUrl && data.music.playUrl.length > 0) {\n      audioUrl = data.music.playUrl[0];\n    } else {\n      throw new Error('No audio download URL found');\n    }\n\n    console.log(`📥 Downloading TikTok audio from: ${audioUrl}`);\n\n    // Download the audio file using fetch\n    const response = await fetch(audioUrl, {\n      headers: {\n        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'\n      }\n    });\n\n    if (!response.ok) {\n      throw new Error(`Failed to download audio: ${response.status} ${response.statusText}`);\n    }\n\n    // Write the audio to file\n    const buffer = await response.buffer();\n    fs.writeFileSync(outputPath, buffer);\n\n    console.log(`✅ TikTok audio downloaded successfully to: ${outputPath}`);\n\n  } catch (error) {\n    console.error('TikTok audio download error:', error);\n    throw new Error('ไม่สามารถดาวน์โหลดเสียงจาก TikTok ได้');\n  }\n}\n\n// Extract TikTok video ID from URL\nfunction extractTikTokId(url) {\n  if (!url) return null;\n\n  // Handle various TikTok URL formats including vt.tiktok.com\n  const patterns = [\n    /(?:https?:\\/\\/)?(?:www\\.)?tiktok\\.com\\/@[\\w.-]+\\/video\\/(\\d+)/,\n    /(?:https?:\\/\\/)?(?:www\\.)?tiktok\\.com\\/t\\/([A-Za-z0-9]+)/,\n    /(?:https?:\\/\\/)?vm\\.tiktok\\.com\\/([A-Za-z0-9]+)/,\n    /(?:https?:\\/\\/)?vt\\.tiktok\\.com\\/([A-Za-z0-9]+)/,\n    /(?:https?:\\/\\/)?(?:www\\.)?tiktok\\.com\\/v\\/(\\d+)/\n  ];\n\n  for (const pattern of patterns) {\n    const match = url.match(pattern);\n    if (match) return match[1];\n  }\n\n  return null;\n}\n\n// Main upload endpoint\napp.post('/upload', upload.fields([\n  { name: 'video' },\n  { name: 'audio' },\n  { name: 'icon' }\n]), async (req, res) => {\n  systemStats.totalRequests++;\n\n  if (!adminConfig.uploadEnabled && !adminConfig.youtubeEnabled) {\n    addErrorLog('warning', 'Upload attempt rejected: Service disabled');\n    return res.status(403).json({ error: 'Service temporarily disabled' });\n  }\n\n  const sessionId = generateNamespace();\n\n  try {\n    const fps = parseFloat(req.body.fps);\n    const quality = parseInt(req.body.quality);\n    const textureName = req.body.textureName || 'Custom Texture';\n    const userEmail = req.body.email;\n    const youtubeVideoId = req.body.youtubeVideoId;\n    const youtubeQuality = req.body.youtubeQuality || '720';\n    const useYoutubeAudio = req.body.useYoutubeAudio === 'true';\n    const youtubeAudioId = req.body.youtubeAudioId;\n\n    // TikTok parameters\n    const tiktokUrl = req.body.tiktokUrl;\n    const tiktokQuality = req.body.tiktokQuality || 'best';\n    const useTiktokAudio = req.body.useTiktokAudio === 'true';\n    const tiktokAudioUrl = req.body.tiktokAudioUrl;\n\n    if (isNaN(fps) || isNaN(quality)) {\n      return res.status(400).json({ error: 'Invalid fps or quality value' });\n    }\n\n    // Check if YouTube is disabled but YouTube ID provided\n    if (!adminConfig.youtubeEnabled && youtubeVideoId) {\n      return res.status(403).json({ error: 'YouTube downloads are currently disabled' });\n    }\n\n    // Check if TikTok URL provided but YouTube disabled (using same setting for now)\n    if (!adminConfig.youtubeEnabled && tiktokUrl) {\n      return res.status(403).json({ error: 'TikTok downloads are currently disabled' });\n    }\n\n    // Check if upload is disabled but files provided\n    if (!adminConfig.uploadEnabled && req.files.video) {\n      return res.status(403).json({ error: 'File uploads are currently disabled' });\n    }\n\n    res.json({ sessionId });\n\n    const namespace = generateNamespace();\n    const outputDir = path.join('output', namespace);\n    const frameDir = path.join(outputDir, 'subpacks/1080/betmc_background/betmc_background_frame');\n    fs.mkdirSync(frameDir, { recursive: true });\n\n    sendProgress(sessionId, 1, 5, 'เริ่มต้นการประมวลผล...');\n\n    let videoPath;\n    let audioPath;\n\n    // YouTube video handling\n    if (youtubeVideoId && adminConfig.youtubeEnabled) {\n      sendProgress(sessionId, 2, 10, `กำลังดาวน์โหลดวิดีโอจาก YouTube (${youtubeQuality}p)...`);\n      const downloadPath = path.join('uploads', `${namespace}_youtube.%(ext)s`);\n      await downloadYouTubeVideo(youtubeVideoId, downloadPath, youtubeQuality);\n\n      const videoFiles = fs.readdirSync('uploads').filter(f => f.startsWith(`${namespace}_youtube.`));\n      if (videoFiles.length === 0) {\n        throw new Error('ไม่สามารถดาวน์โหลดวิดีโอจาก YouTube ได้');\n      }\n      videoPath = path.join('uploads', videoFiles[0]);\n\n      if (useYoutubeAudio) {\n        sendProgress(sessionId, 2, 12, 'กำลังดาวน์โหลดเสียงจาก YouTube...');\n        const audioDownloadPath = path.join('uploads', `${namespace}_audio.%(ext)s`);\n        await downloadYouTubeAudio(youtubeVideoId, audioDownloadPath);\n\n        const audioFiles = fs.readdirSync('uploads').filter(f => f.startsWith(`${namespace}_audio.`));\n        if (audioFiles.length > 0) {\n          audioPath = path.join('uploads', audioFiles[0]);\n        }\n      }\n\n      if (youtubeAudioId) {\n        sendProgress(sessionId, 2, 14, 'กำลังดาวน์โหลดเสียงจาก YouTube...');\n        const audioDownloadPath = path.join('uploads', `${namespace}_separate_audio.%(ext)s`);\n        await downloadYouTubeAudio(youtubeAudioId, audioDownloadPath);\n\n        const audioFiles = fs.readdirSync('uploads').filter(f => f.startsWith(`${namespace}_separate_audio.`));\n        if (audioFiles.length > 0) {\n          audioPath = path.join('uploads', audioFiles[0]);\n        }\n      }\n    } else if (tiktokUrl && adminConfig.youtubeEnabled) {\n      // TikTok video handling\n      sendProgress(sessionId, 2, 10, `กำลังดาวน์โหลดวิดีโอจาก TikTok (${tiktokQuality})...`);\n      const downloadPath = path.join('uploads', `${namespace}_tiktok.mp4`);\n      await downloadTikTokVideo(tiktokUrl, downloadPath, tiktokQuality);\n\n      if (!fs.existsSync(downloadPath)) {\n        throw new Error('ไม่สามารถดาวน์โหลดวิดีโอจาก TikTok ได้');\n      }\n      videoPath = downloadPath;\n\n      if (useTiktokAudio) {\n        sendProgress(sessionId, 2, 12, 'กำลังดาวน์โหลดเสียงจาก TikTok...');\n        const audioDownloadPath = path.join('uploads', `${namespace}_tiktok_audio.mp3`);\n        await downloadTikTokAudio(tiktokUrl, audioDownloadPath);\n\n        if (fs.existsSync(audioDownloadPath)) {\n          audioPath = audioDownloadPath;\n        }\n      }\n\n      if (tiktokAudioUrl) {\n        sendProgress(sessionId, 2, 14, 'กำลังดาวน์โหลดเสียงแยกต่างหากจาก TikTok...');\n        const audioDownloadPath = path.join('uploads', `${namespace}_separate_tiktok_audio.mp3`);\n        await downloadTikTokAudio(tiktokAudioUrl, audioDownloadPath);\n\n        if (fs.existsSync(audioDownloadPath)) {\n          audioPath = audioDownloadPath;\n        }\n      }\n    } else if (req.files.video && adminConfig.uploadEnabled) {\n      videoPath = req.files.video[0].path;\n    } else {\n      throw new Error('กรุณาอัปโหลดไฟล์วิดีโอหรือใส่ URL YouTube/TikTok');\n    }\n\n    const finalAudioPath = audioPath || (req.files.audio ? req.files.audio[0].path : null);\n\n    sendProgress(sessionId, 3, 15, 'กำลังแยกเฟรมจากวิดีโอ...');\n    // ปรับปรุงการแยกเฟรมให้คงคุณภาพสูงสุด\n    execSync(`${FFMPEG_PATH} -i ${escapePath(videoPath)} -vf fps=${fps},scale=-1:-1:flags=lanczos -q:v 1 -compression_level 0 ${escapePath(path.join(frameDir, 'betmc_img_%d_frame.png'))}`);\n\n    // Clean up downloaded video files\n    if ((youtubeVideoId || tiktokUrl) && fs.existsSync(videoPath)) {\n      fs.unlinkSync(videoPath);\n    }\n\n    const frames = fs.readdirSync(frameDir).filter(f => f.endsWith('.png'));\n    sendProgress(sessionId, 4, 25, `พบ ${frames.length} เฟรม กำลังบีบอัดรูปภาพ...`);\n\n    const totalFrames = frames.length;\n    for (let i = 0; i < frames.length; i++) {\n      const file = frames[i];\n      const input = path.join(frameDir, file);\n      const output = path.join(frameDir, `compressed_${file.replace('.png', '.jpg')}`);\n      // ปรับปรุงการบีบอัดรูปภาพให้คงคุณภาพดีขึ้น\n      execSync(`${MAGICK_PATH} ${escapePath(input)} -strip -quality ${quality} -sampling-factor 1x1 -colorspace RGB ${escapePath(output)}`);\n      fs.unlinkSync(input);\n\n      const progress = 25 + Math.floor((i + 1) / totalFrames * 25);\n      const timeLeft = Math.ceil((totalFrames - i - 1) * 0.5);\n      sendProgress(sessionId, 4, progress, `บีบอัดเฟรม ${i + 1}/${totalFrames}`, timeLeft);\n    }\n\n    sendProgress(sessionId, 5, 50, 'จัดระเบียบไฟล์...');\n    fs.readdirSync(frameDir).forEach(file => {\n      if (file.startsWith('compressed_')) {\n        fs.renameSync(\n          path.join(frameDir, file),\n          path.join(frameDir, file.replace('compressed_', ''))\n        );\n      }\n    });\n\n    const frame60 = path.join(frameDir, 'betmc_img_60_frame.jpg');\n    const staticPatch = path.join(outputDir, 'subpacks/0/betmc_background/betmc_background_static_patch.jpg');\n    fs.mkdirSync(path.dirname(staticPatch), { recursive: true });\n    if (fs.existsSync(frame60)) {\n      fs.copyFileSync(frame60, staticPatch);\n    }\n\n    sendProgress(sessionId, 6, 55, 'ดาวน์โหลด manifest.json...');\n    const manifestUrl = req.body.manifestUrl || 'https://raw.githubusercontent.com/HEENAO9k/Sounds/main/manifest.json';\n    const manifestResponse = await fetch(manifestUrl);\n    if (!manifestResponse.ok) throw new Error(`Failed to fetch manifest.json from ${manifestUrl}`);\n    const manifestText = await manifestResponse.text();\n    const manifest = JSON.parse(manifestText);\n\n    manifest.header.name = textureName;\n    manifest.header.uuid = crypto.randomUUID();\n    manifest.modules[0].uuid = crypto.randomUUID();\n\n    const manifestPath = path.join(outputDir, 'manifest.json');\n    fs.writeFileSync(manifestPath, JSON.stringify(manifest, null, 2));\n\n    sendProgress(sessionId, 7, 60, 'ดาวน์โหลดไฟล์เสียง...');\n    const soundsZipUrl = req.body.soundsZipUrl || 'https://github.com/HEENAO9k/Sounds/raw/main/sounds.zip';\n    const soundsResponse = await fetch(soundsZipUrl);\n    if (!soundsResponse.ok) throw new Error(`Failed to fetch sounds.zip from ${soundsZipUrl}`);\n\n    const soundsZipPath = path.join('uploads', `${namespace}_sounds.zip`);\n    const soundsZipStream = fs.createWriteStream(soundsZipPath);\n    await new Promise((resolve, reject) => {\n      soundsResponse.body.pipe(soundsZipStream);\n      soundsResponse.body.on('error', reject);\n      soundsZipStream.on('finish', resolve);\n    });\n\n    sendProgress(sessionId, 8, 65, 'แตกไฟล์เสียง...');\n    await fs.createReadStream(soundsZipPath)\n      .pipe(unzipper.Extract({ path: path.join(outputDir, 'sounds') }))\n      .promise();\n\n    fs.unlinkSync(soundsZipPath);\n\n    if (finalAudioPath) {\n      sendProgress(sessionId, 9, 70, useYoutubeAudio || youtubeAudioId ? 'แปลงไฟล์เสียงจาก YouTube...' : 'แปลงไฟล์เสียง...');\n\n      // Generate menu music files (improved audio processing from provided file)\n      const audioOutput = path.join(outputDir, 'sounds/music/menu');\n      fs.mkdirSync(audioOutput, { recursive: true });\n      execSync(`${FFMPEG_PATH} -i ${escapePath(finalAudioPath)} -vn -c:a libvorbis ${escapePath(path.join(audioOutput, 'menu1.ogg'))}`);\n\n      // Create menu2-4.ogg files\n      for (let i = 2; i <= 4; i++) {\n        fs.copyFileSync(path.join(audioOutput, 'menu1.ogg'), path.join(audioOutput, `menu${i}.ogg`));\n      }\n\n      // Also create the original game audio\n      const gameAudioDir = path.join(outputDir, 'sounds/music/game/creative');\n      fs.mkdirSync(gameAudioDir, { recursive: true });\n      execSync(`${FFMPEG_PATH} -i ${escapePath(finalAudioPath)} -c:a libvorbis ${escapePath(path.join(gameAudioDir, 'creative1.ogg'))}`);\n\n      // Clean up downloaded audio files\n      if (finalAudioPath.includes('_audio.') || finalAudioPath.includes('_separate_audio.') ||\n          finalAudioPath.includes('_tiktok_audio.') || finalAudioPath.includes('_separate_tiktok_audio.')) {\n        fs.unlinkSync(finalAudioPath);\n      }\n    }\n\n    sendProgress(sessionId, 10, 75, 'คัดลอกไฟล์เพิ่มเติม...');\n    // Copy icon if uploaded\n    if (req.files.icon) {\n      const iconPath = path.join(outputDir, 'pack_icon.png');\n      execSync(`${MAGICK_PATH} ${escapePath(req.files.icon[0].path)} -resize 128x128 ${escapePath(iconPath)}`);\n    }\n\n    sendProgress(sessionId, 11, 80, 'สร้างไฟล์ config...');\n    // Create betmc_config files (from provided file)\n    const config0 = {\n      namespace: 'betmc_config',\n      betmc_main_config: {\n        $betmc_scr_backround_path: 'betmc_background/betmc_background_static_patch'\n      }\n    };\n    const config1080 = {\n      namespace: 'betmc_config',\n      betmc_main_config: {\n        $use_background_static_customs: false,\n        $use_setting_background_static_customs: false,\n        $use_background_animation: true,\n        $betmc_frame_duration: 1 / fps\n      }\n    };\n    fs.mkdirSync(path.join(outputDir, 'subpacks/0/betmc_config'), { recursive: true });\n    fs.mkdirSync(path.join(outputDir, 'subpacks/1080/betmc_config'), { recursive: true });\n    fs.writeFileSync(path.join(outputDir, 'subpacks/0/betmc_config/config.json'), JSON.stringify(config0, null, 2));\n    fs.writeFileSync(path.join(outputDir, 'subpacks/1080/betmc_config/config.json'), JSON.stringify(config1080, null, 2));\n\n    sendProgress(sessionId, 12, 85, 'สร้างไฟล์ UI...');\n    // Create UI files (enhanced UI generation from provided file)\n    const frameFiles = fs.readdirSync(frameDir).filter(f => f.endsWith('.jpg'));\n    const betmcCommonPath = path.join(outputDir, 'betmc_ui/betmc_common');\n    const uiPath = path.join(outputDir, 'ui');\n    fs.mkdirSync(betmcCommonPath, { recursive: true });\n    fs.mkdirSync(uiPath, { recursive: true });\n\n    // Generate animation frames\n    let yBottom = 1500;\n    const animFrames = [];\n    while (animFrames.length < frameFiles.length) {\n      for (let y = 1500; y >= -1400 && animFrames.length < frameFiles.length; y -= 100) {\n        animFrames.push({ from: [`${y}%`, `${yBottom}%`] });\n      }\n      yBottom -= 100;\n    }\n\n    // Check if frames exist\n    if (animFrames.length === 0) {\n      throw new Error('ไม่พบเฟรมวิดีโอ กรุณาอัปโหลดไฟล์วิดีโอที่ถูกต้อง');\n    }\n\n    // Create animation JSON\n    const animJson = { namespace };\n    animJson[`${namespace}.app-js:8:19`] = {\n      from: animFrames[0].from,\n      to: animFrames[0].from,\n      next: `@${namespace}.app-js:8:19-1`,\n      anim_type: 'offset',\n      duration: 1 / fps\n    };\n\n    animFrames.forEach((f, i) => {\n      if (i === 0) return;\n      const key = `${namespace}.app-js:8:19-${i}`;\n      animJson[key] = {\n        from: f.from,\n        to: f.from,\n        next: i + 1 < animFrames.length ? `@${namespace}.app-js:8:19-${i + 1}` : `@${namespace}.app-js:8:19`,\n        anim_type: 'offset',\n        duration: 1 / fps\n      };\n    });\n    fs.writeFileSync(path.join(betmcCommonPath, `${namespace}.json`), JSON.stringify(animJson, null, 2));\n\n    // Create background common\n    const bgCommon = {\n      namespace: 'betmc_background',\n      'betmc_animation_background_frame@betmc_common.empty_panel': {\n        anims: [`@${namespace}.app-js:8:19`],\n        controls: [],\n        size: ['100%', '100%'],\n        offset: `@${namespace}.app-js:8:19`,\n        anchor_from: 'center',\n        anchor_to: 'center'\n      }\n    };\n\n    const controls = [];\n    const defs = {};\n    let x = -1500, y = -1500;\n\n    for (let i = 0; i < frameFiles.length; i++) {\n      const key = i > 0 ? `app-js:31:30[${i}]` : 'app-js:31:30';\n      const id = crypto.randomUUID().replace(/-/g, '');\n      controls.push({ [`${id}@betmc_background.${key}`]: {} });\n      defs[key] = {\n        type: 'image',\n        texture: `betmc_background/betmc_background_frame/betmc_img_${i + 1}_frame`,\n        fill: true,\n        size: ['100%', '100%'],\n        offset: [`${x}%`, `${y}%`]\n      };\n      x += 100;\n      if (x > 1400) {\n        x = -1500;\n        y += 100;\n      }\n      if (y > 1400) y = -1500;\n    }\n\n    bgCommon['betmc_animation_background_frame@betmc_common.empty_panel'].controls = controls;\n    Object.assign(bgCommon, defs);\n    fs.writeFileSync(path.join(betmcCommonPath, 'betmc_bg_common.json'), JSON.stringify(bgCommon, null, 2));\n\n    // Create UI defs\n    const uiDefs = { ui_defs: [`betmc_ui/betmc_common/${namespace}.json`] };\n    fs.writeFileSync(path.join(uiPath, '_ui_defs.json'), JSON.stringify(uiDefs, null, 2));\n\n    sendProgress(sessionId, 13, 90, 'สร้างไฟล์ ZIP...');\n    const zipPath = path.join('zips', `${namespace}.zip`);\n    fs.mkdirSync('zips', { recursive: true });\n\n    await new Promise((resolve, reject) => {\n      const output = fs.createWriteStream(zipPath);\n      const archive = archiver('zip', { zlib: { level: 9 } });\n\n      output.on('close', resolve);\n      archive.on('error', reject);\n\n      archive.pipe(output);\n      archive.directory(outputDir, false);\n      archive.finalize();\n    });\n\n    sendProgress(sessionId, 14, 100, 'เสร็จสิ้น!', 0);\n    fs.rmSync(outputDir, { recursive: true, force: true });\n\n    // Use relative URL so it works through the Flask proxy\n    const downloadUrl = `/zips/${namespace}.zip`;\n\n    // For email notifications, we need the full URL\n    if (userEmail) {\n      const fullDownloadUrl = `${req.protocol}://${req.get('host')}${downloadUrl}`;\n      await sendNotificationEmail(userEmail, textureName, fullDownloadUrl);\n    }\n\n    // Send download completion via both systems\n    console.log(`🎉 Processing completed for ${sessionId}. Download URL: ${downloadUrl}`);\n\n    setTimeout(() => {\n      // Socket.IO completion\n      const downloadData = {\n        downloadUrl,\n        textureName,\n        namespace\n      };\n\n      console.log(`📤 Sending download-ready to progress-${sessionId}:`, downloadData);\n      io.to(`progress-${sessionId}`).emit('download-ready', downloadData);\n\n      // Also broadcast to all connected clients as fallback\n      io.emit('download-ready', downloadData);\n\n      // SSE completion\n      const client = progressClients.get(sessionId);\n      if (client) {\n        try {\n          client.write(`data: ${JSON.stringify({ completed: true, zip: `/zips/${namespace}.zip`, downloadUrl })}\\n\\n`);\n          client.end();\n        } catch (error) {\n          console.error('❌ SSE completion error:', error);\n        }\n        progressClients.delete(sessionId);\n      }\n    }, 1000);\n\n  } catch (error) {\n    console.error('Error during processing:', error);\n    io.to(`progress-${sessionId}`).emit('error', {\n      message: error.message || 'เกิดข้อผิดพลาดในการประมวลผล'\n    });\n  }\n});\n\n// API endpoints\napp.get('/api/config', (req, res) => {\n  res.json({\n    gifUrl: adminConfig.gifUrl,\n    primaryColor: adminConfig.primaryColor,\n    secondaryColor: adminConfig.secondaryColor,\n    accentColor: adminConfig.accentColor,\n    uploadEnabled: adminConfig.uploadEnabled,\n    youtubeEnabled: adminConfig.youtubeEnabled,\n    announcement: adminConfig.announcement\n  });\n});\n\n// Analytics API endpoints\napp.get('/api/analytics', (req, res) => {\n  res.json({\n    totalUsersToday: analyticsData.totalUsersToday,\n    totalDownloads: analyticsData.totalDownloads,\n    avgProcessTime: analyticsData.avgProcessTime,\n    systemLoad: analyticsData.systemLoad,\n    hourlyUsage: analyticsData.hourlyUsage,\n    textureTypes: analyticsData.textureTypes,\n    activeUsersCount: analyticsData.activeUsers.size\n  });\n});\n\napp.get('/api/performance', (req, res) => {\n  res.json(analyticsData.systemPerformance);\n});\n\napp.get('/api/active-users', (req, res) => {\n  const activeUsersList = Array.from(analyticsData.activeUsers.values());\n  res.json(activeUsersList);\n});\n\napp.get('/api/recent-activity', (req, res) => {\n  res.json(analyticsData.recentActivity);\n});\n\napp.get('/api/advanced-settings', (req, res) => {\n  res.json(advancedSettings);\n});\n\napp.post('/api/advanced-settings', (req, res) => {\n  try {\n    advancedSettings = { ...advancedSettings, ...req.body };\n    saveAdvancedSettings();\n    addActivity('settings_change', 'การตั้งค่าขั้นสูงถูกอัพเดต');\n    res.json({ success: true });\n  } catch (error) {\n    res.status(500).json({ success: false, error: error.message });\n  }\n});\n\n// TikTok video info API with real data extraction\napp.post('/api/tiktok-info', async (req, res) => {\n  try {\n    const { url } = req.body;\n\n    if (!url) {\n      return res.status(400).json({ error: 'URL is required' });\n    }\n\n    console.log('🎬 Extracting TikTok video from:', url);\n\n    // Import TikTok API library dynamically\n    const Tiktok = await import(\"@tobyg74/tiktok-api-dl\");\n    let result;\n\n    try {\n      // Try v2 first, fallback to v1\n      result = await Tiktok.default.Downloader(url, { version: \"v2\" });\n    } catch (error) {\n      console.log(\"v2 failed, trying v1:\", error.message);\n      try {\n        result = await Tiktok.default.Downloader(url, { version: \"v1\" });\n      } catch (v1Error) {\n        console.log(\"v1 also failed, using fallback:\", v1Error.message);\n        // Fallback to basic info extraction\n        const videoId = extractTikTokId(url);\n        return res.json({\n          title: `TikTok Video (${videoId})`,\n          thumbnail: \"https://p16-sign-sg.tiktokcdn.com/aweme/100x100/tos-alisg-p-0037/default.jpg\",\n          duration: \"ไม่ทราบ\",\n          uploader: \"TikTok User\",\n          url: url\n        });\n      }\n    }\n\n    if (!result || result.status !== \"success\") {\n      // Fallback if extraction failed\n      const videoId = extractTikTokId(url);\n      return res.json({\n        title: `TikTok Video (${videoId})`,\n        thumbnail: \"https://p16-sign-sg.tiktokcdn.com/aweme/100x100/tos-alisg-p-0037/default.jpg\",\n        duration: \"ไม่ทราบ\",\n        uploader: \"TikTok User\",\n        url: url\n      });\n    }\n\n    const data = result.result;\n\n    // Extract real video information\n    const tiktokInfo = {\n      title: data?.desc || \"TikTok Video\",\n      thumbnail: data?.video?.cover || data?.author?.avatar || \"https://p16-sign-sg.tiktokcdn.com/aweme/100x100/tos-alisg-p-0037/default.jpg\",\n      duration: data?.video?.duration ? `${data.video.duration}s` : \"ไม่ทราบ\",\n      uploader: data?.author?.nickname || \"TikTok User\",\n      url: url,\n      videoUrl: data?.video?.playAddr?.[0] || data?.video?.downloadAddr?.[0] || \"\",\n      audioUrl: data?.music?.playUrl?.[0] || \"\",\n      views: data?.statistics?.playCount || 0,\n      likes: data?.statistics?.diggCount || 0\n    };\n\n    console.log(`✅ TikTok info extracted: ${tiktokInfo.title} by ${tiktokInfo.uploader}`);\n    res.json(tiktokInfo);\n    return;\n\n    // Original yt-dlp code (disabled due to version compatibility)\n    try {\n      const info = await youtubeDl(url, {\n        dumpSingleJson: true,\n        noWarnings: true\n      });\n\n      const videoInfo = {\n        title: info.title || info.description || 'TikTok Video',\n        thumbnail: info.thumbnail,\n        duration: info.duration ? `${Math.floor(info.duration / 60)}:${(info.duration % 60).toString().padStart(2, '0')}` : 'ไม่ทราบ',\n        uploader: info.uploader || info.creator || 'TikTok User',\n        url: url\n      };\n\n      console.log('TikTok info fetched successfully:', videoInfo);\n      res.json(videoInfo);\n\n    } catch (ytdlError) {\n      console.log('yt-dlp failed, providing basic info:', ytdlError.message);\n\n      // Extract video ID for basic info\n      const videoId = extractTikTokId(url);\n\n      // Return basic info when yt-dlp fails\n      const basicInfo = {\n        title: `TikTok Video${videoId ? ` (${videoId})` : ''}`,\n        thumbnail: null, // No thumbnail available\n        duration: 'ไม่ทราบ',\n        uploader: 'TikTok User',\n        url: url,\n        note: 'ข้อมูลพื้นฐาน - ไม่สามารถดึงรายละเอียดได้'\n      };\n\n      console.log('Returning basic TikTok info:', basicInfo);\n      res.json(basicInfo);\n    }\n\n  } catch (error) {\n    console.error('TikTok API error:', error);\n    res.status(500).json({\n      error: 'ไม่สามารถดึงข้อมูลวิดีโอ TikTok ได้',\n      details: error.message\n    });\n  }\n});\n\n// Socket.IO Connection Monitoring\nio.on('connection', (socket) => {\n  systemStats.connectedUsers++;\n  analyticsData.totalUsersToday++;\n\n  // Add user to active users list\n  const userId = generateUserId();\n  analyticsData.activeUsers.set(socket.id, {\n    id: userId,\n    socketId: socket.id,\n    joinTime: Date.now(),\n    lastActivity: 'เชื่อมต่อเข้าสู่ระบบ',\n    timestamp: Date.now()\n  });\n\n  console.log(`🔗 ผู้ใช้เชื่อมต่อ: ${socket.id} | รวม: ${systemStats.connectedUsers} คน`);\n  addActivity('user_connect', `ผู้ใช้ ${userId} เชื่อมต่อเข้าสู่ระบบ`, userId);\n\n  // Notification for admin login\n  if (adminSessions.size === 0) { // Only notify for the first admin connection in a session\n    console.log('🎉 Admin logged in! Sending spectacular notification...');\n    io.emit('spectacular-notification', {\n      title: '🎉 ยินดีต้อนรับแอดมิน!',\n      message: 'ผู้ดูแลระบบคนใหม่ได้เข้าสู่ระบบแล้ว',\n      gifUrl: adminConfig.gifUrl || 'https://media.tenor.com/XQu4UfesS_kAAAAC/minecraft-block.gif',\n      primaryColor: adminConfig.primaryColor || '#667eea',\n      secondaryColor: adminConfig.secondaryColor || '#764ba2',\n      accentColor: adminConfig.accentColor || '#f093fb'\n    });\n    addActivity('admin_welcome', 'แอดมินเข้าระบบ - ส่งการแจ้งเตือนสุดอลังการ!');\n  }\n\n  // เข้าร่วม admin room หากเป็น admin\n  socket.on('join-admin', () => {\n    socket.join('admin-room');\n    console.log(`👨‍💼 Admin เข้าสู่ระบบ: ${socket.id}`);\n    addActivity('admin_login', `Admin เข้าสู่ระบบ [${socket.id.substring(0,8)}]`);\n\n    // Send initial analytics data\n    socket.emit('analytics-update', {\n      totalUsersToday: analyticsData.totalUsersToday,\n      totalDownloads: analyticsData.totalDownloads,\n      avgProcessTime: analyticsData.avgProcessTime,\n      systemLoad: analyticsData.systemLoad,\n      hourlyUsage: analyticsData.hourlyUsage,\n      textureTypes: analyticsData.textureTypes\n    });\n\n    // Send active users\n    const activeUsersList = Array.from(analyticsData.activeUsers.values());\n    socket.emit('active-users-update', activeUsersList);\n\n    // Send recent activity\n    socket.emit('activity-timeline-update', analyticsData.recentActivity);\n  });\n\n  // ติดตามการเข้าร่วมห้อง progress\n  socket.on('join-progress', (sessionId) => {\n    socket.join(`progress-${sessionId}`);\n    console.log(`📊 เข้าร่วมติดตาม progress: ${sessionId.substring(0,8)}`);\n    updateUserActivity(socket.id, 'ติดตามความคืบหน้า');\n  });\n\n  // Admin requests\n  socket.on('get-analytics-data', () => {\n    if (socket.rooms.has('admin-room')) {\n      socket.emit('analytics-update', {\n        totalUsersToday: analyticsData.totalUsersToday,\n        totalDownloads: analyticsData.totalDownloads,\n        avgProcessTime: analyticsData.avgProcessTime,\n        systemLoad: analyticsData.systemLoad,\n        hourlyUsage: analyticsData.hourlyUsage,\n        textureTypes: analyticsData.textureTypes\n      });\n    }\n  });\n\n  socket.on('get-performance-data', () => {\n    if (socket.rooms.has('admin-room')) {\n      socket.emit('performance-update', analyticsData.systemPerformance);\n    }\n  });\n\n  socket.on('save-advanced-settings', (settings) => {\n    if (socket.rooms.has('admin-room')) {\n      try {\n        advancedSettings = { ...advancedSettings, ...settings };\n        saveAdvancedSettings();\n        socket.emit('settings-saved', true);\n        addActivity('settings_change', 'การตั้งค่าขั้นสูงถูกอัพเดต');\n        console.log('Advanced settings updated:', settings);\n      } catch (error) {\n        socket.emit('settings-saved', false);\n        console.error('Failed to save advanced settings:', error);\n      }\n    }\n  });\n\n  // เมื่อยกเลิกการเชื่อมต่อ\n  socket.on('disconnect', (reason) => {\n    systemStats.connectedUsers--;\n\n    if (analyticsData.activeUsers.has(socket.id)) {\n      const user = analyticsData.activeUsers.get(socket.id);\n      addActivity('user_disconnect', `ผู้ใช้ ${user.id} ออกจากระบบ (${reason})`, user.id);\n      analyticsData.activeUsers.delete(socket.id);\n    }\n\n    console.log(`❌ ผู้ใช้ตัดการเชื่อมต่อ: ${socket.id} | เหตุผล: ${reason} | เหลือ: ${systemStats.connectedUsers} คน`);\n\n    // Update active users list for admin\n    const activeUsersList = Array.from(analyticsData.activeUsers.values());\n    io.to('admin-room').emit('active-users-update', activeUsersList);\n  });\n\n  // ติดตามข้อผิดพลาด socket\n  socket.on('error', (error) => {\n    console.error(`🔥 Socket Error [${socket.id}]:`, error);\n    addActivity('error', `Socket Error: ${error.message}`, socket.id);\n  });\n});\n\n// Middleware เพื่อติดตาม HTTP requests\napp.use((req, res, next) => {\n  systemStats.totalRequests++;\n  const startTime = Date.now();\n\n  console.log(`🌐 ${req.method} ${req.url} | IP: ${req.ip || req.connection.remoteAddress} | User-Agent: ${req.get('User-Agent')?.substring(0,50)}...`);\n\n  // ติดตามเมื่อ response เสร็จสิ้น\n  res.on('finish', () => {\n    const duration = Date.now() - startTime;\n    console.log(`✅ ${req.method} ${req.url} | Status: ${res.statusCode} | Duration: ${duration}ms`);\n  });\n\n  next();\n});\n\nconst PORT = 5000;\nserver.listen(PORT, '0.0.0.0', () => {\n  console.log(`🚀 BetMC Texture Generator Pro running on port ${PORT}`);\n  console.log(`🌐 Access at: http://localhost:${PORT}`);\n  console.log(`📊 System monitoring active - all console output will be sent to admin mode`);\n  addErrorLog('success', `🚀 เซิร์ฟเวอร์เริ่มทำงานแล้ว - พอร์ต ${PORT}`);\n});","size_bytes":80480},"attached_assets/index (10)_1754753644705.js":{"content":"const express = require('express');\nconst multer = require('multer');\nconst fs = require('fs');\nconst path = require('path');\nconst { execSync } = require('child_process');\nconst archiver = require('archiver');\nconst unzipper = require('unzipper');\nconst crypto = require('crypto');\nconst fetch = (...args) => import('node-fetch').then(({default: fetch}) => fetch(...args));\nconst nodemailer = require('nodemailer');\nconst youtubeDl = require('youtube-dl-exec');\n\nrequire('./cleaner');\n\nconst app = express();\nconst upload = multer({ dest: 'uploads/' });\n\napp.use(express.static('public'));\napp.use('/zips', express.static('zips'));\napp.use(express.json());\n\nfunction generateNamespace() {\n  return [...Array(32)].map(() => Math.random().toString(36)[2]).join('');\n}\n\nfunction escapePath(filePath) {\n  return `\"${filePath.replace(/\"/g, '\\\\\"')}\"`;\n}\n\nconst progressClients = new Map();\n\n// ตั้งค่า email transporter (ใช้ Gmail SMTP)\nconst transporter = nodemailer.createTransport({\n  service: 'gmail',\n  auth: {\n    user: process.env.EMAIL_USER, // ใส่อีเมลของคุณใน Secrets\n    pass: process.env.EMAIL_PASS  // ใส่ App Password ของ Gmail ใน Secrets\n  }\n});\n\n// ฟังก์ชันส่งอีเมลแจ้งเตือน\nasync function sendNotificationEmail(email, textureName, downloadUrl) {\n  if (!email) return;\n\n  try {\n    const mailOptions = {\n      from: process.env.EMAIL_USER,\n      to: email,\n      subject: `🎮 Texture Pack \"${textureName}\" พร้อมแล้ว!`,\n      html: `\n        <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\n          <h2 style=\"color: #4CAF50;\">🎉 Texture Pack ของคุณพร้อมแล้ว!</h2>\n          <p>สวัสดีครับ!</p>\n          <p>Texture Pack \"<strong>${textureName}</strong>\" ของคุณได้สร้างเสร็จแล้ว</p>\n          <div style=\"text-align: center; margin: 20px 0;\">\n            <a href=\"${downloadUrl}\" \n               style=\"background-color: #4CAF50; color: white; padding: 12px 24px; \n                      text-decoration: none; border-radius: 8px; font-weight: bold;\">\n              📦 ดาวน์โหลดเลย\n            </a>\n          </div>\n          <p style=\"color: #666; font-size: 12px;\">\n            หมายเหตุ: ลิงก์นี้จะหมดอายุภายใน 24 ชั่วโมง\n          </p>\n          <hr>\n          <p style=\"color: #888; font-size: 12px;\">\n            ขอบคุณที่ใช้บริการ BetMC UI Generator!\n          </p>\n        </div>\n      `\n    };\n\n    await transporter.sendMail(mailOptions);\n    console.log(`✅ ส่งอีเมลแจ้งเตือนไปยัง ${email} แล้ว`);\n  } catch (error) {\n    console.error('❌ ไม่สามารถส่งอีเมลได้:', error);\n  }\n}\n\napp.get('/progress/:sessionId', (req, res) => {\n  const sessionId = req.params.sessionId;\n\n  res.writeHead(200, {\n    'Content-Type': 'text/event-stream',\n    'Cache-Control': 'no-cache',\n    'Connection': 'keep-alive',\n    'Access-Control-Allow-Origin': '*'\n  });\n\n  progressClients.set(sessionId, res);\n\n  req.on('close', () => {\n    progressClients.delete(sessionId);\n  });\n});\n\nfunction sendProgress(sessionId, step, progress, message, timeLeft = null) {\n  const client = progressClients.get(sessionId);\n  if (client) {\n    const data = { step, progress, message, timeLeft };\n    client.write(`data: ${JSON.stringify(data)}\\n\\n`);\n  }\n}\n\n// ฟังก์ชันดาวน์โหลดวิดีโอจาก YouTube\nasync function downloadYouTubeVideo(videoId, outputPath, quality = '720') {\n  try {\n    let format;\n    switch (quality) {\n      case '480':\n        format = 'best[height<=480]';\n        break;\n      case '720':\n        format = 'best[height<=720]';\n        break;\n      case '1080':\n        format = 'best[height<=1080]';\n        break;\n      default:\n        format = 'best[height<=720]';\n    }\n\n    await youtubeDl(`https://www.youtube.com/watch?v=${videoId}`, {\n      format: format,\n      output: outputPath\n    });\n  } catch (error) {\n    throw new Error('ไม่สามารถดาวน์โหลดวิดีโอจาก YouTube ได้');\n  }\n}\n\n// ฟังก์ชันดาวน์โหลดเสียงจาก YouTube\nasync function downloadYouTubeAudio(videoId, outputPath) {\n  try {\n    await youtubeDl(`https://www.youtube.com/watch?v=${videoId}`, {\n      format: 'bestaudio[ext=m4a]',\n      output: outputPath\n    });\n  } catch (error) {\n    throw new Error('ไม่สามารถดาวน์โหลดเสียงจาก YouTube ได้');\n  }\n}\n\napp.post('/upload', upload.fields([\n  { name: 'video' },\n  { name: 'audio' },\n  { name: 'icon' },\n  // ไม่รับ manifest และ sounds_zip upload แล้ว\n]), async (req, res) => {\n  const sessionId = generateNamespace();\n\n  try {\n    const fps = parseFloat(req.body.fps);\n    const quality = parseInt(req.body.quality);\n    const textureName = req.body.textureName || 'Custom Texture';\n    const userEmail = req.body.email;\n    const youtubeVideoId = req.body.youtubeVideoId;\n    const youtubeQuality = req.body.youtubeQuality || '720';\n    const useYoutubeAudio = req.body.useYoutubeAudio === 'true';\n    const youtubeAudioId = req.body.youtubeAudioId;\n\n    if (isNaN(fps) || isNaN(quality)) {\n      return res.status(400).json({ error: 'Invalid fps or quality value' });\n    }\n\n    // ส่ง sessionId กลับไปก่อน\n    res.json({ sessionId });\n\n    const namespace = generateNamespace();\n    const outputDir = path.join('output', namespace);\n    const frameDir = path.join(outputDir, 'subpacks/1080/betmc_background/betmc_background_frame');\n    fs.mkdirSync(frameDir, { recursive: true });\n\n    sendProgress(sessionId, 1, 5, 'เริ่มต้นการประมวลผล...');\n\n    let videoPath;\n    let audioPath;\n\n    // ตรวจสอบว่าเป็น YouTube video หรือไฟล์อัปโหลด\n    if (youtubeVideoId) {\n      sendProgress(sessionId, 2, 10, `กำลังดาวน์โหลดวิดีโอจาก YouTube (${youtubeQuality}p)...`);\n      const downloadPath = path.join('uploads', `${namespace}_youtube.%(ext)s`);\n      await downloadYouTubeVideo(youtubeVideoId, downloadPath, youtubeQuality);\n      \n      // หาไฟล์วิดีโอที่ดาวน์โหลดมา\n      const videoFiles = fs.readdirSync('uploads').filter(f => f.startsWith(`${namespace}_youtube.`));\n      if (videoFiles.length === 0) {\n        throw new Error('ไม่สามารถดาวน์โหลดวิดีโอจาก YouTube ได้');\n      }\n      videoPath = path.join('uploads', videoFiles[0]);\n\n      // ดาวน์โหลดเสียงจาก YouTube ถ้าเลือกใช้\n      if (useYoutubeAudio) {\n        sendProgress(sessionId, 2, 12, 'กำลังดาวน์โหลดเสียงจาก YouTube...');\n        const audioDownloadPath = path.join('uploads', `${namespace}_audio.%(ext)s`);\n        await downloadYouTubeAudio(youtubeVideoId, audioDownloadPath);\n        \n        // หาไฟล์เสียงที่ดาวน์โหลดมา\n        const audioFiles = fs.readdirSync('uploads').filter(f => f.startsWith(`${namespace}_audio.`));\n        if (audioFiles.length > 0) {\n          audioPath = path.join('uploads', audioFiles[0]);\n        }\n      }\n      \n      // ดาวน์โหลดเสียงจาก YouTube Audio ID แยกต่างหาก\n      if (youtubeAudioId) {\n        sendProgress(sessionId, 2, 14, 'กำลังดาวน์โหลดเสียงจาก YouTube...');\n        const audioDownloadPath = path.join('uploads', `${namespace}_separate_audio.%(ext)s`);\n        await downloadYouTubeAudio(youtubeAudioId, audioDownloadPath);\n        \n        // หาไฟล์เสียงที่ดาวน์โหลดมา\n        const audioFiles = fs.readdirSync('uploads').filter(f => f.startsWith(`${namespace}_separate_audio.`));\n        if (audioFiles.length > 0) {\n          audioPath = path.join('uploads', audioFiles[0]);\n        }\n      }\n    } else if (req.files.video) {\n      videoPath = req.files.video[0].path;\n    } else {\n      throw new Error('กรุณาอัปโหลดไฟล์วิดีโอหรือใส่ URL YouTube');\n    }\n\n    // ใช้เสียงจาก YouTube ถ้ามี หรือจากไฟล์อัปโหลด\n    const finalAudioPath = audioPath || (req.files.audio ? req.files.audio[0].path : null);\n\n    sendProgress(sessionId, 3, 15, 'กำลังแยกเฟรมจากวิดีโอ...');\n    execSync(`ffmpeg -i ${escapePath(videoPath)} -vf fps=${fps} ${escapePath(path.join(frameDir, 'betmc_img_%d_frame.png'))}`);\n\n    // ลบไฟล์วิดีโอ YouTube ที่ดาวน์โหลดมา\n    if (youtubeVideoId && fs.existsSync(videoPath)) {\n      fs.unlinkSync(videoPath);\n    }\n\n    const frames = fs.readdirSync(frameDir).filter(f => f.endsWith('.png'));\n    sendProgress(sessionId, 4, 25, `พบ ${frames.length} เฟรม กำลังบีบอัดรูปภาพ...`);\n\n    const totalFrames = frames.length;\n    for (let i = 0; i < frames.length; i++) {\n      const file = frames[i];\n      const input = path.join(frameDir, file);\n      const output = path.join(frameDir, `compressed_${file.replace('.png', '.jpg')}`);\n      execSync(`magick ${escapePath(input)} -strip -quality ${quality} ${escapePath(output)}`);\n      fs.unlinkSync(input);\n\n      const progress = 25 + Math.floor((i + 1) / totalFrames * 25); // 25-50%\n      const timeLeft = Math.ceil((totalFrames - i - 1) * 0.5); // ประมาณ 0.5 วินาทีต่อเฟรม\n      sendProgress(sessionId, 4, progress, `บีบอัดเฟรม ${i + 1}/${totalFrames}`, timeLeft);\n    }\n\n    sendProgress(sessionId, 5, 50, 'จัดระเบียบไฟล์...');\n    fs.readdirSync(frameDir).forEach(file => {\n      if (file.startsWith('compressed_')) {\n        fs.renameSync(\n          path.join(frameDir, file),\n          path.join(frameDir, file.replace('compressed_', ''))\n        );\n      }\n    });\n\n    // คัดลอกภาพ patch static จากเฟรมที่ 60 ถ้ามี\n    const frame60 = path.join(frameDir, 'betmc_img_60_frame.jpg');\n    const staticPatch = path.join(outputDir, 'subpacks/0/betmc_background/betmc_background_static_patch.jpg');\n    fs.mkdirSync(path.dirname(staticPatch), { recursive: true });\n    if (fs.existsSync(frame60)) {\n      fs.copyFileSync(frame60, staticPatch);\n    }\n\n    sendProgress(sessionId, 6, 55, 'ดาวน์โหลด manifest.json...');\n    // --- โหลด manifest.json จาก GitHub ---\n    const manifestUrl = req.body.manifestUrl || 'https://raw.githubusercontent.com/HEENAO9k/Sounds/main/manifest.json';\n    const manifestResponse = await fetch(manifestUrl);\n    if (!manifestResponse.ok) throw new Error(`Failed to fetch manifest.json from ${manifestUrl}`);\n    const manifestText = await manifestResponse.text();\n    const manifest = JSON.parse(manifestText);\n\n    manifest.header.name = textureName;\n    manifest.header.uuid = crypto.randomUUID();\n    manifest.modules[0].uuid = crypto.randomUUID();\n\n    const manifestPath = path.join(outputDir, 'manifest.json');\n    fs.writeFileSync(manifestPath, JSON.stringify(manifest, null, 2));\n\n    sendProgress(sessionId, 7, 60, 'ดาวน์โหลดไฟล์เสียง...');\n    // --- โหลด sounds.zip จาก GitHub และแตกไฟล์ ---\n    const soundsZipUrl = req.body.soundsZipUrl || 'https://github.com/HEENAO9k/Sounds/raw/main/sounds.zip';\n    const soundsResponse = await fetch(soundsZipUrl);\n    if (!soundsResponse.ok) throw new Error(`Failed to fetch sounds.zip from ${soundsZipUrl}`);\n\n    const soundsZipPath = path.join('uploads', `${namespace}_sounds.zip`);\n    const soundsZipStream = fs.createWriteStream(soundsZipPath);\n    await new Promise((resolve, reject) => {\n      soundsResponse.body.pipe(soundsZipStream);\n      soundsResponse.body.on('error', reject);\n      soundsZipStream.on('finish', resolve);\n    });\n\n    sendProgress(sessionId, 8, 65, 'แตกไฟล์เสียง...');\n    await fs.createReadStream(soundsZipPath)\n      .pipe(unzipper.Extract({ path: path.join(outputDir, 'sounds') }))\n      .promise();\n\n    fs.unlinkSync(soundsZipPath);\n\n    // แปลงไฟล์เสียงถ้ามี (จาก YouTube หรือไฟล์อัปโหลด)\n    if (finalAudioPath) {\n      sendProgress(sessionId, 9, 70, useYoutubeAudio ? 'แปลงไฟล์เสียงจาก YouTube...' : 'แปลงไฟล์เสียง...');\n      const audioOutput = path.join(outputDir, 'sounds/music/menu');\n      fs.mkdirSync(audioOutput, { recursive: true });\n      execSync(`ffmpeg -i ${escapePath(finalAudioPath)} -vn -c:a libvorbis ${escapePath(path.join(audioOutput, 'menu1.ogg'))}`);\n      for (let i = 2; i <= 4; i++) {\n        fs.copyFileSync(path.join(audioOutput, 'menu1.ogg'), path.join(audioOutput, `menu${i}.ogg`));\n      }\n\n      // ลบไฟล์เสียง YouTube ที่ดาวน์โหลดมา\n      if (audioPath && fs.existsSync(audioPath)) {\n        fs.unlinkSync(audioPath);\n      }\n    }\n\n    sendProgress(sessionId, 10, 75, 'คัดลอกไฟล์เพิ่มเติม...');\n    // คัดลอกไอคอนถ้ามีอัปโหลด\n    if (req.files.icon) {\n      fs.copyFileSync(req.files.icon[0].path, path.join(outputDir, 'pack_icon.png'));\n    }\n\n    sendProgress(sessionId, 11, 80, 'สร้างไฟล์ config...');\n    // สร้าง config betmc_config\n    const config0 = {\n      namespace: 'betmc_config',\n      betmc_main_config: {\n        $betmc_scr_backround_path: 'betmc_background/betmc_background_static_patch'\n      }\n    };\n    const config1080 = {\n      namespace: 'betmc_config',\n      betmc_main_config: {\n        $use_background_static_customs: false,\n        $use_setting_background_static_customs: false,\n        $use_background_animation: true,\n        $betmc_frame_duration: 1 / fps\n      }\n    };\n    fs.mkdirSync(path.join(outputDir, 'subpacks/0/betmc_config'), { recursive: true });\n    fs.mkdirSync(path.join(outputDir, 'subpacks/1080/betmc_config'), { recursive: true });\n    fs.writeFileSync(path.join(outputDir, 'subpacks/0/betmc_config/config.json'), JSON.stringify(config0, null, 2));\n    fs.writeFileSync(path.join(outputDir, 'subpacks/1080/betmc_config/config.json'), JSON.stringify(config1080, null, 2));\n\n    sendProgress(sessionId, 12, 85, 'สร้างไฟล์ UI...');\n    // สร้างไฟล์ UI\n    const betmcCommonPath = path.join(outputDir, 'betmc_ui/betmc_common');\n    const uiPath = path.join(outputDir, 'ui');\n    fs.mkdirSync(betmcCommonPath, { recursive: true });\n    fs.mkdirSync(uiPath, { recursive: true });\n\n    let yBottom = 1500;\n    const animFrames = [];\n    while (animFrames.length < frames.length) {\n      for (let y = 1500; y >= -1400 && animFrames.length < frames.length; y -= 100) {\n        animFrames.push({ from: [`${y}%`, `${yBottom}%`] });\n      }\n      yBottom -= 100;\n    }\n\n    // ตรวจสอบว่ามี frames อย่างน้อย 1 เฟรม\n    if (animFrames.length === 0) {\n      throw new Error('ไม่พบเฟรมวิดีโอ กรุณาอัปโหลดไฟล์วิดีโอที่ถูกต้อง');\n    }\n\n    const animJson = { namespace };\n    animJson[`${namespace}.app-js:8:19`] = {\n      from: animFrames[0].from,\n      to: animFrames[0].from,\n      next: `@${namespace}.app-js:8:19-1`,\n      anim_type: 'offset',\n      duration: 1 / fps\n    };\n    animFrames.forEach((f, i) => {\n      if (i === 0) return;\n      const key = `${namespace}.app-js:8:19-${i}`;\n      animJson[key] = {\n        from: f.from,\n        to: f.from,\n        next: i + 1 < animFrames.length ? `@${namespace}.app-js:8:19-${i + 1}` : `@${namespace}.app-js:8:19`,\n        anim_type: 'offset',\n        duration: 1 / fps\n      };\n    });\n    fs.writeFileSync(path.join(betmcCommonPath, `${namespace}.json`), JSON.stringify(animJson, null, 2));\n\n    const bgCommon = {\n      namespace: 'betmc_background',\n      'betmc_animation_background_frame@betmc_common.empty_panel': {\n        anims: [`@${namespace}.app-js:8:19`],\n        controls: [],\n        size: ['100%', '100%'],\n        offset: `@${namespace}.app-js:8:19`,\n        anchor_from: 'center',\n        anchor_to: 'center'\n      }\n    };\n    const controls = [];\n    const defs = {};\n    let x = -1500, y = -1500;\n    for (let i = 0; i < frames.length; i++) {\n      const key = i > 0 ? `app-js:31:30[${i}]` : 'app-js:31:30';\n      const id = crypto.randomUUID().replace(/-/g, '');\n      controls.push({ [`${id}@betmc_background.${key}`]: {} });\n      defs[key] = {\n        type: 'image',\n        texture: `betmc_background/betmc_background_frame/betmc_img_${i + 1}_frame`,\n        fill: true,\n        size: ['100%', '100%'],\n        offset: [`${x}%`, `${y}%`]\n      };\n      x += 100;\n      if (x > 1400) {\n        x = -1500;\n        y += 100;\n      }\n      if (y > 1400) y = -1500;\n    }\n    bgCommon['betmc_animation_background_frame@betmc_common.empty_panel'].controls = controls;\n    Object.assign(bgCommon, defs);\n    fs.writeFileSync(path.join(betmcCommonPath, 'betmc_bg_common.json'), JSON.stringify(bgCommon, null, 2));\n\n    const uiDefs = { ui_defs: [`betmc_ui/betmc_common/${namespace}.json`] };\n    fs.writeFileSync(path.join(uiPath, '_ui_defs.json'), JSON.stringify(uiDefs, null, 2));\n\n    sendProgress(sessionId, 13, 90, 'สร้างไฟล์ ZIP...');\n    // สร้าง zip\n    const zipPath = path.join('zips', `${namespace}.zip`);\n    fs.mkdirSync('zips', { recursive: true });\n    const output = fs.createWriteStream(zipPath);\n    const archive = archiver('zip');\n    archive.pipe(output);\n    archive.directory(outputDir, false);\n    await archive.finalize();\n\n    sendProgress(sessionId, 14, 100, 'เสร็จสิ้น!', 0);\n\n    // ส่งอีเมลแจ้งเตือน (ถ้ามี)\n    if (userEmail) {\n      const downloadUrl = `${req.protocol}://${req.get('host')}/${zipPath}`;\n      await sendNotificationEmail(userEmail, textureName, downloadUrl);\n    }\n\n    // ส่งผลลัพธ์สุดท้าย\n    setTimeout(() => {\n      const client = progressClients.get(sessionId);\n      if (client) {\n        client.write(`data: ${JSON.stringify({ completed: true, zip: `/${zipPath}` })}\\n\\n`);\n        client.end();\n        progressClients.delete(sessionId);\n      }\n    }, 1000);\n\n  } catch (err) {\n    console.error('Error:', err);\n    sendProgress(sessionId, 0, 0, 'เกิดข้อผิดพลาด: ' + err.message);\n    const client = progressClients.get(sessionId);\n    if (client) {\n      client.write(`data: ${JSON.stringify({ error: 'Error processing files' })}\\n\\n`);\n      client.end();\n      progressClients.delete(sessionId);\n    }\n  }\n});\n\napp.listen(3000, () => {\n  console.log('Server listening at http://localhost:3000');\n});","size_bytes":19594},"public/admin.css":{"content":":root {\n  --primary-color: #667eea;\n  --secondary-color: #764ba2;\n  --accent-color: #f093fb;\n  --success-color: #4CAF50;\n  --error-color: #f44336;\n  --warning-color: #ff9800;\n  --glass-bg: rgba(255, 255, 255, 0.1);\n  --glass-border: rgba(255, 255, 255, 0.2);\n  --text-light: #ffffff;\n  --text-dark: #333333;\n  --shadow: 0 8px 32px rgba(0, 0, 0, 0.3);\n  --border-radius: 16px;\n}\n\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: 'Kanit', 'Segoe UI', sans-serif;\n  min-height: 100vh;\n  background: #000;\n  color: var(--text-light);\n  line-height: 1.6;\n}\n\n/* Background */\n.bg-blur {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(45deg, var(--primary-color), var(--secondary-color), var(--accent-color), #4facfe);\n  background-size: 400% 400%;\n  animation: gradientShift 15s ease infinite;\n  filter: blur(20px);\n  z-index: -2;\n}\n\n@keyframes gradientShift {\n  0% { background-position: 0% 50%; }\n  50% { background-position: 100% 50%; }\n  100% { background-position: 0% 50%; }\n}\n\n.bg-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: -1;\n}\n\n/* Login Screen */\n.login-screen {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  padding: 20px;\n}\n\n.login-container {\n  background: var(--glass-bg);\n  backdrop-filter: blur(20px);\n  border-radius: var(--border-radius);\n  padding: 40px;\n  border: 1px solid var(--glass-border);\n  box-shadow: var(--shadow);\n  width: 100%;\n  max-width: 400px;\n  animation: slideUp 0.8s ease-out;\n}\n\n@keyframes slideUp {\n  from {\n    opacity: 0;\n    transform: translateY(50px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.login-header {\n  text-align: center;\n  margin-bottom: 30px;\n}\n\n.login-header i {\n  font-size: 3rem;\n  color: var(--primary-color);\n  margin-bottom: 15px;\n  display: block;\n  animation: pulse 2s infinite;\n}\n\n@keyframes pulse {\n  0%, 100% { transform: scale(1); }\n  50% { transform: scale(1.1); }\n}\n\n.login-header h2 {\n  color: var(--text-light);\n  margin-bottom: 10px;\n  font-size: 1.8rem;\n}\n\n.login-header p {\n  color: rgba(255, 255, 255, 0.7);\n  font-size: 0.9rem;\n}\n\n.form-group {\n  margin-bottom: 20px;\n}\n\n.form-group label {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-bottom: 8px;\n  font-weight: 500;\n  color: var(--text-light);\n}\n\n.form-group input {\n  width: 100%;\n  padding: 15px;\n  border: 2px solid var(--glass-border);\n  border-radius: 10px;\n  background: rgba(255, 255, 255, 0.9);\n  color: var(--text-dark);\n  font-size: 1rem;\n  transition: all 0.3s ease;\n}\n\n.form-group input:focus {\n  outline: none;\n  border-color: var(--primary-color);\n  box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.2);\n}\n\n.login-btn {\n  width: 100%;\n  padding: 15px;\n  background: linear-gradient(45deg, var(--primary-color), var(--secondary-color));\n  color: white;\n  border: none;\n  border-radius: 10px;\n  font-size: 1.1rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n}\n\n.login-btn:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);\n}\n\n.back-to-main {\n  text-align: center;\n  margin-top: 20px;\n}\n\n.back-link {\n  color: rgba(255, 255, 255, 0.7);\n  text-decoration: none;\n  display: inline-flex;\n  align-items: center;\n  gap: 8px;\n  transition: color 0.3s ease;\n}\n\n.back-link:hover {\n  color: var(--accent-color);\n}\n\n/* Admin Panel */\n.admin-panel {\n  max-width: 1400px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\n.admin-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 40px;\n  padding: 30px;\n  background: var(--glass-bg);\n  backdrop-filter: blur(20px);\n  border-radius: var(--border-radius);\n  border: 1px solid var(--glass-border);\n  box-shadow: var(--shadow);\n}\n\n.admin-title h1 {\n  font-size: 2.5rem;\n  background: linear-gradient(45deg, var(--primary-color), var(--accent-color));\n  background-clip: text;\n  -webkit-background-clip: text;\n  color: transparent;\n  margin-bottom: 5px;\n}\n\n.admin-title p {\n  color: rgba(255, 255, 255, 0.7);\n  font-size: 1.1rem;\n}\n\n.logout-btn {\n  background: linear-gradient(45deg, var(--error-color), #e57373);\n  color: white;\n  border: none;\n  padding: 12px 24px;\n  border-radius: 10px;\n  cursor: pointer;\n  font-weight: 600;\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.logout-btn:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 8px 25px rgba(244, 67, 54, 0.3);\n}\n\n/* Control Grid */\n.control-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n  gap: 25px;\n}\n\n.control-card {\n  background: var(--glass-bg);\n  backdrop-filter: blur(20px);\n  border-radius: var(--border-radius);\n  border: 1px solid var(--glass-border);\n  box-shadow: var(--shadow);\n  overflow: hidden;\n  transition: all 0.3s ease;\n}\n\n.control-card:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 15px 40px rgba(0, 0, 0, 0.4);\n}\n\n.control-card.full-width {\n  grid-column: 1 / -1;\n}\n\n.card-header {\n  padding: 20px;\n  background: rgba(0, 0, 0, 0.2);\n  border-bottom: 1px solid var(--glass-border);\n}\n\n.card-header h3 {\n  color: var(--text-light);\n  font-size: 1.3rem;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.card-header i {\n  color: var(--accent-color);\n}\n\n.card-content {\n  padding: 25px;\n}\n\n/* Form Elements */\n.form-group {\n  margin-bottom: 20px;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 8px;\n  font-weight: 500;\n  color: var(--text-light);\n}\n\n.form-group input,\n.form-group textarea,\n.form-group select {\n  width: 100%;\n  padding: 12px;\n  border: 2px solid var(--glass-border);\n  border-radius: 8px;\n  background: rgba(255, 255, 255, 0.9);\n  color: var(--text-dark);\n  font-size: 1rem;\n  transition: all 0.3s ease;\n  font-family: inherit;\n}\n\n.form-group input:focus,\n.form-group textarea:focus,\n.form-group select:focus {\n  outline: none;\n  border-color: var(--primary-color);\n  box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.2);\n}\n\n.form-group input[type=\"color\"] {\n  height: 50px;\n  padding: 5px;\n  cursor: pointer;\n}\n\n.form-group textarea {\n  resize: vertical;\n  min-height: 100px;\n}\n\n/* Color Grid */\n.color-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\n  gap: 15px;\n  margin-bottom: 20px;\n}\n\n/* Toggle Switches */\n.toggle-group {\n  margin-bottom: 25px;\n}\n\n.toggle-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 15px;\n  padding: 15px;\n  background: rgba(0, 0, 0, 0.2);\n  border-radius: 10px;\n}\n\n.toggle-item label {\n  color: var(--text-light);\n  font-weight: 500;\n  margin-bottom: 0;\n}\n\n.toggle-switch {\n  position: relative;\n  width: 60px;\n  height: 30px;\n}\n\n.toggle-switch input {\n  opacity: 0;\n  width: 0;\n  height: 0;\n}\n\n.toggle-slider {\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(255, 255, 255, 0.2);\n  transition: 0.3s;\n  border-radius: 30px;\n}\n\n.toggle-slider:before {\n  position: absolute;\n  content: \"\";\n  height: 22px;\n  width: 22px;\n  left: 4px;\n  bottom: 4px;\n  background-color: white;\n  transition: 0.3s;\n  border-radius: 50%;\n}\n\ninput:checked + .toggle-slider {\n  background: linear-gradient(45deg, var(--primary-color), var(--accent-color));\n}\n\ninput:checked + .toggle-slider:before {\n  transform: translateX(30px);\n}\n\n/* System Status */\n.system-status {\n  margin-top: 20px;\n}\n\n.status-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n  padding: 10px;\n  background: rgba(0, 0, 0, 0.1);\n  border-radius: 8px;\n}\n\n.status-label {\n  color: var(--text-light);\n  font-weight: 500;\n}\n\n.status-value {\n  padding: 4px 12px;\n  border-radius: 15px;\n  font-size: 0.85rem;\n  font-weight: 600;\n}\n\n.status-value.online {\n  background: var(--success-color);\n  color: white;\n}\n\n.status-value.offline {\n  background: var(--error-color);\n  color: white;\n}\n\n/* Preview Container */\n.preview-container {\n  margin: 15px 0;\n  text-align: center;\n}\n\n.preview-container img {\n  max-width: 100%;\n  height: auto;\n  border-radius: 8px;\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);\n}\n\n/* Announcement Actions */\n.announcement-actions {\n  display: flex;\n  gap: 10px;\n  margin-bottom: 20px;\n}\n\n.announcement-preview {\n  padding: 15px;\n  background: rgba(0, 0, 0, 0.2);\n  border-radius: 8px;\n  border: 1px solid var(--glass-border);\n}\n\n.preview-label {\n  font-size: 0.85rem;\n  color: rgba(255, 255, 255, 0.7);\n  margin-bottom: 8px;\n}\n\n.preview-content {\n  color: var(--text-light);\n  font-style: italic;\n}\n\n/* File Management */\n.file-stats-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\n  gap: 15px;\n  margin-bottom: 20px;\n}\n\n.file-actions {\n  display: flex;\n  gap: 10px;\n  margin-bottom: 20px;\n  flex-wrap: wrap;\n}\n\n.file-details {\n  margin-top: 20px;\n}\n\n.detail-section h4 {\n  color: var(--accent-color);\n  margin-bottom: 10px;\n  font-size: 1.1rem;\n}\n\n.activity-list {\n  max-height: 200px;\n  overflow-y: auto;\n  background: rgba(0, 0, 0, 0.2);\n  border-radius: 8px;\n  padding: 10px;\n}\n\n.activity-item {\n  padding: 8px 0;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n  font-size: 0.9rem;\n}\n\n.activity-item:last-child {\n  border-bottom: none;\n}\n\n.activity-time {\n  color: var(--accent-color);\n  font-weight: 500;\n  margin-right: 10px;\n}\n\n.activity-message {\n  opacity: 0.9;\n}\n\n/* System Actions */\n.system-actions {\n  margin-top: 15px;\n  display: flex;\n  gap: 10px;\n}\n\n/* Error Logs */\n.error-controls {\n  display: flex;\n  gap: 10px;\n  margin-bottom: 15px;\n}\n\n.error-logs {\n  margin-top: 15px;\n}\n\n.logs-container {\n  max-height: 300px;\n  overflow-y: auto;\n  background: rgba(0, 0, 0, 0.3);\n  border-radius: 8px;\n  padding: 15px;\n}\n\n.log-item {\n  padding: 10px 0;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n  font-family: 'Courier New', monospace;\n  font-size: 0.85rem;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.log-item:last-child {\n  border-bottom: none;\n}\n\n.log-item.error {\n  border-left: 3px solid var(--error-color);\n  padding-left: 10px;\n}\n\n.log-item.warning {\n  border-left: 3px solid var(--warning-color);\n  padding-left: 10px;\n}\n\n.log-item.info {\n  border-left: 3px solid var(--success-color);\n  padding-left: 10px;\n}\n\n.log-time {\n  color: var(--accent-color);\n  font-weight: 500;\n  min-width: 80px;\n}\n\n.log-level {\n  background: rgba(255, 255, 255, 0.1);\n  padding: 2px 6px;\n  border-radius: 4px;\n  font-size: 0.75rem;\n  min-width: 60px;\n  text-align: center;\n}\n\n.log-message {\n  flex: 1;\n  opacity: 0.9;\n}\n\n/* Statistics Grid */\n.stats-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\n  gap: 15px;\n}\n\n.stat-item {\n  text-align: center;\n  padding: 20px;\n  background: rgba(0, 0, 0, 0.2);\n  border-radius: 12px;\n  border: 1px solid var(--glass-border);\n}\n\n.stat-value {\n  font-size: 2rem;\n  font-weight: 700;\n  color: var(--accent-color);\n  margin-bottom: 5px;\n  animation: countUp 0.5s ease-out;\n}\n\n@keyframes countUp {\n  from { opacity: 0; transform: translateY(20px); }\n  to { opacity: 1; transform: translateY(0); }\n}\n\n.stat-label {\n  font-size: 0.85rem;\n  color: rgba(255, 255, 255, 0.7);\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n}\n\n/* Buttons */\n.btn {\n  padding: 12px 20px;\n  border: none;\n  border-radius: 8px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: inline-flex;\n  align-items: center;\n  gap: 8px;\n  font-family: inherit;\n  font-size: 0.95rem;\n}\n\n.btn-primary {\n  background: linear-gradient(45deg, var(--primary-color), var(--secondary-color));\n  color: white;\n}\n\n.btn-primary:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);\n}\n\n.btn-secondary {\n  background: rgba(255, 255, 255, 0.1);\n  color: var(--text-light);\n  border: 1px solid var(--glass-border);\n}\n\n.btn-secondary:hover {\n  background: rgba(255, 255, 255, 0.2);\n  transform: translateY(-2px);\n}\n\n.btn-warning {\n  background: linear-gradient(45deg, var(--warning-color), #ffb74d);\n  color: white;\n}\n\n.btn-warning:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 8px 25px rgba(255, 152, 0, 0.3);\n}\n\n/* Toast Notifications */\n.toast-container {\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  z-index: 10000;\n}\n\n.toast {\n  background: var(--glass-bg);\n  backdrop-filter: blur(20px);\n  color: var(--text-light);\n  padding: 15px 20px;\n  border-radius: 12px;\n  border: 1px solid var(--glass-border);\n  margin-bottom: 10px;\n  animation: toastSlideIn 0.3s ease;\n  box-shadow: var(--shadow);\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  min-width: 300px;\n}\n\n.toast.success {\n  border-color: var(--success-color);\n  background: linear-gradient(135deg, rgba(76, 175, 80, 0.2), var(--glass-bg));\n}\n\n.toast.error {\n  border-color: var(--error-color);\n  background: linear-gradient(135deg, rgba(244, 67, 54, 0.2), var(--glass-bg));\n}\n\n.toast.warning {\n  border-color: var(--warning-color);\n  background: linear-gradient(135deg, rgba(255, 152, 0, 0.2), var(--glass-bg));\n}\n\n/* Admin Mode Badge */\n.admin-mode-badge {\n  position: fixed;\n  top: 20px;\n  left: 20px;\n  z-index: 10000;\n  background: linear-gradient(135deg, #ff6b6b, #ff8e53, #ff6b9d);\n  color: white;\n  padding: 12px 20px;\n  border-radius: 25px;\n  box-shadow: 0 8px 32px rgba(255, 107, 107, 0.4);\n  border: 2px solid rgba(255, 255, 255, 0.2);\n  backdrop-filter: blur(10px);\n  animation: adminBadgeFloat 3s ease-in-out infinite, adminGlow 2s ease-in-out infinite alternate;\n}\n\n.badge-content {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  position: relative;\n}\n\n.admin-text {\n  font-weight: 700;\n  font-size: 14px;\n  letter-spacing: 2px;\n  text-shadow: 0 0 10px rgba(255, 255, 255, 0.8);\n}\n\n.badge-content i {\n  filter: drop-shadow(0 0 8px #4CAF50);\n}\n\n.pulse-ring {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 100%;\n  height: 100%;\n  border: 3px solid rgba(255, 255, 255, 0.6);\n  border-radius: 25px;\n  animation: pulseRing 2s ease-out infinite;\n}\n\n/* Admin Status Indicator */\n.admin-status-indicator {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  color: #4CAF50;\n  font-size: 14px;\n  margin-top: 10px;\n  animation: statusPulse 2s ease-in-out infinite;\n}\n\n.admin-status-indicator i {\n  animation: shieldGlow 3s ease-in-out infinite alternate;\n}\n\n\n\n/* Animations */\n@keyframes adminBadgeFloat {\n  0%, 100% { transform: translateY(0px); }\n  50% { transform: translateY(-5px); }\n}\n\n@keyframes adminGlow {\n  0% {\n    box-shadow: 0 8px 32px rgba(255, 107, 107, 0.4);\n    border-color: rgba(255, 255, 255, 0.2);\n  }\n  100% {\n    box-shadow: 0 8px 32px rgba(255, 107, 107, 0.8), 0 0 30px rgba(255, 107, 107, 0.6);\n    border-color: rgba(255, 255, 255, 0.6);\n  }\n}\n\n\n\n@keyframes pulseRing {\n  0% {\n    transform: translate(-50%, -50%) scale(0.8);\n    opacity: 1;\n  }\n  100% {\n    transform: translate(-50%, -50%) scale(1.3);\n    opacity: 0;\n  }\n}\n\n@keyframes statusPulse {\n  0%, 100% { opacity: 1; }\n  50% { opacity: 0.7; }\n}\n\n@keyframes shieldGlow {\n  0% {\n    color: #4CAF50;\n    text-shadow: 0 0 5px #4CAF50;\n  }\n  100% {\n    color: #81C784;\n    text-shadow: 0 0 15px #4CAF50, 0 0 25px #4CAF50;\n  }\n}\n\n\n\n@keyframes toastSlideIn {\n  from {\n    opacity: 0;\n    transform: translateX(100%);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n  }\n}\n\n/* Chat Card Styles */\n.chat-card .card-content {\n  height: 400px;\n  display: flex;\n  flex-direction: column;\n}\n\n.chat-messages {\n  flex: 1;\n  overflow-y: auto;\n  padding: 10px;\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 8px;\n  margin-bottom: 10px;\n  max-height: 300px;\n}\n\n.chat-message {\n  margin-bottom: 12px;\n  padding: 8px 12px;\n  border-radius: 12px;\n  max-width: 80%;\n  word-wrap: break-word;\n}\n\n.chat-message.admin {\n  background: linear-gradient(135deg, #667eea, #764ba2);\n  color: white;\n  margin-left: auto;\n  text-align: right;\n}\n\n.chat-message.user {\n  background: rgba(255, 255, 255, 0.1);\n  color: #fff;\n}\n\n.chat-message .message-header {\n  font-size: 11px;\n  opacity: 0.7;\n  margin-bottom: 4px;\n}\n\n.chat-message .message-content {\n  font-size: 14px;\n  line-height: 1.4;\n}\n\n.chat-message.file {\n  background: rgba(102, 126, 234, 0.2);\n  border: 1px solid rgba(102, 126, 234, 0.4);\n}\n\n.chat-file-preview {\n  margin-top: 8px;\n  padding: 8px;\n  background: rgba(0, 0, 0, 0.3);\n  border-radius: 8px;\n}\n\n.chat-file-preview img {\n  max-width: 200px;\n  max-height: 150px;\n  border-radius: 4px;\n}\n\n.chat-input-container {\n  display: flex;\n  gap: 8px;\n}\n\n.chat-input-wrapper {\n  display: flex;\n  flex: 1;\n  gap: 8px;\n  align-items: center;\n}\n\n.chat-input-wrapper input[type=\"text\"] {\n  flex: 1;\n  padding: 10px 12px;\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  border-radius: 20px;\n  background: rgba(255, 255, 255, 0.1);\n  color: #fff;\n  font-size: 14px;\n}\n\n.chat-file-btn, .chat-send-btn {\n  width: 40px;\n  height: 40px;\n  border: none;\n  border-radius: 50%;\n  background: linear-gradient(135deg, #667eea, #764ba2);\n  color: white;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.3s ease;\n}\n\n.chat-file-btn:hover, .chat-send-btn:hover {\n  transform: scale(1.1);\n  box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);\n}\n\n.chat-status {\n  color: #4CAF50;\n  font-size: 12px;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n}\n\n/* Media Card Styles */\n.media-card .form-group {\n  margin-bottom: 15px;\n}\n\n.media-card input[type=\"range\"] {\n  width: 100%;\n  margin: 0 10px;\n}\n\n.media-controls {\n  display: flex;\n  gap: 10px;\n  margin: 15px 0;\n}\n\n.media-controls .btn {\n  flex: 1;\n  padding: 10px;\n  border: none;\n  border-radius: 8px;\n  color: white;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n}\n\n.media-controls .btn:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);\n}\n\n.media-status {\n  padding: 10px;\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 8px;\n  text-align: center;\n  color: #8e9aaf;\n  font-size: 14px;\n}\n\n.media-options {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 15px;\n  margin: 15px 0;\n}\n\n/* Responsive Design */\n@media (max-width: 768px) {\n  .admin-panel {\n    padding: 10px;\n  }\n\n  .admin-header {\n    flex-direction: column;\n    gap: 20px;\n    text-align: center;\n  }\n\n  .admin-title h1 {\n    font-size: 2rem;\n  }\n\n  .control-grid {\n    grid-template-columns: 1fr;\n  }\n\n  .color-grid {\n    grid-template-columns: 1fr;\n  }\n\n  .stats-grid {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  .announcement-actions {\n    flex-direction: column;\n  }\n\n  .toggle-item {\n    flex-direction: column;\n    gap: 10px;\n    text-align: center;\n  }\n}\n\n/* Loading States */\n.loading {\n  opacity: 0.6;\n  pointer-events: none;\n  position: relative;\n}\n\n.loading::after {\n  content: '';\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 20px;\n  height: 20px;\n  margin: -10px 0 0 -10px;\n  border: 2px solid rgba(255, 255, 255, 0.3);\n  border-top-color: white;\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  to { transform: rotate(360deg); }\n}\n\n/* Scrollbar Styling */\n::-webkit-scrollbar {\n  width: 8px;\n}\n\n::-webkit-scrollbar-track {\n  background: rgba(255, 255, 255, 0.1);\n}\n\n::-webkit-scrollbar-thumb {\n  background: linear-gradient(45deg, var(--primary-color), var(--secondary-color));\n  border-radius: 4px;\n}\n\n::-webkit-scrollbar-thumb:hover {\n  background: linear-gradient(45deg, var(--secondary-color), var(--accent-color));\n}\n\n/* Advanced Admin Panel Styles */\n.analytics-card .card-content {\n  padding: 20px;\n}\n\n.refresh-indicator {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  color: #4CAF50;\n  font-size: 12px;\n}\n\n.pulse-dot {\n  animation: pulse 2s infinite;\n}\n\n@keyframes pulse {\n  0% { opacity: 1; }\n  50% { opacity: 0.3; }\n  100% { opacity: 1; }\n}\n\n.analytics-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n  gap: 15px;\n  margin-bottom: 20px;\n}\n\n.metric-box {\n  background: linear-gradient(145deg, #2a2a2a, #1e1e1e);\n  border-radius: 12px;\n  padding: 15px;\n  border: 1px solid #333;\n  display: flex;\n  align-items: center;\n  gap: 12px;\n}\n\n.metric-icon {\n  font-size: 24px;\n  color: #667eea;\n  width: 40px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: rgba(102, 126, 234, 0.1);\n  border-radius: 8px;\n}\n\n.metric-content h4 {\n  font-size: 24px;\n  font-weight: 700;\n  color: #fff;\n  margin-bottom: 2px;\n}\n\n.metric-content p {\n  font-size: 12px;\n  color: #aaa;\n  margin-bottom: 4px;\n}\n\n.trend {\n  font-size: 11px;\n  font-weight: 600;\n  padding: 2px 6px;\n  border-radius: 4px;\n}\n\n.trend.up {\n  color: #4CAF50;\n  background: rgba(76, 175, 80, 0.1);\n}\n\n.trend.down {\n  color: #FF5722;\n  background: rgba(255, 87, 34, 0.1);\n}\n\n.mini-charts {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 20px;\n  margin-top: 20px;\n}\n\n.chart-container {\n  background: #1e1e1e;\n  border-radius: 8px;\n  padding: 15px;\n  border: 1px solid #333;\n}\n\n.chart-container h5 {\n  color: #fff;\n  font-size: 14px;\n  margin-bottom: 10px;\n}\n\n/* Users Card */\n.users-card .card-content {\n  padding: 20px;\n}\n\n.user-counter {\n  background: rgba(76, 175, 80, 0.1);\n  color: #4CAF50;\n  padding: 4px 8px;\n  border-radius: 12px;\n  font-size: 12px;\n  font-weight: 600;\n}\n\n.users-list {\n  max-height: 150px;\n  overflow-y: auto;\n  margin-bottom: 20px;\n}\n\n.user-item {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  padding: 8px 0;\n  border-bottom: 1px solid #333;\n}\n\n.user-avatar {\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  background: linear-gradient(45deg, #667eea, #764ba2);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  font-weight: 600;\n  font-size: 12px;\n}\n\n.user-info {\n  flex: 1;\n}\n\n.user-info .name {\n  color: #fff;\n  font-size: 14px;\n  font-weight: 500;\n}\n\n.user-info .activity {\n  color: #aaa;\n  font-size: 11px;\n}\n\n.activity-timeline {\n  background: #1e1e1e;\n  border-radius: 8px;\n  padding: 15px;\n  border: 1px solid #333;\n}\n\n.activity-timeline h5 {\n  color: #fff;\n  font-size: 14px;\n  margin-bottom: 10px;\n}\n\n.timeline-items {\n  max-height: 120px;\n  overflow-y: auto;\n}\n\n.timeline-item {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 6px 0;\n  font-size: 12px;\n  color: #ccc;\n}\n\n.timeline-dot {\n  width: 6px;\n  height: 6px;\n  border-radius: 50%;\n  background: #667eea;\n}\n\n/* Performance Card */\n.performance-card .card-content {\n  padding: 20px;\n}\n\n.btn-icon {\n  background: none;\n  border: 1px solid #333;\n  color: #ccc;\n  padding: 8px;\n  border-radius: 6px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.btn-icon:hover {\n  background: #333;\n  color: #fff;\n}\n\n.performance-metrics {\n  margin-bottom: 20px;\n}\n\n.metric-row {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 15px;\n}\n\n.metric-row label {\n  color: #fff;\n  font-size: 14px;\n  font-weight: 500;\n  min-width: 100px;\n}\n\n.progress-bar {\n  flex: 1;\n  height: 8px;\n  background: #333;\n  border-radius: 4px;\n  margin: 0 15px;\n  position: relative;\n  overflow: hidden;\n}\n\n.progress-fill {\n  height: 100%;\n  background: linear-gradient(90deg, #667eea, #764ba2);\n  border-radius: 4px;\n  transition: width 0.3s ease;\n}\n\n.progress-bar span {\n  color: #fff;\n  font-size: 12px;\n  font-weight: 600;\n  min-width: 40px;\n}\n\n.network-stats {\n  display: flex;\n  gap: 15px;\n}\n\n.network-stats span {\n  color: #fff;\n  font-size: 12px;\n}\n\n.process-list {\n  background: #1e1e1e;\n  border-radius: 8px;\n  padding: 15px;\n  border: 1px solid #333;\n}\n\n.process-list h5 {\n  color: #fff;\n  font-size: 14px;\n  margin-bottom: 10px;\n}\n\n.process-items {\n  max-height: 120px;\n  overflow-y: auto;\n}\n\n.process-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 6px 0;\n  border-bottom: 1px solid #333;\n  font-size: 12px;\n}\n\n.process-name {\n  color: #fff;\n  font-weight: 500;\n}\n\n.process-usage {\n  color: #aaa;\n}\n\n/* Settings Card */\n.settings-card .card-content {\n  padding: 20px;\n}\n\n.settings-tabs {\n  display: flex;\n  border-bottom: 1px solid #333;\n  margin-bottom: 20px;\n}\n\n.tab-btn {\n  background: none;\n  border: none;\n  color: #aaa;\n  padding: 10px 20px;\n  cursor: pointer;\n  border-bottom: 2px solid transparent;\n  transition: all 0.3s ease;\n  font-size: 14px;\n}\n\n.tab-btn.active {\n  color: #667eea;\n  border-bottom-color: #667eea;\n}\n\n.tab-btn:hover {\n  color: #fff;\n}\n\n.tab-content {\n  min-height: 200px;\n}\n\n.tab-panel {\n  display: none;\n}\n\n.tab-panel.active {\n  display: block;\n}\n\n/* Event Management Styles */\n.event-creation {\n  margin-bottom: 25px;\n  padding: 20px;\n  background: #1a1a1a;\n  border-radius: 10px;\n  border: 1px solid #333;\n}\n\n.quick-commands {\n  margin-bottom: 25px;\n  padding: 20px;\n  background: #1e1e1e;\n  border-radius: 10px;\n  border: 1px solid #333;\n}\n\n.command-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\n  gap: 10px;\n  margin-top: 15px;\n}\n\n.cmd-btn {\n  background: linear-gradient(45deg, #667eea, #764ba2);\n  color: white;\n  border: none;\n  padding: 12px 15px;\n  border-radius: 8px;\n  cursor: pointer;\n  font-weight: 600;\n  font-size: 14px;\n  transition: all 0.3s ease;\n  text-align: center;\n}\n\n.cmd-btn:hover {\n  transform: translateY(-2px) scale(1.05);\n  box-shadow: 0 8px 25px rgba(102, 126, 234, 0.4);\n}\n\n.active-events {\n  padding: 20px;\n  background: #1a1a1a;\n  border-radius: 10px;\n  border: 1px solid #333;\n}\n\n.events-list {\n  max-height: 300px;\n  overflow-y: auto;\n  margin-top: 15px;\n}\n\n.event-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 15px;\n  border-bottom: 1px solid #333;\n  color: #fff;\n  transition: all 0.3s ease;\n}\n\n.event-item:hover {\n  background: rgba(102, 126, 234, 0.1);\n}\n\n.event-item.active {\n  border-left: 4px solid #4CAF50;\n  background: rgba(76, 175, 80, 0.1);\n}\n\n.event-item.inactive {\n  border-left: 4px solid #666;\n  opacity: 0.7;\n}\n\n.event-info strong {\n  display: block;\n  margin-bottom: 5px;\n  color: #fff;\n}\n\n.event-details {\n  display: flex;\n  flex-direction: column;\n  gap: 3px;\n  font-size: 12px;\n  color: #aaa;\n}\n\n.event-actions {\n  display: flex;\n  gap: 8px;\n  align-items: center;\n}\n\n.event-actions .btn {\n  padding: 6px 12px;\n  font-size: 12px;\n  border-radius: 5px;\n}\n\n/* Enhanced form styles for events */\n.event-creation .form-group {\n  margin-bottom: 15px;\n}\n\n.event-creation label {\n  display: block;\n  margin-bottom: 8px;\n  color: #fff;\n  font-weight: 600;\n}\n\n.event-creation input,\n.event-creation textarea,\n.event-creation select {\n  width: 100%;\n  padding: 10px 15px;\n  border: 1px solid #333;\n  border-radius: 6px;\n  background: #2a2a2a;\n  color: #fff;\n  font-family: inherit;\n}\n\n.event-creation textarea {\n  resize: vertical;\n  min-height: 80px;\n}\n\n.event-creation select {\n  cursor: pointer;\n}\n\n.event-creation input:focus,\n.event-creation textarea:focus,\n.event-creation select:focus {\n  outline: none;\n  border-color: #667eea;\n  box-shadow: 0 0 0 2px rgba(102, 126, 234, 0.2);\n}\n`;","size_bytes":27154},"public/admin.js":{"content":"// Socket connection - use relative URL to work with proxy\nconst socket = io({\n  transports: ['websocket', 'polling'],\n  timeout: 20000,\n  forceNew: true,\n  autoConnect: true\n});\n\n// Debug socket connection\nsocket.on('connect', () => {\n  console.log('✅ Socket connected successfully to server');\n  console.log('Socket ID:', socket.id);\n  showToast('เชื่อมต่อเซิร์ฟเวอร์สำเร็จ (ID: ' + socket.id.substring(0,8) + ')', 'success');\n});\n\nsocket.on('connect_error', (error) => {\n  console.error('❌ Socket connection error:', error);\n  console.log('🔄 Trying to reconnect...');\n  showToast('ไม่สามารถเชื่อมต่อเซิร์ฟเวอร์ได้', 'error');\n});\n\nsocket.on('disconnect', (reason) => {\n  console.log('🔌 Socket disconnected:', reason);\n  showToast('การเชื่อมต่อขาดหาย', 'warning');\n});\n\n// Global variables\nlet isLoggedIn = false;\nlet adminConfig = {};\n\n// DOM elements\nconst loginScreen = document.getElementById('login-screen');\nconst adminPanel = document.getElementById('admin-panel');\nconst loginForm = document.getElementById('login-form');\nconst passwordInput = document.getElementById('password');\n\n// Admin controls\nconst gifUrlInput = document.getElementById('gifUrl');\nconst gifPreview = document.getElementById('gifPreview');\nconst updateGifBtn = document.getElementById('updateGif');\n\nconst primaryColorInput = document.getElementById('primaryColor');\nconst secondaryColorInput = document.getElementById('secondaryColor');\nconst accentColorInput = document.getElementById('accentColor');\nconst updateColorsBtn = document.getElementById('updateColors');\n\nconst uploadToggle = document.getElementById('uploadToggle');\nconst youtubeToggle = document.getElementById('youtubeToggle');\nconst uploadStatus = document.getElementById('uploadStatus');\nconst youtubeStatus = document.getElementById('youtubeStatus');\n\nconst announcementInput = document.getElementById('announcement');\nconst updateAnnouncementBtn = document.getElementById('updateAnnouncement');\nconst clearAnnouncementBtn = document.getElementById('clearAnnouncement');\nconst announcementPreview = document.getElementById('announcementPreview');\n\nconst newPasswordInput = document.getElementById('newPassword');\nconst confirmPasswordInput = document.getElementById('confirmPassword');\nconst changePasswordBtn = document.getElementById('changePassword');\n\nconst logoutBtn = document.getElementById('logout-btn');\n\n// File Management Elements\nconst refreshFileStatsBtn = document.getElementById('refreshFileStats');\nconst cleanupOldFilesBtn = document.getElementById('cleanupOldFiles');\nconst emergencyCleanupBtn = document.getElementById('emergencyCleanup');\nconst uploadFilesCount = document.getElementById('uploadFiles');\nconst outputFilesCount = document.getElementById('outputFiles');\nconst zipFilesCount = document.getElementById('zipFiles');\nconst diskUsageDisplay = document.getElementById('diskUsage');\nconst recentActivityList = document.getElementById('recentActivity');\n\n// System Monitor Elements\nconst refreshSystemStatsBtn = document.getElementById('refreshSystemStats');\nconst connectedUsersCount = document.getElementById('connectedUsers');\nconst activeProcessesCount = document.getElementById('activeProcesses');\nconst totalRequestsCount = document.getElementById('totalRequests');\nconst uptimeDisplay = document.getElementById('uptime');\n\n// Error Monitoring Elements\nconst refreshErrorLogsBtn = document.getElementById('refreshErrorLogs');\nconst clearErrorLogsBtn = document.getElementById('clearErrorLogs');\nconst errorLogsList = document.getElementById('errorLogsList');\n\n// Statistics elements\nconst connectedUsersSpan = document.getElementById('connectedUsers');\nconst activeProcessesSpan = document.getElementById('activeProcesses');\nconst totalRequestsSpan = document.getElementById('totalRequests');\n\n// Initialize\ndocument.addEventListener('DOMContentLoaded', function() {\n  console.log('📄 DOM loaded, initializing admin panel...');\n\n  initializeAdmin();\n  setupEventListeners();\n  updateStatistics();\n  initializeChatSystem();\n  initializeMediaControl();\n});\n\nfunction initializeAdmin() {\n  // Faster connection with reduced timeout\n  socket.timeout(5000);\n\n  // Show connection status\n  socket.on('connect', () => {\n    console.log('Socket connected successfully');\n  });\n\n  socket.on('connect_error', (error) => {\n    console.error('Connection error:', error);\n    showToast('ไม่สามารถเชื่อมต่อได้', 'error');\n  });\n\n  // Socket event handlers\n  socket.on('admin-login-success', () => {\n    console.log('🎉 Login successful!');\n    isLoggedIn = true;\n    \n    // Clear the loading state immediately\n    const loginBtn = document.querySelector('.login-btn');\n    if (loginBtn) {\n      loginBtn.classList.remove('loading');\n      loginBtn.disabled = false;\n    }\n    \n    showAdminPanel();\n  });\n\n  // Cache admin config for faster loading\n  socket.on('admin-config', (config) => {\n    adminConfig = config;\n    if (isLoggedIn) {\n      applyAdminConfig();\n    }\n  });\n\n  socket.on('admin-login-failed', (data) => {\n    console.log('❌ Login failed:', data);\n    \n    // Clear the loading state immediately\n    const loginBtn = document.querySelector('.login-btn');\n    if (loginBtn) {\n      loginBtn.classList.remove('loading');\n      loginBtn.disabled = false;\n    }\n    \n    showToast(data.reason || 'รหัสผ่านไม่ถูกต้อง กรุณาลองใหม่', 'error');\n    passwordInput.value = '';\n    passwordInput.focus();\n  });\n\n  socket.on('admin-config', (config) => {\n    adminConfig = config;\n    updateAdminInterface(config);\n    \n    // ถ้าต้องตั้งรหัสผ่านครั้งแรก\n    if (config.needPasswordSetup) {\n      console.log('🔧 Need to setup password for first time');\n      showPasswordSetupModal();\n    }\n  });\n\n  socket.on('config-update', (config) => {\n    updatePreviewFromConfig(config);\n  });\n\n  socket.on('password-setup-success', () => {\n    showToast('ตั้งรหัสผ่านสำเร็จ! ครั้งต่อไปใช้รหัสผ่านนี้เข้าสู่ระบบ', 'success');\n    \n    // ปิด modal\n    const modal = document.getElementById('password-setup-modal');\n    if (modal) {\n      modal.remove();\n    }\n    \n    // อัพเดต config\n    adminConfig.needPasswordSetup = false;\n  });\n\n  socket.on('password-setup-failed', () => {\n    showToast('ไม่สามารถตั้งรหัสผ่านได้', 'error');\n    \n    const setupBtn = document.getElementById('setupPasswordBtn');\n    if (setupBtn) {\n      setupBtn.classList.remove('loading');\n      setupBtn.innerHTML = '<i class=\"fas fa-check\"></i> ตั้งรหัสผ่าน';\n      setupBtn.disabled = false;\n    }\n  });\n\n  socket.on('password-changed', () => {\n    showToast('เปลี่ยนรหัสผ่านสำเร็จ', 'success');\n    newPasswordInput.value = '';\n    confirmPasswordInput.value = '';\n  });\n\n  socket.on('password-change-failed', () => {\n    showToast('ไม่สามารถเปลี่ยนรหัสผ่านได้', 'error');\n  });\n\n  // File Management responses\n  socket.on('file-stats-update', (stats) => {\n    console.log('Received file stats:', stats);\n    updateFileStats(stats);\n    showToast('อัปเดตข้อมูลไฟล์แล้ว', 'success');\n  });\n\n  socket.on('config-update-success', (config) => {\n    console.log('Config update confirmed:', config);\n    updateAdminInterface(config);\n  });\n\n  socket.on('cleanup-completed', (result) => {\n    cleanupOldFilesBtn.classList.remove('loading');\n    cleanupOldFilesBtn.innerHTML = '<i class=\"fas fa-trash\"></i> ล้างไฟล์เก่า';\n    showToast(`ล้างไฟล์เสร็จแล้ว: ${result.message}`, 'success');\n    handleRefreshFileStats(); // Refresh stats after cleanup\n  });\n\n  socket.on('cleanup-failed', (error) => {\n    cleanupOldFilesBtn.classList.remove('loading');\n    cleanupOldFilesBtn.innerHTML = '<i class=\"fas fa-trash\"></i> ล้างไฟล์เก่า';\n    showToast(`การล้างไฟล์ล้มเหลว: ${error.error}`, 'error');\n  });\n\n  // Real-time console updates\n  socket.on('new-error-log', (logEntry) => {\n    if (isLoggedIn) {\n      addLogToDisplay(logEntry);\n\n      // Auto scroll to latest log if user is viewing error logs\n      if (errorLogsList && errorLogsList.scrollHeight - errorLogsList.scrollTop <= errorLogsList.clientHeight + 50) {\n        setTimeout(() => {\n          errorLogsList.scrollTop = errorLogsList.scrollHeight;\n        }, 100);\n      }\n    }\n  });\n\n  socket.on('emergency-cleanup-completed', (result) => {\n    emergencyCleanupBtn.classList.remove('loading');\n    emergencyCleanupBtn.innerHTML = '<i class=\"fas fa-exclamation-triangle\"></i> ล้างข้อมูลฉุกเฉิน';\n    showToast(`ล้างข้อมูลฉุกเฉินเสร็จแล้ว: ${result.message}`, 'success');\n    handleRefreshFileStats(); // Refresh stats after cleanup\n  });\n\n  // System Monitor responses\n  socket.on('system-stats-update', (stats) => {\n    updateSystemStats(stats);\n  });\n\n  // Error Logs responses\n  socket.on('error-logs-update', (logs) => {\n    updateErrorLogs(logs);\n  });\n\n  socket.on('error-logs-cleared', () => {\n    errorLogsList.innerHTML = '<div class=\"log-item\">No errors logged</div>';\n    showToast('ล้าง error logs แล้ว', 'success');\n  });\n\n  socket.on('disconnect', () => {\n    showToast('การเชื่อมต่อขาดหาย', 'warning');\n  });\n\n  socket.on('reconnect', () => {\n    showToast('เชื่อมต่อใหม่สำเร็จ', 'success');\n    // Re-join admin room เมื่อเชื่อมต่อใหม่\n    socket.emit('join-admin');\n  });\n\n  // Backup & Restore responses\n  socket.on('backup-created', (data) => {\n    const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `admin-backup-${new Date().toISOString().split('T')[0]}.json`;\n    a.click();\n    URL.revokeObjectURL(url);\n    \n    document.getElementById('lastBackupTime').textContent = new Date().toLocaleString('th-TH');\n    showToast('สร้าง backup สำเร็จ', 'success');\n  });\n\n  socket.on('backup-restored', () => {\n    showToast('กู้คืนข้อมูลสำเร็จ กำลังรีโหลดหน้า...', 'success');\n    setTimeout(() => {\n      location.reload();\n    }, 2000);\n  });\n\n  socket.on('backup-restore-failed', (error) => {\n    showToast(`การกู้คืนล้มเหลว: ${error.message}`, 'error');\n  });\n\n  // Rate limiting responses\n  socket.on('rate-limit-stats', (data) => {\n    document.getElementById('totalIPs').textContent = data.totalIPs || 0;\n    document.getElementById('blockedIPs').textContent = data.blockedIPs || 0;\n    document.getElementById('requestsPerHour').textContent = data.requestsPerHour || 0;\n    \n    const blockedList = document.getElementById('blockedIPsList');\n    if (data.blockedIPsList && data.blockedIPsList.length > 0) {\n      blockedList.innerHTML = data.blockedIPsList.map(ip => `\n        <div class=\"ip-item\">\n          <span>${ip.address}</span>\n          <button onclick=\"unblockIP('${ip.address}')\" class=\"btn btn-sm btn-success\">\n            <i class=\"fas fa-unlock\"></i> Unblock\n          </button>\n        </div>\n      `).join('');\n    } else {\n      blockedList.innerHTML = '<div class=\"ip-item\">No blocked IPs</div>';\n    }\n  });\n\n  socket.on('ip-blocked', () => {\n    handleRefreshRateLimit();\n  });\n\n  // Queue management responses\n  socket.on('queue-stats', (data) => {\n    document.getElementById('queueLength').textContent = data.length || 0;\n    document.getElementById('processingCount').textContent = data.processing || 0;\n    document.getElementById('avgWaitTime').textContent = `${data.avgWaitTime || 0}s`;\n    \n    const queueList = document.getElementById('queueList');\n    if (data.items && data.items.length > 0) {\n      queueList.innerHTML = data.items.map(item => `\n        <div class=\"queue-item\">\n          <div>\n            <strong>${item.type}</strong> - ${item.status}\n            <br><small>Started: ${new Date(item.startTime).toLocaleTimeString('th-TH')}</small>\n          </div>\n          <button onclick=\"cancelQueueItem('${item.id}')\" class=\"btn btn-sm btn-danger\">\n            <i class=\"fas fa-times\"></i> Cancel\n          </button>\n        </div>\n      `).join('');\n    } else {\n      queueList.innerHTML = '<div class=\"queue-item\">No items in queue</div>';\n    }\n  });\n\n  socket.on('queue-paused', () => {\n    document.getElementById('pauseQueue').disabled = true;\n    document.getElementById('resumeQueue').disabled = false;\n  });\n\n  socket.on('queue-resumed', () => {\n    document.getElementById('pauseQueue').disabled = false;\n    document.getElementById('resumeQueue').disabled = true;\n  });\n\n  socket.on('queue-cleared', () => {\n    document.getElementById('queueList').innerHTML = '<div class=\"queue-item\">No items in queue</div>';\n    document.getElementById('queueLength').textContent = '0';\n  });\n\n  // Event management responses\n  socket.on('event-created', (event) => {\n    showToast(`🎉 อีเว้นท์ \"${event.title}\" ถูกสร้างแล้ว!`, 'success');\n    loadEventsList();\n    clearEventForm();\n  });\n\n  socket.on('event-create-failed', (error) => {\n    showToast(`ไม่สามารถสร้างอีเว้นท์ได้: ${error.error}`, 'error');\n  });\n\n  socket.on('events-list', (events) => {\n    updateEventsList(events);\n  });\n\n  socket.on('event-deleted-success', () => {\n    showToast('ลบอีเว้นท์สำเร็จ', 'success');\n    loadEventsList();\n  });\n\n  socket.on('event-toggled-success', () => {\n    showToast('เปลี่ยนสถานะอีเว้นท์แล้ว', 'success');\n    loadEventsList();\n  });\n\n  socket.on('command-executed', (result) => {\n    if (result.success) {\n      showToast('ประมวลผลคำสั่งสำเร็จ! 🎮', 'success');\n    } else {\n      showToast(`คำสั่งล้มเหลว: ${result.error}`, 'error');\n    }\n  });\n\n  // เชื่อมต่อเข้า admin room เพื่อรับข้อมูลทั้งหมด\n  socket.emit('join-admin');\n}\n\n// Global functions for UI interactions\nfunction unblockIP(ip) {\n  socket.emit('admin-unblock-ip', { ip });\n  showToast(`ยกเลิกการบล็อค IP ${ip}`, 'success');\n}\n\nfunction cancelQueueItem(id) {\n  socket.emit('admin-cancel-queue-item', { id });\n  showToast('ยกเลิกรายการในคิวแล้ว', 'info');\n}\n\nfunction setupEventListeners() {\n  // Login form - prevent default form submission\n  loginForm.addEventListener('submit', function(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    handleLogin(e);\n    return false;\n  });\n\n  // GIF management\n  updateGifBtn.addEventListener('click', handleGifUpdate);\n  gifUrlInput.addEventListener('input', handleGifPreview);\n\n  // Color management\n  updateColorsBtn.addEventListener('click', handleColorUpdate);\n  primaryColorInput.addEventListener('change', updateColorPreview);\n  secondaryColorInput.addEventListener('change', updateColorPreview);\n  accentColorInput.addEventListener('change', updateColorPreview);\n\n  // System toggles - Fixed event listeners\n  if (uploadToggle) {\n    uploadToggle.addEventListener('change', function() {\n      handleSystemToggle('upload', uploadToggle.checked);\n    });\n  }\n\n  if (youtubeToggle) {\n    youtubeToggle.addEventListener('change', function() {\n      handleSystemToggle('youtube', youtubeToggle.checked);\n    });\n  }\n\n  // Announcements\n  updateAnnouncementBtn.addEventListener('click', handleAnnouncementUpdate);\n  clearAnnouncementBtn.addEventListener('click', handleAnnouncementClear);\n  announcementInput.addEventListener('input', updateAnnouncementPreview);\n\n  // Password change\n  changePasswordBtn.addEventListener('click', handlePasswordChange);\n\n  // Logout\n  logoutBtn.addEventListener('click', handleLogout);\n\n  // File Management\n  refreshFileStatsBtn.addEventListener('click', handleRefreshFileStats);\n  cleanupOldFilesBtn.addEventListener('click', handleCleanupOldFiles);\n  emergencyCleanupBtn.addEventListener('click', handleEmergencyCleanup);\n\n  // System Monitor\n  refreshSystemStatsBtn.addEventListener('click', handleRefreshSystemStats);\n\n  // Error Monitoring\n  refreshErrorLogsBtn.addEventListener('click', handleRefreshErrorLogs);\n  clearErrorLogsBtn.addEventListener('click', handleClearErrorLogs);\n\n  // Backup & Restore\n  const createBackupBtn = document.getElementById('createBackup');\n  const selectBackupFileBtn = document.getElementById('selectBackupFile');\n  const restoreBackupBtn = document.getElementById('restoreBackup');\n  const restoreFileInput = document.getElementById('restoreFile');\n  \n  if (createBackupBtn) createBackupBtn.addEventListener('click', handleCreateBackup);\n  if (selectBackupFileBtn) selectBackupFileBtn.addEventListener('click', () => restoreFileInput.click());\n  if (restoreBackupBtn) restoreBackupBtn.addEventListener('click', handleRestoreBackup);\n  if (restoreFileInput) restoreFileInput.addEventListener('change', handleBackupFileSelected);\n\n  // Rate Limiting\n  const blockIPBtn = document.getElementById('blockIP');\n  const refreshRateLimitBtn = document.getElementById('refreshRateLimit');\n  \n  if (blockIPBtn) blockIPBtn.addEventListener('click', handleBlockIP);\n  if (refreshRateLimitBtn) refreshRateLimitBtn.addEventListener('click', handleRefreshRateLimit);\n\n  // Queue Management\n  const pauseQueueBtn = document.getElementById('pauseQueue');\n  const resumeQueueBtn = document.getElementById('resumeQueue');\n  const clearQueueBtn = document.getElementById('clearQueue');\n  \n  if (pauseQueueBtn) pauseQueueBtn.addEventListener('click', handlePauseQueue);\n  if (resumeQueueBtn) resumeQueueBtn.addEventListener('click', handleResumeQueue);\n  if (clearQueueBtn) clearQueueBtn.addEventListener('click', handleClearQueue);\n\n  // Event Management\n  const createEventBtn = document.getElementById('createEvent');\n  if (createEventBtn) createEventBtn.addEventListener('click', handleCreateEvent);\n\n  // Real-time input updates\n  setupRealtimeUpdates();\n}\n\nfunction handleLogin(e) {\n  if (e) {\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  const password = passwordInput.value.trim();\n  console.log('🔑 Attempting admin login');\n\n  if (!password) {\n    showToast('กรุณาใส่รหัสผ่าน', 'warning');\n    return false;\n  }\n\n  // Check socket connection status\n  if (!socket.connected) {\n    console.error('❌ Socket not connected, attempting to connect...');\n    console.log('Socket state:', socket.connected, socket.disconnected);\n    showToast('กำลังเชื่อมต่อเซิร์ฟเวอร์...', 'info');\n    socket.connect();\n    \n    // Try again after connection attempt\n    setTimeout(() => {\n      if (socket.connected) {\n        handleLogin();\n      } else {\n        showToast('ไม่สามารถเชื่อมต่อเซิร์ฟเวอร์ได้', 'error');\n        const loginBtn = document.querySelector('.login-btn');\n        loginBtn.classList.remove('loading');\n        loginBtn.disabled = false;\n      }\n    }, 2000);\n    return false;\n  }\n\n  // Show loading state\n  const loginBtn = document.querySelector('.login-btn');\n  loginBtn.classList.add('loading');\n  loginBtn.disabled = true;\n\n  console.log('📡 Sending admin-login event...');\n  socket.emit('admin-login', { password });\n\n  // Add timeout mechanism\n  const loginTimeout = setTimeout(() => {\n    console.error('⏰ Login timeout');\n    showToast('การเชื่อมต่อล้มเหลว กรุณาลองใหม่', 'error');\n    loginBtn.classList.remove('loading');\n    loginBtn.disabled = false;\n  }, 10000);\n\n  // Clear timeout when we get a response\n  const clearLoginTimeout = () => {\n    clearTimeout(loginTimeout);\n    loginBtn.classList.remove('loading');\n    loginBtn.disabled = false;\n  };\n\n  socket.once('admin-login-success', clearLoginTimeout);\n  socket.once('admin-login-failed', clearLoginTimeout);\n  \n  return false;\n}\n\nfunction showAdminPanel() {\n  // Fast transition without animation delay\n  loginScreen.style.display = 'none';\n  adminPanel.style.display = 'block';\n\n  // เปิดใช้งาน Admin Mode เอฟเฟค\n  enableAdminEffects();\n\n  // Load config immediately if available\n  if (Object.keys(adminConfig).length > 0) {\n    applyAdminConfig();\n  } else {\n    loadAdminConfig();\n  }\n\n  // Load real file stats immediately\n  handleRefreshFileStats();\n  handleRefreshSystemStats();\n\n  // Initialize advanced features after login\n  setTimeout(() => {\n    if (isLoggedIn) {\n      initializeAdvancedFeatures();\n      loadAdvancedSettings();\n      loadEventsList(); // โหลดรายการอีเว้นท์\n    }\n  }, 1000);\n\n  // Auto-refresh every 30 seconds when logged in\n  setInterval(() => {\n    if (isLoggedIn) {\n      handleRefreshFileStats();\n      handleRefreshSystemStats();\n    }\n  }, 30000);\n}\n\nfunction handleGifUpdate() {\n  const gifUrl = gifUrlInput.value.trim();\n\n  if (!gifUrl) {\n    showToast('กรุณาใส่ URL ของ GIF', 'warning');\n    return;\n  }\n\n  if (!isValidUrl(gifUrl)) {\n    showToast('URL ไม่ถูกต้อง', 'warning');\n    return;\n  }\n\n  updateGifBtn.classList.add('loading');\n\n  socket.emit('admin-update-config', { gifUrl });\n\n  setTimeout(() => {\n    updateGifBtn.classList.remove('loading');\n    showToast('อัปเดต GIF สำเร็จ', 'success');\n  }, 1000);\n}\n\nfunction handleGifPreview() {\n  const gifUrl = gifUrlInput.value.trim();\n\n  if (gifUrl && isValidUrl(gifUrl)) {\n    gifPreview.src = gifUrl;\n    gifPreview.style.display = 'block';\n    gifPreview.style.animation = 'fadeIn 0.5s ease';\n  } else {\n    gifPreview.style.display = 'none';\n  }\n}\n\nfunction handleColorUpdate() {\n  const colors = {\n    primaryColor: primaryColorInput.value,\n    secondaryColor: secondaryColorInput.value,\n    accentColor: accentColorInput.value\n  };\n\n  updateColorsBtn.classList.add('loading');\n\n  socket.emit('admin-update-config', colors);\n\n  setTimeout(() => {\n    updateColorsBtn.classList.remove('loading');\n    showToast('อัปเดตสีสำเร็จ', 'success');\n  }, 1000);\n}\n\nfunction updateColorPreview() {\n  const primary = primaryColorInput.value;\n  const secondary = secondaryColorInput.value;\n  const accent = accentColorInput.value;\n\n  // Update CSS variables for preview\n  document.documentElement.style.setProperty('--primary-color', primary);\n  document.documentElement.style.setProperty('--secondary-color', secondary);\n  document.documentElement.style.setProperty('--accent-color', accent);\n}\n\nfunction handleSystemToggle(type, enabled) {\n  console.log(`Toggle ${type} to ${enabled}`); // Debug log\n\n  const config = {};\n\n  if (type === 'upload') {\n    config.uploadEnabled = enabled;\n    showToast(enabled ? 'เปิดใช้งานการอัปโหลดไฟล์แล้ว' : 'ปิดใช้งานการอัปโหลดไฟล์แล้ว', 'success');\n  } else if (type === 'youtube') {\n    config.youtubeEnabled = enabled;\n    showToast(enabled ? 'เปิดใช้งาน YouTube แล้ว' : 'ปิดใช้งาน YouTube แล้ว', 'success');\n  }\n\n  console.log('Emitting config:', config); // Debug log\n  socket.emit('admin-update-config', config);\n\n  // Update status immediately for better UX\n  setTimeout(() => {\n    updateSystemStatus();\n  }, 100);\n}\n\nfunction updateSystemStatus() {\n  if (uploadStatus && uploadToggle) {\n    uploadStatus.textContent = uploadToggle.checked ? 'Online' : 'Offline';\n    uploadStatus.className = `status-value ${uploadToggle.checked ? 'online' : 'offline'}`;\n\n    // Add animation effect\n    uploadStatus.style.transform = 'scale(1.1)';\n    setTimeout(() => {\n      uploadStatus.style.transform = 'scale(1)';\n    }, 200);\n  }\n\n  if (youtubeStatus && youtubeToggle) {\n    youtubeStatus.textContent = youtubeToggle.checked ? 'Online' : 'Offline';\n    youtubeStatus.className = `status-value ${youtubeToggle.checked ? 'online' : 'offline'}`;\n\n    // Add animation effect\n    youtubeStatus.style.transform = 'scale(1.1)';\n    setTimeout(() => {\n      youtubeStatus.style.transform = 'scale(1)';\n    }, 200);\n  }\n}\n\nfunction handleAnnouncementUpdate() {\n  const announcement = announcementInput.value.trim();\n\n  updateAnnouncementBtn.classList.add('loading');\n\n  socket.emit('admin-update-config', { announcement });\n\n  setTimeout(() => {\n    updateAnnouncementBtn.classList.remove('loading');\n    showToast('ประกาศสำเร็จ', 'success');\n  }, 1000);\n}\n\nfunction handleAnnouncementClear() {\n  announcementInput.value = '';\n  updateAnnouncementPreview();\n\n  socket.emit('admin-update-config', { announcement: '' });\n  showToast('ล้างประกาศแล้ว', 'success');\n}\n\nfunction updateAnnouncementPreview() {\n  const text = announcementInput.value.trim();\n  announcementPreview.textContent = text || 'No announcement';\n  announcementPreview.style.fontStyle = text ? 'normal' : 'italic';\n}\n\nfunction showPasswordSetupModal() {\n  // สร้าง modal สำหรับตั้งรหัสผ่านครั้งแรก\n  const modal = document.createElement('div');\n  modal.id = 'password-setup-modal';\n  modal.style.cssText = `\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.8);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    z-index: 10000;\n    backdrop-filter: blur(10px);\n  `;\n  \n  modal.innerHTML = `\n    <div style=\"\n      background: var(--glass-bg);\n      backdrop-filter: blur(20px);\n      border-radius: var(--border-radius);\n      padding: 40px;\n      border: 1px solid var(--glass-border);\n      box-shadow: var(--shadow);\n      max-width: 400px;\n      width: 90%;\n      text-align: center;\n    \">\n      <div style=\"margin-bottom: 20px;\">\n        <i class=\"fas fa-key\" style=\"font-size: 3rem; color: var(--primary-color); margin-bottom: 15px;\"></i>\n        <h2 style=\"color: var(--text-light); margin-bottom: 10px;\">ตั้งรหัสผ่านครั้งแรก</h2>\n        <p style=\"color: rgba(255, 255, 255, 0.7); font-size: 0.9rem;\">กรุณาตั้งรหัสผ่านใหม่สำหรับเข้าสู่ระบบครั้งต่อไป</p>\n      </div>\n      \n      <div style=\"margin-bottom: 20px;\">\n        <input type=\"password\" id=\"setupPassword\" placeholder=\"รหัสผ่านใหม่\" style=\"\n          width: 100%;\n          padding: 15px;\n          border: 2px solid var(--glass-border);\n          border-radius: 10px;\n          background: rgba(255, 255, 255, 0.9);\n          color: var(--text-dark);\n          font-size: 1rem;\n          margin-bottom: 15px;\n        \">\n        <input type=\"password\" id=\"setupPasswordConfirm\" placeholder=\"ยืนยันรหัสผ่าน\" style=\"\n          width: 100%;\n          padding: 15px;\n          border: 2px solid var(--glass-border);\n          border-radius: 10px;\n          background: rgba(255, 255, 255, 0.9);\n          color: var(--text-dark);\n          font-size: 1rem;\n        \">\n      </div>\n      \n      <button id=\"setupPasswordBtn\" style=\"\n        width: 100%;\n        padding: 15px;\n        background: linear-gradient(45deg, var(--primary-color), var(--secondary-color));\n        color: white;\n        border: none;\n        border-radius: 10px;\n        font-size: 1rem;\n        font-weight: 600;\n        cursor: pointer;\n        transition: all 0.3s ease;\n      \">\n        <i class=\"fas fa-check\"></i> ตั้งรหัสผ่าน\n      </button>\n    </div>\n  `;\n  \n  document.body.appendChild(modal);\n  \n  // Event listener สำหรับปุ่มตั้งรหัสผ่าน\n  document.getElementById('setupPasswordBtn').addEventListener('click', handlePasswordSetup);\n  \n  // Focus ที่ input แรก\n  document.getElementById('setupPassword').focus();\n}\n\nfunction handlePasswordSetup() {\n  const password = document.getElementById('setupPassword').value.trim();\n  const confirmPassword = document.getElementById('setupPasswordConfirm').value.trim();\n  \n  if (!password || !confirmPassword) {\n    showToast('กรุณาใส่รหัสผ่านให้ครบถ้วน', 'warning');\n    return;\n  }\n  \n  if (password !== confirmPassword) {\n    showToast('รหัสผ่านไม่ตรงกัน', 'warning');\n    return;\n  }\n  \n  if (password.length < 6) {\n    showToast('รหัสผ่านต้องมีอย่างน้อย 6 ตัวอักษร', 'warning');\n    return;\n  }\n  \n  const setupBtn = document.getElementById('setupPasswordBtn');\n  setupBtn.classList.add('loading');\n  setupBtn.innerHTML = '<i class=\"fas fa-spinner fa-spin\"></i> กำลังตั้งรหัสผ่าน...';\n  setupBtn.disabled = true;\n  \n  socket.emit('admin-setup-password', { newPassword: password });\n}\n\nfunction handlePasswordChange() {\n  const newPassword = newPasswordInput.value.trim();\n  const confirmPassword = confirmPasswordInput.value.trim();\n\n  if (!newPassword || !confirmPassword) {\n    showToast('กรุณาใส่รหัสผ่านให้ครบถ้วน', 'warning');\n    return;\n  }\n\n  if (newPassword !== confirmPassword) {\n    showToast('รหัสผ่านไม่ตรงกัน', 'warning');\n    return;\n  }\n\n  if (newPassword.length < 6) {\n    showToast('รหัสผ่านต้องมีอย่างน้อย 6 ตัวอักษร', 'warning');\n    return;\n  }\n\n  changePasswordBtn.classList.add('loading');\n\n  socket.emit('admin-change-password', { newPassword });\n\n  setTimeout(() => {\n    changePasswordBtn.classList.remove('loading');\n  }, 2000);\n}\n\nfunction handleLogout() {\n  isLoggedIn = false;\n  loginScreen.style.display = 'flex';\n  adminPanel.style.display = 'none';\n  passwordInput.value = '';\n  socket.disconnect();\n  socket.connect();\n  showToast('ออกจากระบบแล้ว', 'success');\n}\n\n// File Management Functions\nfunction handleRefreshFileStats() {\n  refreshFileStatsBtn.classList.add('loading');\n  socket.emit('admin-get-file-stats');\n\n  setTimeout(() => {\n    refreshFileStatsBtn.classList.remove('loading');\n  }, 1000);\n}\n\nfunction handleCleanupOldFiles() {\n  if (!confirm('คุณต้องการล้างไฟล์เก่าหรือไม่? การดำเนินการนี้ไม่สามารถย้อนกลับได้')) {\n    return;\n  }\n\n  cleanupOldFilesBtn.classList.add('loading');\n  cleanupOldFilesBtn.innerHTML = '<i class=\"fas fa-spinner fa-spin\"></i> กำลังล้างไฟล์...';\n  socket.emit('admin-cleanup-files');\n\n  showToast('เริ่มล้างไฟล์เก่า กรุณารอสักครู่...', 'info');\n}\n\nfunction handleEmergencyCleanup() {\n  if (!confirm('คุณต้องการทำการล้างข้อมูลฉุกเฉินหรือไม่? การดำเนินการนี้จะลบไฟล์จำนวนมาก!')) {\n    return;\n  }\n\n  emergencyCleanupBtn.classList.add('loading');\n  socket.emit('admin-emergency-cleanup');\n\n  showToast('เริ่มล้างข้อมูลฉุกเฉิน...', 'warning');\n\n  setTimeout(() => {\n    emergencyCleanupBtn.classList.remove('loading');\n  }, 5000);\n}\n\n// System Monitor Functions\nfunction handleRefreshSystemStats() {\n  refreshSystemStatsBtn.classList.add('loading');\n  socket.emit('admin-get-system-stats');\n\n  setTimeout(() => {\n    refreshSystemStatsBtn.classList.remove('loading');\n  }, 1000);\n}\n\n// Error Monitoring Functions\nfunction handleRefreshErrorLogs() {\n  refreshErrorLogsBtn.classList.add('loading');\n  socket.emit('admin-get-error-logs');\n\n  setTimeout(() => {\n    refreshErrorLogsBtn.classList.remove('loading');\n  }, 1000);\n}\n\nfunction handleClearErrorLogs() {\n  if (!confirm('คุณต้องการล้าง error logs หรือไม่?')) {\n    return;\n  }\n\n  clearErrorLogsBtn.classList.add('loading');\n  socket.emit('admin-clear-error-logs');\n\n  showToast('ล้าง error logs แล้ว', 'success');\n\n  setTimeout(() => {\n    clearErrorLogsBtn.classList.remove('loading');\n    errorLogsList.innerHTML = '<div class=\"log-item\">No errors logged</div>';\n  }, 1000);\n}\n\n// Update display functions\nfunction updateFileStats(stats) {\n  if (uploadFilesCount) uploadFilesCount.textContent = stats.uploadFiles || 0;\n  if (outputFilesCount) outputFilesCount.textContent = stats.outputFiles || 0;\n  if (zipFilesCount) zipFilesCount.textContent = stats.zipFiles || 0;\n  if (diskUsageDisplay) diskUsageDisplay.textContent = formatBytes(stats.diskUsage || 0);\n\n  // Update recent activity\n  if (recentActivityList && stats.recentActivity) {\n    recentActivityList.innerHTML = '';\n    stats.recentActivity.slice(0, 5).forEach(activity => {\n      const activityItem = document.createElement('div');\n      activityItem.className = 'activity-item';\n      activityItem.innerHTML = `\n        <span class=\"activity-time\">${formatTime(activity.time)}</span>\n        <span class=\"activity-message\">${activity.message}</span>\n      `;\n      recentActivityList.appendChild(activityItem);\n    });\n  }\n}\n\nfunction updateSystemStats(stats) {\n  if (connectedUsersCount) connectedUsersCount.textContent = stats.connectedUsers || 0;\n  if (activeProcessesCount) activeProcessesCount.textContent = stats.activeProcesses || 0;\n  if (totalRequestsCount) totalRequestsCount.textContent = stats.totalRequests || 0;\n  if (uptimeDisplay) uptimeDisplay.textContent = formatUptime(stats.uptime || 0);\n}\n\nfunction updateErrorLogs(logs) {\n  if (!errorLogsList) return;\n\n  errorLogsList.innerHTML = '';\n\n  if (!logs || logs.length === 0) {\n    errorLogsList.innerHTML = '<div class=\"log-item\">No errors logged</div>';\n    return;\n  }\n\n  logs.slice(0, 20).forEach(log => {\n    const logItem = document.createElement('div');\n    logItem.className = `log-item ${log.level}`;\n    logItem.innerHTML = `\n      <span class=\"log-time\">${formatTime(log.timestamp)}</span>\n      <span class=\"log-level\">${log.level.toUpperCase()}</span>\n      <span class=\"log-message\">${log.message}</span>\n    `;\n    errorLogsList.appendChild(logItem);\n  });\n}\n\n// Add single log entry to display (for real-time updates)\nfunction addLogToDisplay(log) {\n  if (!errorLogsList) return;\n\n  // Remove \"No errors logged\" message if it exists\n  const noLogsMessage = errorLogsList.querySelector('.log-item');\n  if (noLogsMessage && noLogsMessage.textContent === 'No errors logged') {\n    errorLogsList.innerHTML = '';\n  }\n\n  const logItem = document.createElement('div');\n  logItem.className = `log-item ${log.level}`;\n  logItem.style.opacity = '0';\n  logItem.style.transform = 'translateY(-10px)';\n  logItem.innerHTML = `\n    <span class=\"log-time\">${formatTime(log.timestamp)}</span>\n    <span class=\"log-level\">${log.level.toUpperCase()}</span>\n    <span class=\"log-message\">${log.message}</span>\n  `;\n\n  // Add to top of list\n  errorLogsList.insertBefore(logItem, errorLogsList.firstChild);\n\n  // Animate in\n  setTimeout(() => {\n    logItem.style.transition = 'all 0.3s ease';\n    logItem.style.opacity = '1';\n    logItem.style.transform = 'translateY(0)';\n  }, 10);\n\n  // Remove excess logs (keep only latest 50 since we're capturing all console output)\n  const allLogs = errorLogsList.querySelectorAll('.log-item');\n  if (allLogs.length > 50) {\n    for (let i = 50; i < allLogs.length; i++) {\n      allLogs[i].remove();\n    }\n  }\n}\n\n// Utility functions\nfunction formatBytes(bytes) {\n  if (bytes === 0) return '0 B';\n  const k = 1024;\n  const sizes = ['B', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}\n\nfunction formatTime(timestamp) {\n  const date = new Date(timestamp);\n  return date.toLocaleTimeString('th-TH', {\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit'\n  });\n}\n\nfunction formatUptime(seconds) {\n  const hours = Math.floor(seconds / 3600);\n  const minutes = Math.floor((seconds % 3600) / 60);\n\n  if (hours > 0) {\n    return `${hours}h ${minutes}m`;\n  } else {\n    return `${minutes}m`;\n  }\n}\n\n// Fast config application function\nfunction applyAdminConfig() {\n  const config = adminConfig;\n  if (!config) return;\n\n  updateAdminInterface(config);\n  updateSystemStatus();\n}\n\n// Fast config loading without waiting for socket events\nfunction loadAdminConfig() {\n  // If already cached, apply immediately\n  if (Object.keys(adminConfig).length > 0) {\n    applyAdminConfig();\n    return;\n  }\n  // Otherwise request from server\n  socket.emit('get-admin-config');\n}\n\nfunction updateAdminInterface(config) {\n  console.log('Updating admin interface with config:', config);\n\n  // Update form values quickly\n  if (gifUrlInput) gifUrlInput.value = config.gifUrl || '';\n  if (primaryColorInput) primaryColorInput.value = config.primaryColor || '#667eea';\n  if (secondaryColorInput) secondaryColorInput.value = config.secondaryColor || '#764ba2';\n  if (accentColorInput) accentColorInput.value = config.accentColor || '#f093fb';\n\n  if (uploadToggle) {\n    uploadToggle.checked = config.uploadEnabled !== false;\n    console.log('Upload toggle set to:', uploadToggle.checked);\n  }\n  if (youtubeToggle) {\n    youtubeToggle.checked = config.youtubeEnabled !== false;\n    console.log('YouTube toggle set to:', youtubeToggle.checked);\n  }\n\n  if (announcementInput) announcementInput.value = config.announcement || '';\n\n  // Update previews\n  handleGifPreview();\n  updateColorPreview();\n  updateSystemStatus();\n  updateAnnouncementPreview();\n}\n\nfunction updatePreviewFromConfig(config) {\n  // Update color preview\n  document.documentElement.style.setProperty('--primary-color', config.primaryColor);\n  document.documentElement.style.setProperty('--secondary-color', config.secondaryColor);\n  document.documentElement.style.setProperty('--accent-color', config.accentColor);\n}\n\nfunction setupRealtimeUpdates() {\n  // Debounced real-time updates for certain inputs\n  let colorUpdateTimeout;\n  let gifUpdateTimeout;\n  let announcementUpdateTimeout;\n\n  [primaryColorInput, secondaryColorInput, accentColorInput].forEach(input => {\n    input.addEventListener('change', () => {\n      clearTimeout(colorUpdateTimeout);\n      colorUpdateTimeout = setTimeout(() => {\n        if (isLoggedIn) {\n          handleColorUpdate();\n        }\n      }, 500);\n    });\n  });\n\n  gifUrlInput.addEventListener('input', () => {\n    clearTimeout(gifUpdateTimeout);\n    gifUpdateTimeout = setTimeout(() => {\n      handleGifPreview();\n    }, 300);\n  });\n\n  announcementInput.addEventListener('input', () => {\n    clearTimeout(announcementUpdateTimeout);\n    announcementUpdateTimeout = setTimeout(() => {\n      updateAnnouncementPreview();\n    }, 200);\n  });\n}\n\nfunction updateStatistics() {\n  // Mock statistics - in real app, these would come from the server\n  let connectedUsers = Math.floor(Math.random() * 50) + 10;\n  let activeProcesses = Math.floor(Math.random() * 5);\n  let totalRequests = Math.floor(Math.random() * 1000) + 500;\n\n  // Animate counter updates\n  animateCounter(connectedUsersSpan, connectedUsers);\n  animateCounter(activeProcessesSpan, activeProcesses);\n  animateCounter(totalRequestsSpan, totalRequests);\n\n  // Update every 30 seconds\n  setTimeout(updateStatistics, 30000);\n}\n\nfunction animateCounter(element, targetValue) {\n  const currentValue = parseInt(element.textContent) || 0;\n  const increment = Math.ceil((targetValue - currentValue) / 10);\n\n  if (currentValue !== targetValue) {\n    element.textContent = Math.max(0, currentValue + increment);\n    setTimeout(() => animateCounter(element, targetValue), 100);\n  }\n}\n\nfunction showToast(message, type = 'info') {\n  const toast = document.createElement('div');\n  toast.className = `toast ${type}`;\n\n  const icon = getToastIcon(type);\n  toast.innerHTML = `\n    <i class=\"${icon}\"></i>\n    <span>${message}</span>\n  `;\n\n  const container = document.getElementById('toast-container');\n  container.appendChild(toast);\n\n  // Auto remove after 5 seconds\n  setTimeout(() => {\n    toast.style.animation = 'toastSlideOut 0.3s ease forwards';\n    setTimeout(() => {\n      if (toast.parentNode) {\n        toast.parentNode.removeChild(toast);\n      }\n    }, 300);\n  }, 5000);\n}\n\nfunction getToastIcon(type) {\n  switch (type) {\n    case 'success': return 'fas fa-check-circle';\n    case 'error': return 'fas fa-exclamation-circle';\n    case 'warning': return 'fas fa-exclamation-triangle';\n    default: return 'fas fa-info-circle';\n  }\n}\n\nfunction isValidUrl(string) {\n  try {\n    new URL(string);\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\n\n// Add toast slide out animation\nconst style = document.createElement('style');\nstyle.textContent = `\n  @keyframes toastSlideOut {\n    from {\n      opacity: 1;\n      transform: translateX(0);\n    }\n    to {\n      opacity: 0;\n      transform: translateX(100%);\n    }\n  }\n`;\ndocument.head.appendChild(style);\n\n// Enhanced visual effects\nfunction addVisualEffects() {\n  // Add ripple effect to buttons\n  document.querySelectorAll('.btn').forEach(button => {\n    button.addEventListener('click', function(e) {\n      const ripple = document.createElement('span');\n      const rect = this.getBoundingClientRect();\n      const size = Math.max(rect.width, rect.height);\n      const x = e.clientX - rect.left - size / 2;\n      const y = e.clientY - rect.top - size / 2;\n\n      ripple.style.cssText = `\n        position: absolute;\n        width: ${size}px;\n        height: ${size}px;\n        left: ${x}px;\n        top: ${y}px;\n        background: rgba(255, 255, 255, 0.3);\n        border-radius: 50%;\n        transform: scale(0);\n        animation: ripple 0.6s linear;\n        pointer-events: none;\n      `;\n\n      this.style.position = 'relative';\n      this.style.overflow = 'hidden';\n      this.appendChild(ripple);\n\n      setTimeout(() => {\n        ripple.remove();\n      }, 600);\n    });\n  });\n}\n\n// Backup & Restore Functions\nfunction handleCreateBackup() {\n  const includeConfig = document.getElementById('backupConfig').checked;\n  const includeAnalytics = document.getElementById('backupAnalytics').checked;\n  const includeLogs = document.getElementById('backupLogs').checked;\n\n  if (!includeConfig && !includeAnalytics && !includeLogs) {\n    showToast('กรุณาเลือกข้อมูลที่ต้องการสำรอง', 'warning');\n    return;\n  }\n\n  const createBackupBtn = document.getElementById('createBackup');\n  createBackupBtn.classList.add('loading');\n  createBackupBtn.innerHTML = '<i class=\"fas fa-spinner fa-spin\"></i> Creating Backup...';\n\n  socket.emit('admin-create-backup', {\n    includeConfig,\n    includeAnalytics,\n    includeLogs\n  });\n\n  setTimeout(() => {\n    createBackupBtn.classList.remove('loading');\n    createBackupBtn.innerHTML = '<i class=\"fas fa-download\"></i> Create & Download Backup';\n  }, 3000);\n}\n\nfunction handleBackupFileSelected(event) {\n  const file = event.target.files[0];\n  const restoreBtn = document.getElementById('restoreBackup');\n  \n  if (file) {\n    restoreBtn.disabled = false;\n    restoreBtn.innerHTML = `<i class=\"fas fa-upload\"></i> Restore ${file.name}`;\n  } else {\n    restoreBtn.disabled = true;\n    restoreBtn.innerHTML = '<i class=\"fas fa-upload\"></i> Restore Backup';\n  }\n}\n\nfunction handleRestoreBackup() {\n  const fileInput = document.getElementById('restoreFile');\n  const file = fileInput.files[0];\n  \n  if (!file) {\n    showToast('กรุณาเลือกไฟล์ backup', 'warning');\n    return;\n  }\n\n  if (!confirm('คุณแน่ใจหรือไม่ที่จะกู้คืนข้อมูล? การดำเนินการนี้จะเขียนทับข้อมูลปัจจุบัน')) {\n    return;\n  }\n\n  const reader = new FileReader();\n  reader.onload = function(e) {\n    try {\n      const backupData = JSON.parse(e.target.result);\n      socket.emit('admin-restore-backup', backupData);\n      showToast('เริ่มกู้คืนข้อมูล...', 'info');\n    } catch (error) {\n      showToast('ไฟล์ backup ไม่ถูกต้อง', 'error');\n    }\n  };\n  reader.readAsText(file);\n}\n\n// Rate Limiting Functions\nfunction handleBlockIP() {\n  const ipInput = document.getElementById('ipAddress');\n  const ip = ipInput.value.trim();\n  \n  if (!ip) {\n    showToast('กรุณาใส่ IP Address', 'warning');\n    return;\n  }\n\n  if (!/^(\\d{1,3}\\.){3}\\d{1,3}$/.test(ip)) {\n    showToast('รูปแบบ IP Address ไม่ถูกต้อง', 'warning');\n    return;\n  }\n\n  socket.emit('admin-block-ip', { ip });\n  ipInput.value = '';\n  showToast(`บล็อค IP ${ip} แล้ว`, 'success');\n}\n\nfunction handleRefreshRateLimit() {\n  const refreshBtn = document.getElementById('refreshRateLimit');\n  refreshBtn.classList.add('loading');\n  socket.emit('admin-get-rate-limit-stats');\n  \n  setTimeout(() => {\n    refreshBtn.classList.remove('loading');\n  }, 1000);\n}\n\n// Queue Management Functions\nfunction handlePauseQueue() {\n  socket.emit('admin-pause-queue');\n  const pauseBtn = document.getElementById('pauseQueue');\n  const resumeBtn = document.getElementById('resumeQueue');\n  \n  pauseBtn.disabled = true;\n  resumeBtn.disabled = false;\n  showToast('หยุดคิวการประมวลผลชั่วคราว', 'info');\n}\n\nfunction handleResumeQueue() {\n  socket.emit('admin-resume-queue');\n  const pauseBtn = document.getElementById('pauseQueue');\n  const resumeBtn = document.getElementById('resumeQueue');\n  \n  pauseBtn.disabled = false;\n  resumeBtn.disabled = true;\n  showToast('เริ่มคิวการประมวลผลใหม่', 'success');\n}\n\nfunction handleClearQueue() {\n  if (!confirm('คุณแน่ใจหรือไม่ที่จะล้างคิวทั้งหมด? การดำเนินการนี้ไม่สามารถย้อนกลับได้')) {\n    return;\n  }\n  \n  socket.emit('admin-clear-queue');\n  showToast('ล้างคิวการประมวลผลแล้ว', 'warning');\n}\n\n// Event Management Functions\nfunction handleCreateEvent() {\n  const title = document.getElementById('eventTitle').value.trim();\n  const message = document.getElementById('eventMessage').value.trim();\n  const command = document.getElementById('eventCommand').value;\n  const duration = parseInt(document.getElementById('eventDuration').value) * 1000;\n\n  if (!title) {\n    showToast('กรุณาใส่ชื่อเหตุการณ์', 'warning');\n    return;\n  }\n\n  const eventData = {\n    title,\n    message: message || 'No message provided',\n    command,\n    duration,\n    type: command || 'custom'\n  };\n\n  document.getElementById('createEvent').classList.add('loading');\n  socket.emit('admin-create-event', eventData);\n\n  setTimeout(() => {\n    document.getElementById('createEvent').classList.remove('loading');\n  }, 2000);\n}\n\nfunction clearEventForm() {\n  document.getElementById('eventTitle').value = '';\n  document.getElementById('eventMessage').value = '';\n  document.getElementById('eventCommand').value = '';\n  document.getElementById('eventDuration').value = '10';\n}\n\nfunction loadEventsList() {\n  socket.emit('admin-get-events');\n}\n\nfunction updateEventsList(events) {\n  const eventsList = document.getElementById('eventsList');\n  \n  if (!events || events.length === 0) {\n    eventsList.innerHTML = '<div class=\"event-item\">No events created</div>';\n    return;\n  }\n\n  eventsList.innerHTML = events.map(event => `\n    <div class=\"event-item ${event.isActive ? 'active' : 'inactive'}\">\n      <div class=\"event-info\">\n        <strong>${event.title}</strong>\n        <div class=\"event-details\">\n          <span>Command: ${event.command || 'None'}</span>\n          <span>Created: ${new Date(event.createdAt).toLocaleString('th-TH')}</span>\n        </div>\n      </div>\n      <div class=\"event-actions\">\n        <button onclick=\"toggleEvent(${event.id}, ${!event.isActive})\" \n                class=\"btn btn-sm ${event.isActive ? 'btn-warning' : 'btn-success'}\">\n          ${event.isActive ? 'Disable' : 'Enable'}\n        </button>\n        <button onclick=\"deleteEvent(${event.id})\" class=\"btn btn-sm btn-danger\">\n          <i class=\"fas fa-trash\"></i>\n        </button>\n      </div>\n    </div>\n  `).join('');\n}\n\nfunction toggleEvent(eventId, active) {\n  socket.emit('admin-toggle-event', { eventId, active });\n}\n\nfunction deleteEvent(eventId) {\n  if (!confirm('คุณแน่ใจหรือไม่ที่จะลบอีเว้นท์นี้?')) {\n    return;\n  }\n  \n  socket.emit('admin-delete-event', { eventId });\n}\n\nfunction executeQuickCommand(command) {\n  socket.emit('admin-execute-command', { command });\n  showToast(`🎮 ประมวลผลคำสั่ง: ${command}`, 'info');\n}\n\n// Admin Effects System\nfunction enableAdminEffects() {\n  console.log('👑 เปิดใช้งาน ADMIN MODE EFFECTS!');\n  \n  // เริ่มต้น Power Level Counter\n  startPowerLevelAnimation();\n  \n  // เพิ่ม Matrix Rain Effect\n  createMatrixRain();\n  \n  // เพิ่มเสียงเอฟเฟค (ถ้ามี)\n  playAdminSound();\n  \n  // เปลี่ยนสี cursor\n  enableAdminCursor();\n  \n  // เพิ่ม Particle Effects\n  createParticleEffect();\n}\n\nfunction startPowerLevelAnimation() {\n  // Power level animation removed\n}\n\nfunction createMatrixRain() {\n  const matrix = document.createElement('div');\n  matrix.id = 'matrix-rain';\n  matrix.style.cssText = `\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    pointer-events: none;\n    z-index: 1;\n    opacity: 0.1;\n  `;\n  \n  document.body.appendChild(matrix);\n  \n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789@#$%^&*()';\n  \n  for (let i = 0; i < 50; i++) {\n    const column = document.createElement('div');\n    column.style.cssText = `\n      position: absolute;\n      top: -100vh;\n      left: ${Math.random() * 100}%;\n      color: #0f0;\n      font-family: 'Courier New', monospace;\n      font-size: 14px;\n      animation: matrixFall ${3 + Math.random() * 5}s linear infinite;\n      animation-delay: ${Math.random() * 3}s;\n    `;\n    \n    let text = '';\n    for (let j = 0; j < 20; j++) {\n      text += chars[Math.floor(Math.random() * chars.length)] + '<br>';\n    }\n    column.innerHTML = text;\n    matrix.appendChild(column);\n  }\n}\n\nfunction playAdminSound() {\n  // สร้างเสียง beep เท่ ๆ ด้วย Web Audio API\n  try {\n    const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    const oscillator = audioContext.createOscillator();\n    const gainNode = audioContext.createGain();\n    \n    oscillator.connect(gainNode);\n    gainNode.connect(audioContext.destination);\n    \n    oscillator.frequency.setValueAtTime(800, audioContext.currentTime);\n    oscillator.frequency.setValueAtTime(1200, audioContext.currentTime + 0.1);\n    oscillator.frequency.setValueAtTime(600, audioContext.currentTime + 0.2);\n    \n    gainNode.gain.setValueAtTime(0.1, audioContext.currentTime);\n    gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + 0.3);\n    \n    oscillator.start(audioContext.currentTime);\n    oscillator.stop(audioContext.currentTime + 0.3);\n    \n    console.log('🔊 Admin sound effect played!');\n  } catch (error) {\n    console.log('🔇 Could not play admin sound:', error);\n  }\n}\n\nfunction enableAdminCursor() {\n  // Admin cursor effects removed\n}\n\nfunction createParticleEffect() {\n  // Particle effects removed\n}\n\n// เพิ่ม CSS สำหรับเอฟเฟคใหม่\nconst adminEffectsStyle = document.createElement('style');\nadminEffectsStyle.textContent = `\n  @keyframes matrixFall {\n    from { transform: translateY(-100vh); }\n    to { transform: translateY(100vh); }\n  }\n  \n\n  \n  /* Enhanced button effects for admin */\n  .admin-panel .btn:hover {\n    box-shadow: 0 0 30px rgba(102, 126, 234, 0.8) !important;\n    transform: translateY(-3px) scale(1.05) !important;\n  }\n  \n  .admin-panel .control-card:hover {\n    box-shadow: 0 15px 50px rgba(102, 126, 234, 0.3) !important;\n    transform: translateY(-5px) !important;\n  }\n`;\ndocument.head.appendChild(adminEffectsStyle);\n\n// Add ripple and toggle animation CSS\nconst rippleStyle = document.createElement('style');\nrippleStyle.textContent = `\n  @keyframes ripple {\n    to {\n      transform: scale(4);\n      opacity: 0;\n    }\n  }\n\n  .status-value {\n    transition: all 0.3s ease, transform 0.2s ease;\n  }\n\n  .toggle-slider {\n    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n  .toggle-slider:before {\n    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n  .backup-section, .restore-section {\n    margin-bottom: 20px;\n    padding: 15px;\n    background: #1e1e1e;\n    border-radius: 8px;\n    border: 1px solid #333;\n  }\n\n  .backup-options {\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n    margin: 10px 0;\n  }\n\n  .backup-options label {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    color: #fff;\n    font-size: 14px;\n  }\n\n  .ip-input-group {\n    display: flex;\n    gap: 10px;\n    margin-bottom: 15px;\n  }\n\n  .ip-input-group input {\n    flex: 1;\n    padding: 8px 12px;\n    border: 1px solid #333;\n    border-radius: 6px;\n    background: #2a2a2a;\n    color: #fff;\n  }\n\n  .queue-item, .ip-item {\n    padding: 10px;\n    border-bottom: 1px solid #333;\n    color: #fff;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  .queue-list, .blocked-ips-list {\n    max-height: 200px;\n    overflow-y: auto;\n    border: 1px solid #333;\n    border-radius: 6px;\n    margin-bottom: 15px;\n  }\n`;\ndocument.head.appendChild(rippleStyle);\n\n// Initialize visual effects when DOM is loaded\ndocument.addEventListener('DOMContentLoaded', addVisualEffects);\n\n// Chat System\nlet chatUsers = new Set();\n\nfunction initializeChatSystem() {\n  const chatInput = document.getElementById('chatInput');\n  const chatSendBtn = document.getElementById('chatSendBtn');\n  const chatFileBtn = document.getElementById('chatFileBtn');\n  const chatFileInput = document.getElementById('chatFileInput');\n  const chatMessages = document.getElementById('chatMessages');\n  \n  // Send message on Enter key\n  chatInput.addEventListener('keypress', (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      sendChatMessage();\n    }\n  });\n  \n  // Send button click\n  chatSendBtn.addEventListener('click', sendChatMessage);\n  \n  // File upload button\n  chatFileBtn.addEventListener('click', () => {\n    chatFileInput.click();\n  });\n  \n  // File input change\n  chatFileInput.addEventListener('change', handleChatFile);\n  \n  // Socket events for chat\n  socket.on('chat-message', (data) => {\n    displayChatMessage(data);\n    updateChatUserCount();\n  });\n  \n  socket.on('chat-user-joined', (data) => {\n    chatUsers.add(data.userId);\n    updateChatUserCount();\n  });\n  \n  socket.on('chat-user-left', (data) => {\n    chatUsers.delete(data.userId);\n    updateChatUserCount();\n  });\n}\n\nfunction sendChatMessage() {\n  const chatInput = document.getElementById('chatInput');\n  const message = chatInput.value.trim();\n  \n  if (!message) return;\n  \n  const messageData = {\n    type: 'text',\n    content: message,\n    sender: 'admin',\n    timestamp: Date.now()\n  };\n  \n  socket.emit('admin-chat-message', messageData);\n  chatInput.value = '';\n  \n  // Display locally for admin\n  displayChatMessage(messageData);\n}\n\nfunction handleChatFile(event) {\n  const file = event.target.files[0];\n  if (!file) return;\n  \n  // Create file data URL for preview\n  const reader = new FileReader();\n  reader.onload = (e) => {\n    const messageData = {\n      type: 'file',\n      content: file.name,\n      fileData: e.target.result,\n      fileType: file.type,\n      sender: 'admin',\n      timestamp: Date.now()\n    };\n    \n    socket.emit('admin-chat-message', messageData);\n    displayChatMessage(messageData);\n  };\n  reader.readAsDataURL(file);\n  \n  // Clear input\n  event.target.value = '';\n}\n\nfunction displayChatMessage(messageData) {\n  const chatMessages = document.getElementById('chatMessages');\n  const messageElement = document.createElement('div');\n  messageElement.className = `chat-message ${messageData.sender}`;\n  \n  const time = new Date(messageData.timestamp).toLocaleTimeString('th-TH', {\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n  \n  let messageContent = '';\n  \n  if (messageData.type === 'file') {\n    const isImage = messageData.fileType.startsWith('image/');\n    messageContent = `\n      <div class=\"message-header\">${messageData.sender} • ${time}</div>\n      <div class=\"message-content\">\n        📎 ${messageData.content}\n        ${isImage ? `<div class=\"chat-file-preview\"><img src=\"${messageData.fileData}\" alt=\"Uploaded file\"></div>` : ''}\n      </div>\n    `;\n  } else {\n    messageContent = `\n      <div class=\"message-header\">${messageData.sender} • ${time}</div>\n      <div class=\"message-content\">${messageData.content}</div>\n    `;\n  }\n  \n  messageElement.innerHTML = messageContent;\n  chatMessages.appendChild(messageElement);\n  chatMessages.scrollTop = chatMessages.scrollHeight;\n}\n\nfunction updateChatUserCount() {\n  const chatUserCount = document.getElementById('chatUserCount');\n  if (chatUserCount) {\n    chatUserCount.textContent = chatUsers.size;\n  }\n}\n\n// Media Control System\nlet currentMedia = null;\nlet mediaType = 'video';\n\nfunction initializeMediaControl() {\n  const mediaUrl = document.getElementById('mediaUrl');\n  const mediaType = document.getElementById('mediaType');\n  const mediaVolume = document.getElementById('mediaVolume');\n  const volumeDisplay = document.getElementById('volumeDisplay');\n  const playMedia = document.getElementById('playMedia');\n  const pauseMedia = document.getElementById('pauseMedia');\n  const stopMedia = document.getElementById('stopMedia');\n  const mediaStatus = document.getElementById('mediaStatus');\n  \n  // Volume control\n  mediaVolume.addEventListener('input', (e) => {\n    const volume = e.target.value;\n    volumeDisplay.textContent = `${volume}%`;\n    \n    if (currentMedia) {\n      socket.emit('media-volume', { volume: volume / 100 });\n    }\n  });\n  \n  // Play media\n  playMedia.addEventListener('click', () => {\n    const url = mediaUrl.value.trim();\n    const type = mediaType.value;\n    \n    if (!url) {\n      showToast('กรุณาใส่ URL ของวิดีโอ', 'warning');\n      return;\n    }\n    \n    const mediaData = {\n      url: url,\n      type: type,\n      volume: mediaVolume.value / 100\n    };\n    \n    socket.emit('media-play', mediaData);\n    updateMediaStatus(`Playing ${type}: ${url}`);\n  });\n  \n  // Pause media\n  pauseMedia.addEventListener('click', () => {\n    socket.emit('media-pause');\n    updateMediaStatus('Media paused');\n  });\n  \n  // Stop media\n  stopMedia.addEventListener('click', () => {\n    socket.emit('media-stop');\n    updateMediaStatus('Media stopped');\n    currentMedia = null;\n  });\n}\n\nfunction updateMediaStatus(status) {\n  const mediaStatus = document.getElementById('mediaStatus');\n  mediaStatus.innerHTML = `<p>${status}</p>`;\n}\n\n// Advanced Analytics Functions\nlet analyticsData = {};\nlet activeUsers = [];\nlet chartInstances = {};\n\nfunction setupTabs() {\n  const tabBtns = document.querySelectorAll('.tab-btn');\n  const tabPanels = document.querySelectorAll('.tab-panel');\n\n  tabBtns.forEach(btn => {\n    btn.addEventListener('click', () => {\n      const targetTab = btn.dataset.tab;\n\n      // Remove active class from all tabs and panels\n      tabBtns.forEach(b => b.classList.remove('active'));\n      tabPanels.forEach(p => p.classList.remove('active'));\n\n      // Add active class to clicked tab and corresponding panel\n      btn.classList.add('active');\n      const targetPanel = document.getElementById(`${targetTab}-tab`);\n      if (targetPanel) {\n        targetPanel.classList.add('active');\n      }\n    });\n  });\n}\n\nfunction initializeCharts() {\n  const hourlyCtx = document.getElementById('hourlyChart');\n  const typeCtx = document.getElementById('typeChart');\n\n  if (hourlyCtx && typeof Chart !== 'undefined') {\n    chartInstances.hourlyChart = new Chart(hourlyCtx, {\n      type: 'line',\n      data: {\n        labels: Array.from({length: 24}, (_, i) => `${i}:00`),\n        datasets: [{\n          label: 'การใช้งาน',\n          data: new Array(24).fill(0),\n          borderColor: '#667eea',\n          backgroundColor: 'rgba(102, 126, 234, 0.1)',\n          tension: 0.4\n        }]\n      },\n      options: {\n        responsive: true,\n        scales: {\n          y: { beginAtZero: true }\n        },\n        plugins: {\n          legend: { display: false }\n        }\n      }\n    });\n  }\n\n  if (typeCtx && typeof Chart !== 'undefined') {\n    chartInstances.typeChart = new Chart(typeCtx, {\n      type: 'doughnut',\n      data: {\n        labels: ['YouTube', 'TikTok', 'Upload'],\n        datasets: [{\n          data: [0, 0, 0],\n          backgroundColor: ['#FF6B6B', '#4ECDC4', '#45B7D1']\n        }]\n      },\n      options: {\n        responsive: true,\n        plugins: {\n          legend: { position: 'bottom' }\n        }\n      }\n    });\n  }\n}\n\nfunction loadAnalyticsData() {\n  fetch('/api/analytics')\n    .then(response => response.json())\n    .then(data => {\n      analyticsData = data;\n      updateAnalyticsDisplay();\n    })\n    .catch(error => console.error('Failed to load analytics:', error));\n}\n\nfunction updateAnalyticsDisplay() {\n  // Update metric boxes\n  const elements = {\n    'totalUsersToday': analyticsData.totalUsersToday || 0,\n    'totalDownloads': analyticsData.totalDownloads || 0,\n    'avgProcessTime': (analyticsData.avgProcessTime || 0) + 's',\n    'systemLoad': Math.round(analyticsData.systemLoad || 0) + '%'\n  };\n\n  Object.entries(elements).forEach(([id, value]) => {\n    const element = document.getElementById(id);\n    if (element) element.textContent = value;\n  });\n\n  // Update trends (simulate for now)\n  const trends = {\n    'userTrend': '+12%',\n    'downloadTrend': '+8%',\n    'timeTrend': '-5%',\n    'loadTrend': '+3%'\n  };\n\n  Object.entries(trends).forEach(([id, value]) => {\n    const element = document.getElementById(id);\n    if (element) element.textContent = value;\n  });\n\n  // Update charts\n  if (chartInstances.hourlyChart) {\n    chartInstances.hourlyChart.data.datasets[0].data = analyticsData.hourlyUsage || new Array(24).fill(0);\n    chartInstances.hourlyChart.update('none');\n  }\n\n  if (chartInstances.typeChart) {\n    const types = analyticsData.textureTypes || { youtube: 0, tiktok: 0, upload: 0 };\n    chartInstances.typeChart.data.datasets[0].data = [types.youtube, types.tiktok, types.upload];\n    chartInstances.typeChart.update('none');\n  }\n}\n\nfunction updateActiveUsers() {\n  fetch('/api/active-users')\n    .then(response => response.json())\n    .then(users => {\n      activeUsers = users;\n      displayActiveUsers();\n    })\n    .catch(error => console.error('Failed to load active users:', error));\n}\n\nfunction displayActiveUsers() {\n  const usersList = document.getElementById('activeUsersList');\n  const userCount = document.getElementById('liveUserCount');\n\n  if (userCount) {\n    userCount.textContent = activeUsers.length;\n  }\n\n  if (usersList) {\n    if (activeUsers.length === 0) {\n      usersList.innerHTML = '<div style=\"text-align: center; color: #aaa; padding: 20px;\">ไม่มีผู้ใช้ออนไลน์</div>';\n    } else {\n      usersList.innerHTML = activeUsers.map(user => `\n        <div class=\"user-item\">\n          <div class=\"user-avatar\">${user.id.substring(5, 7).toUpperCase()}</div>\n          <div class=\"user-info\">\n            <div class=\"name\">${user.id}</div>\n            <div class=\"activity\">${user.lastActivity}</div>\n          </div>\n        </div>\n      `).join('');\n    }\n  }\n}\n\nfunction updateActivityTimeline() {\n  fetch('/api/recent-activity')\n    .then(response => response.json())\n    .then(activities => {\n      const timeline = document.querySelector('.timeline-items');\n      if (timeline) {\n        if (activities.length === 0) {\n          timeline.innerHTML = '<div style=\"text-align: center; color: #aaa; padding: 10px;\">ไม่มีกิจกรรม</div>';\n        } else {\n          timeline.innerHTML = activities.slice(0, 10).map(activity => `\n            <div class=\"timeline-item\">\n              <div class=\"timeline-dot\"></div>\n              <span>${new Date(activity.timestamp).toLocaleTimeString('th-TH')} - ${activity.description}</span>\n            </div>\n          `).join('');\n        }\n      }\n    })\n    .catch(error => console.error('Failed to load activity:', error));\n}\n\nfunction updatePerformanceMetrics() {\n  fetch('/api/performance')\n    .then(response => response.json())\n    .then(performance => {\n      // Update progress bars\n      const progressElements = [\n        { id: 'cpuProgress', value: performance.cpu || 0 },\n        { id: 'memoryProgress', value: performance.memory || 0 },\n        { id: 'diskProgress', value: performance.disk || 0 }\n      ];\n\n      progressElements.forEach(({ id, value }) => {\n        const progressEl = document.getElementById(id);\n        const percentageEl = document.getElementById(id.replace('Progress', 'Percentage'));\n        if (progressEl) progressEl.style.width = `${value}%`;\n        if (percentageEl) percentageEl.textContent = `${Math.round(value)}%`;\n      });\n\n      // Update network stats\n      const networkUp = document.getElementById('networkUp');\n      const networkDown = document.getElementById('networkDown');\n      if (networkUp) networkUp.textContent = `${Math.round(performance.networkUp || 0)} KB/s`;\n      if (networkDown) networkDown.textContent = `${Math.round(performance.networkDown || 0)} KB/s`;\n\n      // Update process list\n      const processList = document.getElementById('processList');\n      if (processList) {\n        processList.innerHTML = `\n          <div class=\"process-item\">\n            <span class=\"process-name\">Node.js Server</span>\n            <span class=\"process-usage\">${Math.round((performance.cpu || 0) * 0.8)}%</span>\n          </div>\n          <div class=\"process-item\">\n            <span class=\"process-name\">FFmpeg</span>\n            <span class=\"process-usage\">${Math.round((performance.cpu || 0) * 0.2)}%</span>\n          </div>\n        `;\n      }\n    })\n    .catch(error => console.error('Failed to load performance:', error));\n}\n\nfunction loadAdvancedSettings() {\n  fetch('/api/advanced-settings')\n    .then(response => response.json())\n    .then(settings => {\n      // Load settings into form\n      Object.keys(settings).forEach(key => {\n        const element = document.getElementById(key);\n        if (element) {\n          if (element.type === 'checkbox') {\n            element.checked = settings[key];\n          } else {\n            element.value = settings[key];\n          }\n        }\n      });\n    })\n    .catch(error => console.error('Failed to load advanced settings:', error));\n}\n\nfunction saveAdvancedSettings() {\n  const settings = {};\n\n  // Collect all settings from all tabs\n  const selectors = [\n    '#general-tab input',\n    '#general-tab select',\n    '#limits-tab input',\n    '#security-tab input'\n  ];\n\n  selectors.forEach(selector => {\n    document.querySelectorAll(selector).forEach(input => {\n      if (input.type === 'checkbox') {\n        settings[input.id] = input.checked;\n      } else {\n        settings[input.id] = input.type === 'number' ? parseInt(input.value) : input.value;\n      }\n    });\n  });\n\n  fetch('/api/advanced-settings', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(settings)\n  })\n  .then(response => response.json())\n  .then(result => {\n    if (result.success) {\n      showToast('การตั้งค่าถูกบันทึกแล้ว', 'success');\n    } else {\n      showToast('เกิดข้อผิดพลาดในการบันทึก', 'error');\n    }\n  })\n  .catch(error => {\n    console.error('Failed to save settings:', error);\n    showToast('เกิดข้อผิดพลาดในการบันทึก', 'error');\n  });\n}\n\nfunction setupAdvancedEventListeners() {\n  // Performance refresh button\n  const refreshPerformanceBtn = document.getElementById('refreshPerformance');\n  if (refreshPerformanceBtn) {\n    refreshPerformanceBtn.addEventListener('click', updatePerformanceMetrics);\n  }\n\n  // Advanced settings save button\n  const saveAdvancedSettingsBtn = document.getElementById('saveAdvancedSettings');\n  if (saveAdvancedSettingsBtn) {\n    saveAdvancedSettingsBtn.addEventListener('click', saveAdvancedSettings);\n  }\n}\n\nfunction startRealTimeUpdates() {\n  // Update analytics every 10 seconds\n  setInterval(loadAnalyticsData, 10000);\n\n  // Update active users every 5 seconds\n  setInterval(updateActiveUsers, 5000);\n\n  // Update activity timeline every 15 seconds\n  setInterval(updateActivityTimeline, 15000);\n\n  // Update performance every 5 seconds\n  setInterval(updatePerformanceMetrics, 5000);\n}\n\n// Socket.IO event listeners for real-time updates\nfunction setupRealTimeListeners() {\n  socket.on('analytics-update', (data) => {\n    analyticsData = { ...analyticsData, ...data };\n    updateAnalyticsDisplay();\n  });\n\n  socket.on('active-users-update', (users) => {\n    activeUsers = users;\n    displayActiveUsers();\n  });\n\n  socket.on('activity-timeline-update', (activities) => {\n    const timeline = document.querySelector('.timeline-items');\n    if (timeline) {\n      timeline.innerHTML = activities.slice(0, 10).map(activity => `\n        <div class=\"timeline-item\">\n          <div class=\"timeline-dot\"></div>\n          <span>${new Date(activity.timestamp).toLocaleTimeString('th-TH')} - ${activity.description}</span>\n        </div>\n      `).join('');\n    }\n  });\n\n  socket.on('activity-update', (activity) => {\n    // Add new activity to timeline\n    const timeline = document.querySelector('.timeline-items');\n    if (timeline && timeline.children.length > 0) {\n      const newItem = document.createElement('div');\n      newItem.className = 'timeline-item';\n      newItem.innerHTML = `\n        <div class=\"timeline-dot\"></div>\n        <span>${new Date(activity.timestamp).toLocaleTimeString('th-TH')} - ${activity.description}</span>\n      `;\n      timeline.insertBefore(newItem, timeline.firstChild);\n\n      // Keep only last 10 items\n      while (timeline.children.length > 10) {\n        timeline.removeChild(timeline.lastChild);\n      }\n    }\n  });\n\n  socket.on('performance-update', (performance) => {\n    // Update performance display in real-time\n    const updates = [\n      { progress: 'cpuProgress', percentage: 'cpuPercentage', value: performance.cpu },\n      { progress: 'memoryProgress', percentage: 'memoryPercentage', value: performance.memory },\n      { progress: 'diskProgress', percentage: 'diskPercentage', value: performance.disk }\n    ];\n\n    updates.forEach(({ progress, percentage, value }) => {\n      const progressEl = document.getElementById(progress);\n      const percentageEl = document.getElementById(percentage);\n      if (progressEl) progressEl.style.width = `${value || 0}%`;\n      if (percentageEl) percentageEl.textContent = `${Math.round(value || 0)}%`;\n    });\n\n    const networkUp = document.getElementById('networkUp');\n    const networkDown = document.getElementById('networkDown');\n    if (networkUp) networkUp.textContent = `${Math.round(performance.networkUp || 0)} KB/s`;\n    if (networkDown) networkDown.textContent = `${Math.round(performance.networkDown || 0)} KB/s`;\n  });\n}\n\n// Initialize advanced features when user logs in successfully\nfunction initializeAdvancedFeatures() {\n  // Initialize tab functionality\n  setupTabs();\n\n  // Initialize charts if Chart.js is available\n  if (typeof Chart !== 'undefined') {\n    initializeCharts();\n  } else {\n    // Load Chart.js dynamically\n    const script = document.createElement('script');\n    script.src = 'https://cdn.jsdelivr.net/npm/chart.js';\n    script.onload = () => initializeCharts();\n    document.head.appendChild(script);\n  }\n\n  // Load analytics data\n  loadAnalyticsData();\n\n  // Start real-time updates\n  startRealTimeUpdates();\n\n  // Setup advanced event listeners\n  setupAdvancedEventListeners();\n\n  // Setup real-time Socket.IO listeners\n  setupRealTimeListeners();\n}","size_bytes":73343},"public/particles.js":{"content":"// Particle system for enhanced visual effects\nclass ParticleSystem {\n  constructor() {\n    this.canvas = null;\n    this.ctx = null;\n    this.particles = [];\n    this.animationId = null;\n    this.isInitialized = false;\n  }\n\n  init() {\n    if (this.isInitialized) return;\n\n    this.createCanvas();\n    this.setupEventListeners();\n    this.generateParticles();\n    this.animate();\n    this.isInitialized = true;\n  }\n\n  createCanvas() {\n    this.canvas = document.createElement('canvas');\n    this.canvas.style.cssText = `\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      pointer-events: none;\n      z-index: -3;\n      opacity: 0.6;\n    `;\n    \n    this.ctx = this.canvas.getContext('2d');\n    \n    // Insert canvas into particles container\n    const container = document.getElementById('particles-container');\n    if (container) {\n      container.appendChild(this.canvas);\n    } else {\n      document.body.appendChild(this.canvas);\n    }\n\n    this.resize();\n  }\n\n  setupEventListeners() {\n    window.addEventListener('resize', () => this.resize());\n    \n    // Mouse interaction\n    let mouse = { x: null, y: null, radius: 150 };\n    \n    document.addEventListener('mousemove', (e) => {\n      mouse.x = e.x;\n      mouse.y = e.y;\n      this.updateMouseInteraction(mouse);\n    });\n\n    document.addEventListener('mouseleave', () => {\n      mouse.x = null;\n      mouse.y = null;\n    });\n  }\n\n  resize() {\n    this.canvas.width = window.innerWidth;\n    this.canvas.height = window.innerHeight;\n  }\n\n  generateParticles() {\n    this.particles = [];\n    const numberOfParticles = Math.floor((this.canvas.width * this.canvas.height) / 15000);\n    \n    for (let i = 0; i < numberOfParticles; i++) {\n      this.particles.push(new Particle(this.canvas.width, this.canvas.height));\n    }\n  }\n\n  updateMouseInteraction(mouse) {\n    this.particles.forEach(particle => {\n      if (mouse.x !== null && mouse.y !== null) {\n        const dx = mouse.x - particle.x;\n        const dy = mouse.y - particle.y;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n        \n        if (distance < mouse.radius) {\n          const force = (mouse.radius - distance) / mouse.radius;\n          particle.vx += (dx / distance) * force * 0.5;\n          particle.vy += (dy / distance) * force * 0.5;\n        }\n      }\n    });\n  }\n\n  animate() {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    \n    // Update and draw particles\n    this.particles.forEach(particle => {\n      particle.update(this.canvas.width, this.canvas.height);\n      particle.draw(this.ctx);\n    });\n\n    // Draw connections\n    this.drawConnections();\n\n    this.animationId = requestAnimationFrame(() => this.animate());\n  }\n\n  drawConnections() {\n    for (let i = 0; i < this.particles.length; i++) {\n      for (let j = i + 1; j < this.particles.length; j++) {\n        const particle1 = this.particles[i];\n        const particle2 = this.particles[j];\n        \n        const dx = particle1.x - particle2.x;\n        const dy = particle1.y - particle2.y;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n        \n        if (distance < 100) {\n          const opacity = (100 - distance) / 100 * 0.3;\n          this.ctx.strokeStyle = `rgba(102, 126, 234, ${opacity})`;\n          this.ctx.lineWidth = 1;\n          this.ctx.beginPath();\n          this.ctx.moveTo(particle1.x, particle1.y);\n          this.ctx.lineTo(particle2.x, particle2.y);\n          this.ctx.stroke();\n        }\n      }\n    }\n  }\n\n  destroy() {\n    if (this.animationId) {\n      cancelAnimationFrame(this.animationId);\n    }\n    if (this.canvas && this.canvas.parentNode) {\n      this.canvas.parentNode.removeChild(this.canvas);\n    }\n    this.isInitialized = false;\n  }\n}\n\nclass Particle {\n  constructor(canvasWidth, canvasHeight) {\n    this.x = Math.random() * canvasWidth;\n    this.y = Math.random() * canvasHeight;\n    this.vx = (Math.random() - 0.5) * 0.5;\n    this.vy = (Math.random() - 0.5) * 0.5;\n    this.radius = Math.random() * 2 + 1;\n    this.opacity = Math.random() * 0.5 + 0.3;\n    this.hue = Math.random() * 60 + 200; // Blue-purple range\n    this.pulse = Math.random() * Math.PI * 2;\n  }\n\n  update(canvasWidth, canvasHeight) {\n    // Update position\n    this.x += this.vx;\n    this.y += this.vy;\n\n    // Boundary collision\n    if (this.x < 0 || this.x > canvasWidth) {\n      this.vx *= -0.8;\n      this.x = Math.max(0, Math.min(canvasWidth, this.x));\n    }\n    if (this.y < 0 || this.y > canvasHeight) {\n      this.vy *= -0.8;\n      this.y = Math.max(0, Math.min(canvasHeight, this.y));\n    }\n\n    // Apply friction\n    this.vx *= 0.99;\n    this.vy *= 0.99;\n\n    // Update pulse for glow effect\n    this.pulse += 0.02;\n  }\n\n  draw(ctx) {\n    const glowIntensity = Math.sin(this.pulse) * 0.3 + 0.7;\n    \n    ctx.save();\n    ctx.globalAlpha = this.opacity * glowIntensity;\n    \n    // Create gradient for glow effect\n    const gradient = ctx.createRadialGradient(\n      this.x, this.y, 0,\n      this.x, this.y, this.radius * 3\n    );\n    gradient.addColorStop(0, `hsla(${this.hue}, 70%, 60%, 0.8)`);\n    gradient.addColorStop(0.5, `hsla(${this.hue}, 70%, 50%, 0.4)`);\n    gradient.addColorStop(1, `hsla(${this.hue}, 70%, 40%, 0)`);\n    \n    ctx.fillStyle = gradient;\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.radius * 3, 0, Math.PI * 2);\n    ctx.fill();\n    \n    // Core particle\n    ctx.globalAlpha = this.opacity;\n    ctx.fillStyle = `hsl(${this.hue}, 70%, 70%)`;\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);\n    ctx.fill();\n    \n    ctx.restore();\n  }\n}\n\n// Floating animation particles for specific elements\nclass FloatingParticles {\n  constructor(element) {\n    this.element = element;\n    this.particles = [];\n    this.isActive = false;\n  }\n\n  start() {\n    if (this.isActive) return;\n    this.isActive = true;\n    this.createParticles();\n    this.animate();\n  }\n\n  stop() {\n    this.isActive = false;\n    this.particles = [];\n  }\n\n  createParticles() {\n    const rect = this.element.getBoundingClientRect();\n    const particleCount = 6;\n    \n    for (let i = 0; i < particleCount; i++) {\n      this.particles.push({\n        x: rect.left + Math.random() * rect.width,\n        y: rect.top + Math.random() * rect.height,\n        vx: (Math.random() - 0.5) * 2,\n        vy: (Math.random() - 0.5) * 2,\n        life: 1,\n        decay: Math.random() * 0.02 + 0.01,\n        size: Math.random() * 4 + 2,\n        hue: Math.random() * 60 + 200\n      });\n    }\n  }\n\n  animate() {\n    if (!this.isActive) return;\n\n    this.particles = this.particles.filter(particle => {\n      particle.x += particle.vx;\n      particle.y += particle.vy;\n      particle.life -= particle.decay;\n      particle.vy -= 0.05; // Gravity effect\n      \n      return particle.life > 0;\n    });\n\n    // Create new particles\n    if (Math.random() < 0.1) {\n      this.createParticles();\n    }\n\n    requestAnimationFrame(() => this.animate());\n  }\n}\n\n// Initialize particle system\nfunction initializeParticles() {\n  const particleSystem = new ParticleSystem();\n  particleSystem.init();\n\n  // Add hover effects to interactive elements\n  document.querySelectorAll('.submit-btn, .youtube-btn, .btn').forEach(element => {\n    const floatingParticles = new FloatingParticles(element);\n    \n    element.addEventListener('mouseenter', () => {\n      floatingParticles.start();\n    });\n    \n    element.addEventListener('mouseleave', () => {\n      floatingParticles.stop();\n    });\n  });\n\n  // Performance optimization: pause particles when tab is not visible\n  document.addEventListener('visibilitychange', () => {\n    if (document.hidden) {\n      particleSystem.destroy();\n    } else {\n      setTimeout(() => {\n        particleSystem.init();\n      }, 1000);\n    }\n  });\n\n  return particleSystem;\n}\n\n// Enhanced loading particles\nclass LoadingParticles {\n  constructor(element) {\n    this.element = element;\n    this.canvas = null;\n    this.ctx = null;\n    this.particles = [];\n    this.animationId = null;\n  }\n\n  init() {\n    this.canvas = document.createElement('canvas');\n    this.canvas.style.cssText = `\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      pointer-events: none;\n      z-index: 1;\n    `;\n    \n    this.ctx = this.canvas.getContext('2d');\n    this.element.style.position = 'relative';\n    this.element.appendChild(this.canvas);\n    \n    this.resize();\n    this.generateParticles();\n    this.animate();\n  }\n\n  resize() {\n    const rect = this.element.getBoundingClientRect();\n    this.canvas.width = rect.width;\n    this.canvas.height = rect.height;\n  }\n\n  generateParticles() {\n    const centerX = this.canvas.width / 2;\n    const centerY = this.canvas.height / 2;\n    const particleCount = 8;\n    \n    for (let i = 0; i < particleCount; i++) {\n      const angle = (i / particleCount) * Math.PI * 2;\n      this.particles.push({\n        angle: angle,\n        radius: 20,\n        x: centerX + Math.cos(angle) * 20,\n        y: centerY + Math.sin(angle) * 20,\n        size: 3,\n        opacity: 1 - (i / particleCount) * 0.8\n      });\n    }\n  }\n\n  animate() {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    \n    const centerX = this.canvas.width / 2;\n    const centerY = this.canvas.height / 2;\n    \n    this.particles.forEach((particle, index) => {\n      particle.angle += 0.1;\n      particle.x = centerX + Math.cos(particle.angle) * particle.radius;\n      particle.y = centerY + Math.sin(particle.angle) * particle.radius;\n      \n      this.ctx.save();\n      this.ctx.globalAlpha = particle.opacity;\n      this.ctx.fillStyle = '#667eea';\n      this.ctx.beginPath();\n      this.ctx.arc(particle.x, particle.y, particle.size, 0, Math.PI * 2);\n      this.ctx.fill();\n      this.ctx.restore();\n    });\n\n    this.animationId = requestAnimationFrame(() => this.animate());\n  }\n\n  destroy() {\n    if (this.animationId) {\n      cancelAnimationFrame(this.animationId);\n    }\n    if (this.canvas && this.canvas.parentNode) {\n      this.canvas.parentNode.removeChild(this.canvas);\n    }\n  }\n}\n\n// Export for use in other modules\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = { ParticleSystem, FloatingParticles, LoadingParticles };\n}\n\n// Auto-initialize if in browser\nif (typeof window !== 'undefined') {\n  window.particleSystem = null;\n  window.initializeParticles = initializeParticles;\n}\n","size_bytes":10394},"public/script.js":{"content":"// Socket connection - connect to port 5000\nconst socket = io('http://localhost:5000', {\n  transports: ['websocket', 'polling'],\n  timeout: 20000,\n  forceNew: true\n});\n\n// Global variables\nlet currentSessionId = null;\nlet currentConfig = {};\n\n// DOM elements\nconst uploadForm = document.getElementById('upload-form');\nconst submitBtn = document.getElementById('submitBtn');\nconst progressModal = document.getElementById('progressModal');\nconst successModal = document.getElementById('successModal');\nconst videoPreview = document.getElementById('videoPreview');\nconst previewGif = document.getElementById('preview-gif');\nconst announcementBanner = document.getElementById('announcement-banner');\nconst announcementText = document.getElementById('announcement-text');\nconst closeAnnouncement = document.getElementById('close-announcement');\nconst adminBtn = document.getElementById('admin-btn');\n\n// File inputs\nconst videoInput = document.getElementById('video');\nconst audioInput = document.getElementById('audio');\nconst iconInput = document.getElementById('icon');\n\n// YouTube elements\nconst youtubeUrl = document.getElementById('youtubeUrl');\nconst loadYoutube = document.getElementById('loadYoutube');\nconst youtubePreview = document.getElementById('youtubePreview');\nconst youtubeSection = document.getElementById('youtube-section');\nconst uploadSection = document.getElementById('upload-section');\n\n// TikTok elements\nconst tiktokUrl = document.getElementById('tiktokUrl');\nconst loadTiktok = document.getElementById('loadTiktok');\nconst tiktokPreview = document.getElementById('tiktokPreview');\nconst tiktokSection = document.getElementById('tiktok-section');\n\nconsole.log('TikTok elements check:', { \n  tiktokUrl: !!tiktokUrl, \n  loadTiktok: !!loadTiktok, \n  tiktokPreview: !!tiktokPreview,\n  tiktokSection: !!tiktokSection\n});\n\n// Initialize\ndocument.addEventListener('DOMContentLoaded', function() {\n  initializeApp();\n  setupEventListeners();\n  initializeParticles();\n  initializeChatWidget();\n  initializeMediaPlayer();\n});\n\nfunction initializeApp() {\n  // Load initial configuration immediately\n  fetch('/api/config')\n    .then(response => response.json())\n    .then(config => {\n      currentConfig = config;\n      updateUIFromConfig(config);\n    })\n    .catch(error => console.error('Failed to load config:', error));\n\n  // Load initial configuration via socket\n  socket.on('config-update', (config) => {\n    currentConfig = config;\n    updateUIFromConfig(config);\n  });\n\n  // Handle errors\n  socket.on('error', (error) => {\n    hideProgress();\n    showToast(error.message || 'เกิดข้อผิดพลาด', 'error');\n  });\n\n  // Handle progress updates\n  socket.on('progress-update', (data) => {\n    console.log('Progress update:', data);\n    updateProgress(data.step, data.progress, data.message, data.timeLeft);\n  });\n\n  // Handle download ready\n  socket.on('download-ready', (data) => {\n    console.log('Download ready:', data);\n    hideProgress();\n    showSuccessModal(data.downloadUrl, data.textureName);\n  });\n\n  // Handle admin login alerts\n  socket.on('admin-login-alert', (data) => {\n    showAdminLoginAlert(data);\n  });\n\n  // Handle various events\n  socket.on('global-alert', (data) => {\n    showGlobalAlert(data);\n  });\n\n  socket.on('maintenance-alert', (data) => {\n    showMaintenanceAlert(data);\n  });\n\n  socket.on('normal-mode-alert', (data) => {\n    showToast(data.message, 'success');\n  });\n\n  socket.on('party-mode', (data) => {\n    activatePartyMode(data);\n  });\n\n  socket.on('hacker-mode', (data) => {\n    activateHackerMode(data);\n  });\n\n  socket.on('rainbow-mode', (data) => {\n    activateRainbowMode(data);\n  });\n\n  socket.on('epic-announcement', (data) => {\n    showEpicAnnouncement(data);\n  });\n\n  socket.on('speed-boost', (data) => {\n    showSpeedBoost(data);\n  });\n\n  socket.on('server-stats-display', (data) => {\n    showServerStats(data);\n  });\n\n  socket.on('new-event', (event) => {\n    showNewEventNotification(event);\n  });\n\n  // Connection events\n  socket.on('connect', () => {\n    console.log('Socket connected');\n  });\n\n  socket.on('disconnect', () => {\n    console.log('Socket disconnected');\n  });\n}\n\nfunction setupEventListeners() {\n  // Form submission\n  uploadForm.addEventListener('submit', handleFormSubmit);\n\n  // File input changes\n  videoInput.addEventListener('change', () => handleFileChange(videoInput, 'videoDisplay'));\n  audioInput.addEventListener('change', () => handleFileChange(audioInput, 'audioDisplay'));\n  iconInput.addEventListener('change', () => handleFileChange(iconInput, 'iconDisplay'));\n\n  // Video preview\n  videoInput.addEventListener('change', showVideoPreview);\n\n  // YouTube functionality\n  if (loadYoutube && youtubeUrl) {\n    loadYoutube.addEventListener('click', handleYouTubeLoad);\n    youtubeUrl.addEventListener('input', validateYouTubeUrl);\n  }\n  \n  // TikTok functionality\n  if (loadTiktok && tiktokUrl) {\n    loadTiktok.addEventListener('click', handleTikTokLoad);\n    tiktokUrl.addEventListener('input', validateTikTokUrl);\n    console.log('TikTok event listeners attached successfully');\n    \n    // Force enable the button initially\n    loadTiktok.disabled = false;\n    console.log('TikTok button enabled initially');\n  } else {\n    console.error('TikTok elements not found:', { loadTiktok, tiktokUrl });\n  }\n\n  // Modal controls\n  document.getElementById('closeSuccess').addEventListener('click', () => {\n    successModal.style.display = 'none';\n  });\n\n  // Announcement banner\n  closeAnnouncement.addEventListener('click', () => {\n    announcementBanner.style.display = 'none';\n  });\n\n  // Admin access\n  adminBtn.addEventListener('click', () => {\n    window.open('/admin.html', '_blank');\n  });\n\n  // Click outside modal to close\n  window.addEventListener('click', (e) => {\n    if (e.target === progressModal) {\n      // Don't allow closing progress modal\n    }\n    if (e.target === successModal) {\n      successModal.style.display = 'none';\n    }\n  });\n}\n\nfunction updateUIFromConfig(config) {\n  // Update CSS variables\n  document.documentElement.style.setProperty('--primary-color', config.primaryColor);\n  document.documentElement.style.setProperty('--secondary-color', config.secondaryColor);\n  document.documentElement.style.setProperty('--accent-color', config.accentColor);\n\n  // Update GIF\n  if (config.gifUrl && previewGif) {\n    previewGif.src = config.gifUrl;\n  }\n\n  // Show/hide sections based on config\n  if (youtubeSection) {\n    youtubeSection.style.display = config.youtubeEnabled ? 'block' : 'none';\n  }\n  if (tiktokSection) {\n    tiktokSection.style.display = config.youtubeEnabled ? 'block' : 'none'; // Use same setting for TikTok\n  }\n  if (uploadSection) {\n    uploadSection.style.display = config.uploadEnabled ? 'block' : 'none';\n  }\n\n  // Show announcement\n  if (config.announcement && config.announcement.trim()) {\n    announcementText.textContent = config.announcement;\n    announcementBanner.style.display = 'block';\n  } else {\n    announcementBanner.style.display = 'none';\n  }\n}\n\nasync function handleFormSubmit(e) {\n  e.preventDefault();\n\n  if (!validateForm()) {\n    return;\n  }\n\n  const formData = new FormData();\n  \n  // Add form fields\n  const fields = ['textureName', 'email', 'fps', 'quality', 'youtubeQuality', 'tiktokQuality'];\n  fields.forEach(field => {\n    const element = document.getElementById(field);\n    if (element && element.value) {\n      formData.append(field, element.value);\n    }\n  });\n\n  // Add YouTube data\n  const youtubeVideoId = extractYouTubeId(youtubeUrl.value);\n  if (youtubeVideoId) {\n    formData.append('youtubeVideoId', youtubeVideoId);\n  }\n\n  const useYoutubeAudio = document.getElementById('useYoutubeAudio').checked;\n  formData.append('useYoutubeAudio', useYoutubeAudio);\n\n  const youtubeAudioUrl = document.getElementById('youtubeAudioUrl').value;\n  const youtubeAudioId = extractYouTubeId(youtubeAudioUrl);\n  if (youtubeAudioId) {\n    formData.append('youtubeAudioId', youtubeAudioId);\n  }\n\n  // Add TikTok data\n  const tiktokUrlValue = tiktokUrl.value.trim();\n  if (tiktokUrlValue) {\n    formData.append('tiktokUrl', tiktokUrlValue);\n  }\n\n  const useTiktokAudio = document.getElementById('useTiktokAudio').checked;\n  formData.append('useTiktokAudio', useTiktokAudio);\n\n  const tiktokAudioUrlValue = document.getElementById('tiktokAudioUrl').value.trim();\n  if (tiktokAudioUrlValue) {\n    formData.append('tiktokAudioUrl', tiktokAudioUrlValue);\n  }\n\n  // Add files\n  if (videoInput.files[0]) {\n    formData.append('video', videoInput.files[0]);\n  }\n  if (audioInput.files[0]) {\n    formData.append('audio', audioInput.files[0]);\n  }\n  if (iconInput.files[0]) {\n    formData.append('icon', iconInput.files[0]);\n  }\n\n  try {\n    submitBtn.disabled = true;\n    submitBtn.classList.add('loading');\n\n    const response = await fetch('/upload', {\n      method: 'POST',\n      body: formData\n    });\n\n    const result = await response.json();\n\n    if (!response.ok) {\n      throw new Error(result.error || 'เกิดข้อผิดพลาดในการอัปโหลด');\n    }\n\n    currentSessionId = result.sessionId;\n    console.log('Got session ID:', currentSessionId, 'Socket connected:', socket.connected);\n    \n    if (socket.connected) {\n      socket.emit('join-progress', currentSessionId);\n      showProgress();\n    } else {\n      showToast('การเชื่อมต่อขาดหาย กำลังพยายามเชื่อมต่อใหม่...', 'warning');\n      socket.connect();\n      socket.once('connect', () => {\n        socket.emit('join-progress', currentSessionId);\n        showProgress();\n      });\n    }\n\n  } catch (error) {\n    showToast(error.message, 'error');\n    submitBtn.disabled = false;\n    submitBtn.classList.remove('loading');\n  }\n}\n\nfunction validateForm() {\n  const hasVideo = videoInput.files.length > 0;\n  const hasYouTube = youtubeUrl.value.trim() !== '';\n  const hasTikTok = tiktokUrl.value.trim() !== '';\n\n  console.log('Form validation:', { hasVideo, hasYouTube, hasTikTok });\n\n  if (!hasVideo && !hasYouTube && !hasTikTok) {\n    showToast('กรุณาอัปโหลดไฟล์วิดีโอหรือใส่ URL YouTube/TikTok', 'warning');\n    return false;\n  }\n\n  if (!currentConfig.uploadEnabled && hasVideo) {\n    showToast('ระบบอัปโหลดไฟล์ถูกปิดใช้งานชั่วคราว', 'error');\n    return false;\n  }\n\n  if (!currentConfig.youtubeEnabled && (hasYouTube || hasTikTok)) {\n    showToast('ระบบดาวน์โหลด YouTube/TikTok ถูกปิดใช้งานชั่วคราว', 'error');\n    return false;\n  }\n\n  const fps = document.getElementById('fps').value;\n  const quality = document.getElementById('quality').value;\n\n  if (fps < 10 || fps > 60) {\n    showToast('FPS ต้องอยู่ระหว่าง 10-60', 'warning');\n    return false;\n  }\n\n  if (quality < 30 || quality > 100) {\n    showToast('คุณภาพภาพต้องอยู่ระหว่าง 30-100%', 'warning');\n    return false;\n  }\n\n  return true;\n}\n\nfunction handleFileChange(input, displayId) {\n  const display = document.getElementById(displayId);\n  const file = input.files[0];\n\n  if (file) {\n    display.classList.add('has-file');\n    const uploadText = display.querySelector('.upload-text');\n    const uploadHint = display.querySelector('.upload-hint');\n    \n    uploadText.textContent = file.name;\n    uploadHint.textContent = `ขนาด: ${formatFileSize(file.size)}`;\n  } else {\n    display.classList.remove('has-file');\n    resetFileDisplay(displayId);\n  }\n}\n\nfunction resetFileDisplay(displayId) {\n  const display = document.getElementById(displayId);\n  const uploadText = display.querySelector('.upload-text');\n  const uploadHint = display.querySelector('.upload-hint');\n  \n  switch (displayId) {\n    case 'videoDisplay':\n      uploadText.textContent = 'อัปโหลดไฟล์วิดีโอ';\n      uploadHint.textContent = 'MP4, AVI, MOV หรือรูปแบบอื่นๆ';\n      break;\n    case 'audioDisplay':\n      uploadText.textContent = 'อัปโหลดไฟล์เสียง';\n      uploadHint.textContent = 'MP3, WAV, OGG หรือรูปแบบอื่นๆ';\n      break;\n    case 'iconDisplay':\n      uploadText.textContent = 'อัปโหลดไอคอน';\n      uploadHint.textContent = 'PNG, JPG (แนะนำ 128x128px)';\n      break;\n  }\n}\n\nfunction showVideoPreview() {\n  const file = videoInput.files[0];\n  if (!file) {\n    videoPreview.style.display = 'none';\n    return;\n  }\n\n  const video = document.getElementById('previewVideo');\n  const fileName = document.getElementById('fileName');\n  const duration = document.getElementById('duration');\n  const dimensions = document.getElementById('dimensions');\n\n  video.src = URL.createObjectURL(file);\n  fileName.textContent = file.name;\n\n  video.onloadedmetadata = () => {\n    duration.textContent = formatDuration(video.duration);\n    dimensions.textContent = `${video.videoWidth} × ${video.videoHeight}`;\n    videoPreview.style.display = 'block';\n  };\n}\n\nasync function handleYouTubeLoad() {\n  const url = youtubeUrl.value.trim();\n  const videoId = extractYouTubeId(url);\n\n  if (!videoId) {\n    showToast('กรุณาใส่ URL YouTube ที่ถูกต้อง', 'warning');\n    return;\n  }\n\n  if (!currentConfig.youtubeEnabled) {\n    showToast('ระบบดาวน์โหลด YouTube ถูกปิดใช้งานชั่วคราว', 'error');\n    return;\n  }\n\n  try {\n    loadYoutube.disabled = true;\n    loadYoutube.classList.add('loading');\n\n    // Load YouTube video info (mock for demo)\n    const thumbnail = `https://img.youtube.com/vi/${videoId}/maxresdefault.jpg`;\n    const title = 'YouTube Video'; // In real app, you'd fetch this from YouTube API\n    \n    document.getElementById('youtubeThumbnail').src = thumbnail;\n    document.getElementById('youtubeTitle').textContent = title;\n    document.getElementById('youtubeDuration').textContent = 'Loading...';\n    \n    youtubePreview.style.display = 'block';\n    showToast('โหลดวิดีโอ YouTube สำเร็จ', 'success');\n\n  } catch (error) {\n    showToast('ไม่สามารถโหลดวิดีโอ YouTube ได้', 'error');\n  } finally {\n    loadYoutube.disabled = false;\n    loadYoutube.classList.remove('loading');\n  }\n}\n\nfunction validateYouTubeUrl() {\n  const url = youtubeUrl.value.trim();\n  const videoId = extractYouTubeId(url);\n  \n  loadYoutube.disabled = !videoId || !currentConfig.youtubeEnabled;\n}\n\nfunction extractYouTubeId(url) {\n  if (!url) return null;\n  \n  const patterns = [\n    /(?:youtube\\.com\\/watch\\?v=|youtu\\.be\\/|youtube\\.com\\/embed\\/)([^&\\n?#]+)/,\n    /^([a-zA-Z0-9_-]{11})$/\n  ];\n  \n  for (const pattern of patterns) {\n    const match = url.match(pattern);\n    if (match) return match[1];\n  }\n  \n  return null;\n}\n\n// TikTok functions\nasync function handleTikTokLoad() {\n  console.log('TikTok load button clicked');\n  const url = tiktokUrl.value.trim();\n  \n  console.log('TikTok URL value:', url);\n\n  if (!url) {\n    showToast('กรุณาใส่ URL TikTok', 'warning');\n    return;\n  }\n\n  if (!url.includes('tiktok.com')) {\n    showToast('กรุณาใส่ URL TikTok ที่ถูกต้อง', 'warning');\n    return;\n  }\n\n  try {\n    loadTiktok.disabled = true;\n    loadTiktok.classList.add('loading');\n    loadTiktok.innerHTML = '<i class=\"fas fa-spinner fa-spin\"></i> กำลังโหลด...';\n    console.log('TikTok loading started');\n\n    // Fetch real video info from backend API\n    const response = await fetch('/api/tiktok-info', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ url: url })\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.error || 'ไม่สามารถดึงข้อมูลวิดีโอได้');\n    }\n\n    const videoInfo = await response.json();\n    console.log('TikTok video info:', videoInfo);\n    \n    // Update preview with real video info\n    const thumbnailImg = document.getElementById('tiktokThumbnail');\n    if (videoInfo.thumbnail) {\n      thumbnailImg.src = videoInfo.thumbnail;\n      thumbnailImg.style.display = 'block';\n      thumbnailImg.onerror = () => {\n        console.log('Thumbnail failed to load, hiding image');\n        thumbnailImg.style.display = 'none';\n      };\n    } else {\n      thumbnailImg.style.display = 'none';\n    }\n    \n    document.getElementById('tiktokTitle').textContent = videoInfo.title || 'TikTok Video';\n    document.getElementById('tiktokDuration').textContent = videoInfo.duration || 'ไม่ทราบ';\n    \n    tiktokPreview.style.display = 'block';\n    showToast('โหลดวิดีโอ TikTok สำเร็จ - พร้อมใช้งาน', 'success');\n    console.log('TikTok preview shown successfully');\n\n  } catch (error) {\n    console.error('TikTok load error:', error);\n    showToast(error.message || 'ไม่สามารถโหลดวิดีโอ TikTok ได้', 'error');\n  } finally {\n    loadTiktok.disabled = false;\n    loadTiktok.classList.remove('loading');\n    loadTiktok.innerHTML = '<i class=\"fas fa-download\"></i> โหลด';\n    console.log('TikTok loading finished');\n  }\n}\n\nfunction validateTikTokUrl() {\n  const url = tiktokUrl.value.trim();\n  const videoId = extractTikTokId(url);\n  \n  if (loadTiktok) {\n    loadTiktok.disabled = !videoId || !currentConfig.youtubeEnabled;\n    console.log('TikTok validation:', { url, videoId, disabled: loadTiktok.disabled });\n  }\n}\n\nfunction extractTikTokId(url) {\n  if (!url) return null;\n  \n  const patterns = [\n    /(?:https?:\\/\\/)?(?:www\\.)?tiktok\\.com\\/@[\\w.-]+\\/video\\/(\\d+)/,\n    /(?:https?:\\/\\/)?(?:www\\.)?tiktok\\.com\\/t\\/([A-Za-z0-9]+)/,\n    /(?:https?:\\/\\/)?vm\\.tiktok\\.com\\/([A-Za-z0-9]+)/,\n    /(?:https?:\\/\\/)?vt\\.tiktok\\.com\\/([A-Za-z0-9]+)/,\n    /(?:https?:\\/\\/)?(?:www\\.)?tiktok\\.com\\/v\\/(\\d+)/\n  ];\n  \n  for (const pattern of patterns) {\n    const match = url.match(pattern);\n    if (match) {\n      console.log('TikTok URL matched:', { url, pattern: pattern.toString(), id: match[1] });\n      return match[1];\n    }\n  }\n  \n  console.log('TikTok URL not matched:', url);\n  return null;\n}\n\nfunction showProgress() {\n  console.log('Showing progress modal');\n  progressModal.style.display = 'block';\n  document.body.style.overflow = 'hidden';\n  resetProgress();\n}\n\nfunction hideProgress() {\n  console.log('Hiding progress modal');\n  progressModal.style.display = 'none';\n  document.body.style.overflow = '';\n  submitBtn.disabled = false;\n  submitBtn.classList.remove('loading');\n}\n\nfunction resetProgress() {\n  document.getElementById('progressFill').style.width = '0%';\n  document.getElementById('progressPercent').textContent = '0%';\n  document.getElementById('progressMessage').textContent = 'เริ่มต้นการประมวลผล...';\n  document.getElementById('currentStep').textContent = 'ขั้นตอนที่ 1';\n  document.getElementById('timeLeft').textContent = '';\n\n  // Reset all steps\n  document.querySelectorAll('.step').forEach(step => {\n    step.classList.remove('active', 'completed');\n  });\n}\n\nfunction updateProgress(step, progress, message, timeLeft) {\n  // Update progress bar\n  document.getElementById('progressFill').style.width = `${progress}%`;\n  document.getElementById('progressPercent').textContent = `${progress}%`;\n  document.getElementById('progressMessage').textContent = message;\n  document.getElementById('currentStep').textContent = `ขั้นตอนที่ ${step}`;\n  \n  if (timeLeft) {\n    document.getElementById('timeLeft').textContent = `เหลือเวลา: ${timeLeft} วินาที`;\n  }\n\n  // Update step indicators\n  document.querySelectorAll('.step').forEach((stepEl, index) => {\n    const stepNumber = index + 1;\n    stepEl.classList.remove('active', 'completed');\n    \n    if (stepNumber < step) {\n      stepEl.classList.add('completed');\n    } else if (stepNumber === step) {\n      stepEl.classList.add('active');\n    }\n  });\n}\n\nfunction showSuccessModal(downloadUrl, textureName) {\n  console.log('Showing success modal with download URL:', downloadUrl);\n  hideProgress();\n  \n  document.getElementById('downloadTextureName').textContent = textureName || 'Texture Pack';\n  document.getElementById('downloadBtn').href = downloadUrl;\n  \n  successModal.style.display = 'block';\n  \n  // Auto download after 3 seconds\n  setTimeout(() => {\n    console.log('Auto-clicking download button');\n    document.getElementById('downloadBtn').click();\n  }, 3000);\n}\n\nfunction showToast(message, type = 'info') {\n  const toast = document.createElement('div');\n  toast.className = `toast ${type}`;\n  \n  const icon = getToastIcon(type);\n  toast.innerHTML = `\n    <i class=\"${icon}\"></i>\n    <span>${message}</span>\n  `;\n  \n  const container = document.getElementById('toast-container');\n  container.appendChild(toast);\n  \n  // Auto remove after 5 seconds\n  setTimeout(() => {\n    toast.style.animation = 'toastSlideOut 0.3s ease forwards';\n    setTimeout(() => {\n      if (toast.parentNode) {\n        toast.parentNode.removeChild(toast);\n      }\n    }, 300);\n  }, 5000);\n}\n\nfunction getToastIcon(type) {\n  switch (type) {\n    case 'success': return 'fas fa-check-circle';\n    case 'error': return 'fas fa-exclamation-circle';\n    case 'warning': return 'fas fa-exclamation-triangle';\n    default: return 'fas fa-info-circle';\n  }\n}\n\nfunction formatFileSize(bytes) {\n  if (bytes === 0) return '0 Bytes';\n  \n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  \n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}\n\nfunction formatDuration(seconds) {\n  const minutes = Math.floor(seconds / 60);\n  const remainingSeconds = Math.floor(seconds % 60);\n  return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n}\n\n// Admin login alert function\nfunction showAdminLoginAlert(data) {\n  // Create full-screen alert overlay\n  const alertOverlay = document.createElement('div');\n  alertOverlay.id = 'admin-alert-overlay';\n  alertOverlay.style.cssText = `\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(255, 0, 0, 0.8);\n    z-index: 99999;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    animation: alertFlash 0.5s ease-in-out 3, screenShake 2s ease-in-out;\n  `;\n\n  // Add notifications\n  data.notifications.forEach((notification, index) => {\n    setTimeout(() => {\n      const notificationDiv = document.createElement('div');\n      notificationDiv.style.cssText = `\n        background: linear-gradient(45deg, #ff0000, #ff4444, #ff6666);\n        color: white;\n        padding: 30px;\n        margin: 20px;\n        border-radius: 20px;\n        text-align: center;\n        box-shadow: 0 0 50px rgba(255, 0, 0, 0.8);\n        border: 3px solid #fff;\n        animation: epicEntry 1s ease-out, epicGlow 2s ease-in-out infinite alternate;\n        max-width: 600px;\n      `;\n      \n      notificationDiv.innerHTML = `\n        <h1 style=\"font-size: 2.5rem; margin-bottom: 15px; text-shadow: 0 0 20px #fff;\">${notification.title}</h1>\n        <p style=\"font-size: 1.3rem; margin-bottom: 20px;\">${notification.message}</p>\n        <div style=\"font-size: 1rem; opacity: 0.8;\">Power Level: ${data.adminPowerLevel}</div>\n      `;\n      \n      alertOverlay.appendChild(notificationDiv);\n      \n      // Play alert sound\n      playAlertSound();\n      \n      // Auto remove after duration\n      setTimeout(() => {\n        if (notificationDiv.parentNode) {\n          notificationDiv.style.animation = 'fadeOut 1s ease-out forwards';\n          setTimeout(() => {\n            if (notificationDiv.parentNode) {\n              notificationDiv.remove();\n            }\n          }, 1000);\n        }\n      }, notification.duration);\n      \n    }, index * 2000);\n  });\n  \n  document.body.appendChild(alertOverlay);\n  \n  // Remove overlay after all notifications\n  setTimeout(() => {\n    if (alertOverlay.parentNode) {\n      alertOverlay.style.animation = 'fadeOut 2s ease-out forwards';\n      setTimeout(() => {\n        if (alertOverlay.parentNode) {\n          alertOverlay.remove();\n        }\n      }, 2000);\n    }\n  }, data.notifications.length * 2000 + 5000);\n}\n\nfunction playAlertSound() {\n  try {\n    const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    \n    // Create epic alert sound\n    const oscillator1 = audioContext.createOscillator();\n    const oscillator2 = audioContext.createOscillator();\n    const gainNode = audioContext.createGain();\n    \n    oscillator1.connect(gainNode);\n    oscillator2.connect(gainNode);\n    gainNode.connect(audioContext.destination);\n    \n    oscillator1.frequency.setValueAtTime(400, audioContext.currentTime);\n    oscillator1.frequency.setValueAtTime(800, audioContext.currentTime + 0.2);\n    oscillator1.frequency.setValueAtTime(600, audioContext.currentTime + 0.4);\n    \n    oscillator2.frequency.setValueAtTime(200, audioContext.currentTime);\n    oscillator2.frequency.setValueAtTime(400, audioContext.currentTime + 0.2);\n    oscillator2.frequency.setValueAtTime(300, audioContext.currentTime + 0.4);\n    \n    gainNode.gain.setValueAtTime(0.1, audioContext.currentTime);\n    gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + 0.6);\n    \n    oscillator1.start(audioContext.currentTime);\n    oscillator1.stop(audioContext.currentTime + 0.6);\n    oscillator2.start(audioContext.currentTime);\n    oscillator2.stop(audioContext.currentTime + 0.6);\n    \n  } catch (error) {\n    console.log('Could not play alert sound:', error);\n  }\n}\n\nfunction showGlobalAlert(data) {\n  const alert = document.createElement('div');\n  alert.style.cssText = `\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background: linear-gradient(45deg, #ff9800, #ff5722);\n    color: white;\n    padding: 40px;\n    border-radius: 20px;\n    text-align: center;\n    box-shadow: 0 0 50px rgba(255, 152, 0, 0.8);\n    z-index: 10000;\n    animation: alertPulse 1s ease-in-out infinite;\n    max-width: 500px;\n  `;\n  \n  alert.innerHTML = `\n    <h2 style=\"margin-bottom: 15px;\">${data.title}</h2>\n    <p style=\"font-size: 1.1rem;\">${data.message}</p>\n  `;\n  \n  document.body.appendChild(alert);\n  \n  setTimeout(() => {\n    if (alert.parentNode) {\n      alert.remove();\n    }\n  }, data.duration || 5000);\n}\n\nfunction showMaintenanceAlert(data) {\n  const alert = document.createElement('div');\n  alert.style.cssText = `\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    background: linear-gradient(45deg, #9c27b0, #673ab7);\n    color: white;\n    padding: 20px;\n    text-align: center;\n    z-index: 10000;\n    animation: slideDown 1s ease-out;\n  `;\n  \n  alert.innerHTML = `\n    <h3>${data.title}</h3>\n    <p>${data.message}</p>\n  `;\n  \n  document.body.appendChild(alert);\n}\n\nfunction activatePartyMode(data) {\n  // Add party effects\n  const partyOverlay = document.createElement('div');\n  partyOverlay.style.cssText = `\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    pointer-events: none;\n    z-index: 1000;\n    animation: rainbowBackground 2s linear infinite;\n  `;\n  \n  // Add confetti\n  for (let i = 0; i < 50; i++) {\n    const confetti = document.createElement('div');\n    confetti.style.cssText = `\n      position: absolute;\n      width: 10px;\n      height: 10px;\n      background: hsl(${Math.random() * 360}, 100%, 50%);\n      top: -10px;\n      left: ${Math.random() * 100}%;\n      animation: confettiFall ${3 + Math.random() * 2}s linear infinite;\n    `;\n    partyOverlay.appendChild(confetti);\n  }\n  \n  document.body.appendChild(partyOverlay);\n  \n  showToast('🎉 PARTY MODE ACTIVATED! 🎉', 'success');\n  \n  setTimeout(() => {\n    if (partyOverlay.parentNode) {\n      partyOverlay.remove();\n    }\n  }, data.duration);\n}\n\nfunction activateHackerMode(data) {\n  // Add matrix rain effect\n  const hackerOverlay = document.createElement('div');\n  hackerOverlay.style.cssText = `\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.8);\n    pointer-events: none;\n    z-index: 1000;\n  `;\n  \n  // Matrix rain\n  const chars = '0123456789ABCDEF';\n  for (let i = 0; i < 20; i++) {\n    const column = document.createElement('div');\n    column.style.cssText = `\n      position: absolute;\n      top: -100vh;\n      left: ${i * 5}%;\n      color: #0f0;\n      font-family: 'Courier New', monospace;\n      font-size: 20px;\n      animation: matrixFall ${3 + Math.random() * 3}s linear infinite;\n    `;\n    \n    let text = '';\n    for (let j = 0; j < 20; j++) {\n      text += chars[Math.floor(Math.random() * chars.length)] + '<br>';\n    }\n    column.innerHTML = text;\n    hackerOverlay.appendChild(column);\n  }\n  \n  document.body.appendChild(hackerOverlay);\n  \n  showToast('💻 HACKER MODE ACTIVATED! 💻', 'success');\n  \n  setTimeout(() => {\n    if (hackerOverlay.parentNode) {\n      hackerOverlay.remove();\n    }\n  }, data.duration);\n}\n\nfunction activateRainbowMode(data) {\n  document.body.style.animation = 'rainbowShift 3s linear infinite';\n  showToast('🌈 RAINBOW MODE! 🌈', 'success');\n  \n  setTimeout(() => {\n    document.body.style.animation = '';\n  }, data.duration);\n}\n\nfunction showEpicAnnouncement(data) {\n  const announcement = document.createElement('div');\n  announcement.style.cssText = `\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background: linear-gradient(45deg, #667eea, #764ba2);\n    color: white;\n    padding: 50px;\n    border-radius: 25px;\n    text-align: center;\n    box-shadow: 0 0 100px rgba(102, 126, 234, 0.8);\n    z-index: 10000;\n    animation: epicScale 2s ease-in-out infinite alternate;\n    max-width: 600px;\n  `;\n  \n  announcement.innerHTML = `\n    <h1 style=\"font-size: 3rem; margin-bottom: 20px; text-shadow: 0 0 20px #fff;\">${data.title}</h1>\n    <p style=\"font-size: 1.5rem;\">${data.message}</p>\n  `;\n  \n  document.body.appendChild(announcement);\n  \n  setTimeout(() => {\n    if (announcement.parentNode) {\n      announcement.remove();\n    }\n  }, data.duration);\n}\n\nfunction showSpeedBoost(data) {\n  const speedIndicator = document.createElement('div');\n  speedIndicator.style.cssText = `\n    position: fixed;\n    top: 20px;\n    right: 20px;\n    background: linear-gradient(45deg, #ffeb3b, #ff9800);\n    color: #333;\n    padding: 15px 25px;\n    border-radius: 15px;\n    font-weight: bold;\n    z-index: 10000;\n    animation: speedPulse 1s ease-in-out infinite;\n  `;\n  \n  speedIndicator.innerHTML = '⚡ SPEED BOOST ACTIVE! ⚡';\n  document.body.appendChild(speedIndicator);\n  \n  showToast(data.message, 'success');\n  \n  setTimeout(() => {\n    if (speedIndicator.parentNode) {\n      speedIndicator.remove();\n    }\n  }, data.duration);\n}\n\nfunction showServerStats(data) {\n  const statsModal = document.createElement('div');\n  statsModal.style.cssText = `\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background: rgba(0, 0, 0, 0.9);\n    color: #0f0;\n    padding: 30px;\n    border-radius: 15px;\n    font-family: 'Courier New', monospace;\n    z-index: 10000;\n    border: 2px solid #0f0;\n    box-shadow: 0 0 30px #0f0;\n  `;\n  \n  statsModal.innerHTML = `\n    <h3 style=\"text-align: center; margin-bottom: 20px;\">${data.title}</h3>\n    <div>Connected Users: ${data.stats.connectedUsers}</div>\n    <div>Active Processes: ${data.stats.activeProcesses}</div>\n    <div>Total Requests: ${data.stats.totalRequests}</div>\n    <div>Uptime: ${Math.floor(data.stats.uptime / 3600)}h ${Math.floor((data.stats.uptime % 3600) / 60)}m</div>\n  `;\n  \n  document.body.appendChild(statsModal);\n  \n  setTimeout(() => {\n    if (statsModal.parentNode) {\n      statsModal.remove();\n    }\n  }, data.duration);\n}\n\nfunction showNewEventNotification(event) {\n  showToast(`🎉 อีเว้นท์ใหม่: ${event.title}`, 'success');\n}\n\n// Add additional CSS animations\nconst adminEffectStyles = document.createElement('style');\nadminEffectStyles.textContent = `\n  @keyframes alertFlash {\n    0%, 100% { background: rgba(255, 0, 0, 0.8); }\n    50% { background: rgba(255, 255, 0, 0.8); }\n  }\n  \n  @keyframes screenShake {\n    0%, 100% { transform: translateX(0); }\n    10%, 30%, 50%, 70%, 90% { transform: translateX(-2px); }\n    20%, 40%, 60%, 80% { transform: translateX(2px); }\n  }\n  \n  @keyframes epicEntry {\n    0% { transform: scale(0) rotate(180deg); opacity: 0; }\n    50% { transform: scale(1.2) rotate(0deg); opacity: 1; }\n    100% { transform: scale(1) rotate(0deg); opacity: 1; }\n  }\n  \n  @keyframes epicGlow {\n    0% { box-shadow: 0 0 50px rgba(255, 0, 0, 0.8); }\n    100% { box-shadow: 0 0 100px rgba(255, 255, 0, 1); }\n  }\n  \n  @keyframes fadeOut {\n    to { opacity: 0; transform: scale(0.8); }\n  }\n  \n  @keyframes alertPulse {\n    0%, 100% { transform: translate(-50%, -50%) scale(1); }\n    50% { transform: translate(-50%, -50%) scale(1.05); }\n  }\n  \n  @keyframes rainbowBackground {\n    0% { filter: hue-rotate(0deg); }\n    100% { filter: hue-rotate(360deg); }\n  }\n  \n  @keyframes confettiFall {\n    to { transform: translateY(100vh) rotate(360deg); }\n  }\n  \n  @keyframes matrixFall {\n    to { transform: translateY(100vh); }\n  }\n  \n  @keyframes rainbowShift {\n    0% { filter: hue-rotate(0deg); }\n    100% { filter: hue-rotate(360deg); }\n  }\n  \n  @keyframes epicScale {\n    0% { transform: translate(-50%, -50%) scale(1); }\n    100% { transform: translate(-50%, -50%) scale(1.1); }\n  }\n  \n  @keyframes speedPulse {\n    0%, 100% { transform: scale(1); }\n    50% { transform: scale(1.1); }\n  }\n`;\ndocument.head.appendChild(adminEffectStyles);\n\n// Add toast slide out animation\nconst style = document.createElement('style');\nstyle.textContent = `\n  @keyframes toastSlideOut {\n    from {\n      opacity: 1;\n      transform: translateX(0);\n    }\n    to {\n      opacity: 0;\n      transform: translateX(100%);\n    }\n  }\n`;\ndocument.head.appendChild(style);\n\n// Chat Widget Functions\nfunction initializeChatWidget() {\n  const chatWidget = document.getElementById('chatWidget');\n  const toggleChat = document.getElementById('toggleChat');\n  const mainChatInput = document.getElementById('mainChatInput');\n  const mainChatSend = document.getElementById('mainChatSend');\n  const mainChatMessages = document.getElementById('mainChatMessages');\n  \n  // Toggle chat widget\n  toggleChat.addEventListener('click', () => {\n    chatWidget.classList.toggle('collapsed');\n    const icon = toggleChat.querySelector('i');\n    if (chatWidget.classList.contains('collapsed')) {\n      icon.className = 'fas fa-chevron-up';\n    } else {\n      icon.className = 'fas fa-chevron-down';\n    }\n  });\n  \n  // Send message on Enter key\n  mainChatInput.addEventListener('keypress', (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      sendMainChatMessage();\n    }\n  });\n  \n  // Send button click\n  mainChatSend.addEventListener('click', sendMainChatMessage);\n  \n  // Socket events for chat\n  socket.on('chat-message', (data) => {\n    displayMainChatMessage(data);\n  });\n  \n  socket.on('admin-chat-message', (data) => {\n    displayMainChatMessage(data);\n  });\n}\n\nfunction sendMainChatMessage() {\n  const mainChatInput = document.getElementById('mainChatInput');\n  const message = mainChatInput.value.trim();\n  \n  if (!message) return;\n  \n  const messageData = {\n    type: 'text',\n    content: message,\n    sender: 'user',\n    timestamp: Date.now()\n  };\n  \n  socket.emit('chat-message', messageData);\n  mainChatInput.value = '';\n  \n  // Display locally\n  displayMainChatMessage(messageData);\n}\n\nfunction displayMainChatMessage(messageData) {\n  const mainChatMessages = document.getElementById('mainChatMessages');\n  const messageElement = document.createElement('div');\n  messageElement.className = `chat-message ${messageData.sender}`;\n  \n  const time = new Date(messageData.timestamp).toLocaleTimeString('th-TH', {\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n  \n  let messageContent = '';\n  \n  if (messageData.type === 'file') {\n    const isImage = messageData.fileType && messageData.fileType.startsWith('image/');\n    messageContent = `\n      <div class=\"message-header\">${messageData.sender} • ${time}</div>\n      <div class=\"message-content\">\n        📎 ${messageData.content}\n        ${isImage && messageData.fileData ? `<div class=\"chat-file-preview\"><img src=\"${messageData.fileData}\" alt=\"Uploaded file\"></div>` : ''}\n      </div>\n    `;\n  } else {\n    messageContent = `\n      <div class=\"message-header\">${messageData.sender} • ${time}</div>\n      <div class=\"message-content\">${messageData.content}</div>\n    `;\n  }\n  \n  messageElement.innerHTML = messageContent;\n  mainChatMessages.appendChild(messageElement);\n  mainChatMessages.scrollTop = mainChatMessages.scrollHeight;\n}\n\n// Media Player Functions\nlet backgroundVideo = null;\nlet backgroundAudio = null;\nlet isMediaPlaying = false;\n\nfunction initializeMediaPlayer() {\n  const mediaPlayer = document.getElementById('mediaPlayer');\n  const backgroundVideo = document.getElementById('backgroundVideo');\n  const backgroundAudio = document.getElementById('backgroundAudio');\n  const mediaToggle = document.getElementById('mediaToggle');\n  \n  // Media control events from admin\n  socket.on('media-play', (mediaData) => {\n    playBackgroundMedia(mediaData);\n  });\n  \n  socket.on('media-pause', () => {\n    pauseBackgroundMedia();\n  });\n  \n  socket.on('media-stop', () => {\n    stopBackgroundMedia();\n  });\n  \n  socket.on('media-volume', (data) => {\n    setMediaVolume(data.volume);\n  });\n  \n  // Media toggle button\n  mediaToggle.addEventListener('click', () => {\n    if (isMediaPlaying) {\n      pauseBackgroundMedia();\n    } else {\n      resumeBackgroundMedia();\n    }\n  });\n}\n\nfunction playBackgroundMedia(mediaData) {\n  const mediaPlayer = document.getElementById('mediaPlayer');\n  const backgroundVideo = document.getElementById('backgroundVideo');\n  const backgroundAudio = document.getElementById('backgroundAudio');\n  const mediaToggle = document.getElementById('mediaToggle');\n  \n  // Stop any current media\n  stopBackgroundMedia();\n  \n  // Show media player\n  mediaPlayer.style.display = 'block';\n  \n  if (mediaData.type === 'video') {\n    // Play as video\n    mediaPlayer.classList.add('video-mode');\n    backgroundVideo.style.display = 'block';\n    backgroundAudio.style.display = 'none';\n    \n    // Try to load YouTube URL directly or use embed\n    if (mediaData.url.includes('youtube.com') || mediaData.url.includes('youtu.be')) {\n      const videoId = extractYouTubeVideoId(mediaData.url);\n      if (videoId) {\n        backgroundVideo.innerHTML = `\n          <iframe \n            width=\"100%\" \n            height=\"100%\" \n            src=\"https://www.youtube.com/embed/${videoId}?autoplay=1&loop=1&mute=0&controls=0&showinfo=0\" \n            frameborder=\"0\" \n            allow=\"autoplay; encrypted-media\" \n            allowfullscreen>\n          </iframe>\n        `;\n      }\n    } else {\n      backgroundVideo.src = mediaData.url;\n      backgroundVideo.volume = mediaData.volume || 0.5;\n      backgroundVideo.play().catch(console.error);\n    }\n  } else {\n    // Play as audio only\n    mediaPlayer.classList.remove('video-mode');\n    backgroundVideo.style.display = 'none';\n    backgroundAudio.style.display = 'block';\n    \n    if (mediaData.url.includes('youtube.com') || mediaData.url.includes('youtu.be')) {\n      // For YouTube audio, we'll need a different approach\n      showToast('YouTube audio playback requires video mode', 'info');\n      return;\n    } else {\n      backgroundAudio.src = mediaData.url;\n      backgroundAudio.volume = mediaData.volume || 0.5;\n      backgroundAudio.play().catch(console.error);\n    }\n  }\n  \n  isMediaPlaying = true;\n  updateMediaToggleIcon(true);\n}\n\nfunction pauseBackgroundMedia() {\n  const backgroundVideo = document.getElementById('backgroundVideo');\n  const backgroundAudio = document.getElementById('backgroundAudio');\n  \n  if (backgroundVideo.style.display !== 'none') {\n    backgroundVideo.pause();\n  }\n  if (backgroundAudio.style.display !== 'none') {\n    backgroundAudio.pause();\n  }\n  \n  isMediaPlaying = false;\n  updateMediaToggleIcon(false);\n}\n\nfunction resumeBackgroundMedia() {\n  const backgroundVideo = document.getElementById('backgroundVideo');\n  const backgroundAudio = document.getElementById('backgroundAudio');\n  \n  if (backgroundVideo.style.display !== 'none') {\n    backgroundVideo.play().catch(console.error);\n  }\n  if (backgroundAudio.style.display !== 'none') {\n    backgroundAudio.play().catch(console.error);\n  }\n  \n  isMediaPlaying = true;\n  updateMediaToggleIcon(true);\n}\n\nfunction stopBackgroundMedia() {\n  const mediaPlayer = document.getElementById('mediaPlayer');\n  const backgroundVideo = document.getElementById('backgroundVideo');\n  const backgroundAudio = document.getElementById('backgroundAudio');\n  \n  // Stop and reset video\n  backgroundVideo.pause();\n  backgroundVideo.src = '';\n  backgroundVideo.innerHTML = '';\n  \n  // Stop and reset audio\n  backgroundAudio.pause();\n  backgroundAudio.src = '';\n  \n  // Hide media player\n  mediaPlayer.style.display = 'none';\n  mediaPlayer.classList.remove('video-mode');\n  \n  isMediaPlaying = false;\n  updateMediaToggleIcon(false);\n}\n\nfunction setMediaVolume(volume) {\n  const backgroundVideo = document.getElementById('backgroundVideo');\n  const backgroundAudio = document.getElementById('backgroundAudio');\n  \n  backgroundVideo.volume = volume;\n  backgroundAudio.volume = volume;\n}\n\nfunction updateMediaToggleIcon(isPlaying) {\n  const mediaToggle = document.getElementById('mediaToggle');\n  const icon = mediaToggle.querySelector('i');\n  \n  if (isPlaying) {\n    icon.className = 'fas fa-volume-up';\n  } else {\n    icon.className = 'fas fa-volume-mute';\n  }\n}\n\nfunction extractYouTubeVideoId(url) {\n  const regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n  const match = url.match(regExp);\n  return (match && match[2].length === 11) ? match[2] : null;\n}\n","size_bytes":42328},"public/styles.css":{"content":":root {\n  --primary-color: #667eea;\n  --secondary-color: #764ba2;\n  --accent-color: #f093fb;\n  --success-color: #4CAF50;\n  --error-color: #f44336;\n  --warning-color: #ff9800;\n  --glass-bg: rgba(255, 255, 255, 0.1);\n  --glass-border: rgba(255, 255, 255, 0.2);\n  --text-light: #ffffff;\n  --text-dark: #333333;\n  --shadow: 0 8px 32px rgba(0, 0, 0, 0.3);\n  --border-radius: 16px;\n}\n\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: 'Kanit', 'Segoe UI', sans-serif;\n  min-height: 100vh;\n  background: #000;\n  overflow-x: hidden;\n  position: relative;\n  line-height: 1.6;\n}\n\n/* Particles Container */\n#particles-container {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: -3;\n  pointer-events: none;\n}\n\n/* Enhanced Background */\n.bg-blur {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(45deg, var(--primary-color), var(--secondary-color), var(--accent-color), #4facfe);\n  background-size: 400% 400%;\n  animation: gradientShift 15s ease infinite;\n  filter: blur(20px);\n  z-index: -2;\n}\n\n@keyframes gradientShift {\n  0% { background-position: 0% 50%; }\n  50% { background-position: 100% 50%; }\n  100% { background-position: 0% 50%; }\n}\n\n.bg-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.4);\n  z-index: -1;\n}\n\n/* Announcement Banner */\n.announcement-banner {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  background: linear-gradient(135deg, var(--warning-color), #ff7043);\n  color: white;\n  padding: 15px 20px;\n  z-index: 1000;\n  animation: slideDown 0.5s ease-out;\n  box-shadow: var(--shadow);\n}\n\n.announcement-content {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 15px;\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n.close-announcement {\n  background: rgba(255, 255, 255, 0.2);\n  border: none;\n  color: white;\n  padding: 5px 10px;\n  border-radius: 50%;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.close-announcement:hover {\n  background: rgba(255, 255, 255, 0.3);\n  transform: scale(1.1);\n}\n\n@keyframes slideDown {\n  from {\n    transform: translateY(-100%);\n  }\n  to {\n    transform: translateY(0);\n  }\n}\n\n/* Admin Access Button */\n.admin-access {\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  z-index: 999;\n}\n\n.admin-btn {\n  background: rgba(0, 0, 0, 0.5);\n  border: 2px solid var(--glass-border);\n  color: var(--text-light);\n  padding: 12px;\n  border-radius: 50%;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  backdrop-filter: blur(10px);\n  font-size: 1.2rem;\n}\n\n.admin-btn:hover {\n  background: var(--glass-bg);\n  transform: scale(1.1) rotate(90deg);\n  box-shadow: var(--shadow);\n}\n\n/* Modern Glass Container */\n.container {\n  max-width: 900px;\n  margin: 20px auto;\n  background: var(--glass-bg);\n  backdrop-filter: blur(20px);\n  -webkit-backdrop-filter: blur(20px);\n  border-radius: var(--border-radius);\n  padding: 30px;\n  box-shadow: var(--shadow);\n  border: 1px solid var(--glass-border);\n  animation: slideUp 0.8s ease-out;\n  color: var(--text-light);\n  position: relative;\n  overflow: hidden;\n}\n\n.container::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: -100%;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(90deg, transparent, rgba(255,255,255,0.1), transparent);\n  animation: shimmer 3s infinite;\n}\n\n@keyframes shimmer {\n  0% { left: -100%; }\n  100% { left: 100%; }\n}\n\n@keyframes slideUp {\n  from {\n    opacity: 0;\n    transform: translateY(50px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n/* Header with Modern Typography */\n.header {\n  text-align: center;\n  margin-bottom: 40px;\n  position: relative;\n}\n\n.header h1 {\n  font-size: clamp(2rem, 5vw, 3rem);\n  font-weight: 700;\n  background: linear-gradient(45deg, var(--primary-color), var(--secondary-color), var(--accent-color));\n  background-size: 200%;\n  background-clip: text;\n  -webkit-background-clip: text;\n  color: transparent;\n  animation: textGlow 3s ease-in-out infinite;\n  margin-bottom: 10px;\n}\n\n/* Glitch Effect */\n.glitch-text {\n  position: relative;\n}\n\n.glitch-text::before,\n.glitch-text::after {\n  content: attr(data-text);\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  opacity: 0;\n}\n\n.glitch-text::before {\n  animation: glitch1 2s infinite;\n  color: #ff0000;\n  z-index: -1;\n}\n\n.glitch-text::after {\n  animation: glitch2 2s infinite;\n  color: #00ff00;\n  z-index: -2;\n}\n\n@keyframes glitch1 {\n  0%, 95% { opacity: 0; }\n  96%, 97% { opacity: 0.1; transform: translate(2px, 0); }\n  98%, 99% { opacity: 0.1; transform: translate(-2px, 0); }\n  100% { opacity: 0; }\n}\n\n@keyframes glitch2 {\n  0%, 90% { opacity: 0; }\n  91%, 92% { opacity: 0.1; transform: translate(-2px, 0); }\n  93%, 94% { opacity: 0.1; transform: translate(2px, 0); }\n  95% { opacity: 0; }\n}\n\n@keyframes textGlow {\n  0%, 100% { background-position: 0% 50%; }\n  50% { background-position: 100% 50%; }\n}\n\n.header p {\n  color: rgba(255, 255, 255, 0.8);\n  font-size: 1.1rem;\n  font-weight: 300;\n}\n\n.version-badge {\n  display: inline-block;\n  background: linear-gradient(45deg, var(--primary-color), var(--secondary-color));\n  color: white;\n  padding: 6px 16px;\n  border-radius: 20px;\n  font-size: 0.85rem;\n  font-weight: 500;\n  margin-top: 10px;\n  box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);\n}\n\n/* Floating Animation */\n.floating {\n  animation: floating 3s ease-in-out infinite;\n}\n\n@keyframes floating {\n  0%, 100% { transform: translateY(0px); }\n  50% { transform: translateY(-10px); }\n}\n\n.floating-animation {\n  animation: floating 4s ease-in-out infinite;\n}\n\n/* Enhanced GIF Section */\n.gif-wrapper {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 30px 0;\n  position: relative;\n}\n\n.gif-wrapper img {\n  max-width: 100%;\n  height: auto;\n  border-radius: var(--border-radius);\n  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.5);\n  transition: transform 0.3s ease;\n}\n\n.gif-wrapper img:hover {\n  transform: scale(1.02);\n}\n\n/* Modern Form Grid */\n.form-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\n  gap: 25px;\n  margin-bottom: 30px;\n}\n\n.form-group {\n  display: flex;\n  flex-direction: column;\n  position: relative;\n}\n\n.form-group.full-width {\n  grid-column: 1 / -1;\n}\n\n.form-group label {\n  font-weight: 600;\n  color: var(--text-light);\n  margin-bottom: 12px;\n  font-size: 1rem;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.form-group label i {\n  color: var(--accent-color);\n}\n\n/* Modern Input Styling */\n.form-group input {\n  padding: 16px 20px;\n  border: 2px solid var(--glass-border);\n  border-radius: 12px;\n  font-size: 1rem;\n  background: rgba(255, 255, 255, 0.9);\n  color: var(--text-dark);\n  transition: all 0.3s ease;\n  font-family: inherit;\n}\n\n.input-glow {\n  position: relative;\n}\n\n.input-glow:focus {\n  outline: none;\n  border-color: var(--primary-color);\n  box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.2);\n  transform: translateY(-2px);\n}\n\n.input-glow:focus::after {\n  content: '';\n  position: absolute;\n  top: -2px;\n  left: -2px;\n  right: -2px;\n  bottom: -2px;\n  background: linear-gradient(45deg, var(--primary-color), var(--accent-color));\n  z-index: -1;\n  border-radius: inherit;\n  filter: blur(10px);\n  opacity: 0.7;\n}\n\n/* Enhanced File Upload */\n.file-input-wrapper {\n  position: relative;\n  width: 100%;\n}\n\n.file-input-wrapper input[type=\"file\"] {\n  position: absolute;\n  opacity: 0;\n  width: 100%;\n  height: 100%;\n  cursor: pointer;\n  z-index: 10;\n}\n\n.file-input-display {\n  padding: 20px;\n  border: 3px dashed var(--glass-border);\n  border-radius: 12px;\n  text-align: center;\n  background: var(--glass-bg);\n  color: var(--text-light);\n  cursor: pointer;\n  transition: all 0.3s ease;\n  position: relative;\n  overflow: hidden;\n  min-height: 120px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\n.file-input-display:hover {\n  border-color: var(--primary-color);\n  background: rgba(102, 126, 234, 0.1);\n  transform: translateY(-2px);\n}\n\n.file-input-display.has-file {\n  border-color: var(--success-color);\n  background: rgba(76, 175, 80, 0.1);\n  color: var(--success-color);\n}\n\n.file-input-display i {\n  font-size: 2rem;\n  margin-bottom: 10px;\n  display: block;\n  animation: bounce 2s infinite;\n}\n\n@keyframes bounce {\n  0%, 20%, 50%, 80%, 100% { transform: translateY(0); }\n  40% { transform: translateY(-10px); }\n  60% { transform: translateY(-5px); }\n}\n\n.file-input-display .upload-text {\n  font-weight: 500;\n  margin-bottom: 5px;\n}\n\n.file-input-display .upload-hint {\n  font-size: 0.85rem;\n  opacity: 0.7;\n}\n\n/* YouTube Section */\n.youtube-section {\n  background: linear-gradient(135deg, rgba(255, 0, 0, 0.1), rgba(255, 69, 0, 0.1));\n  border: 2px solid rgba(255, 0, 0, 0.3);\n  border-radius: var(--border-radius);\n  padding: 25px;\n  margin: 25px 0;\n  position: relative;\n  overflow: hidden;\n}\n\n.youtube-section::before {\n  content: '';\n  position: absolute;\n  top: -50%;\n  left: -50%;\n  width: 200%;\n  height: 200%;\n  background: linear-gradient(45deg, transparent, rgba(255, 0, 0, 0.05), transparent);\n  animation: rotate 10s linear infinite;\n}\n\n@keyframes rotate {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n\n.youtube-section h3 {\n  color: #ff4444;\n  margin-bottom: 15px;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  position: relative;\n  z-index: 1;\n}\n\n.youtube-input-group {\n  display: flex;\n  gap: 15px;\n  align-items: end;\n  margin-bottom: 20px;\n  position: relative;\n  z-index: 1;\n}\n\n.youtube-input {\n  flex: 1;\n}\n\n.youtube-btn, .tiktok-btn {\n  background: linear-gradient(45deg, #ff0000, #ff4444);\n  color: white;\n  border: none;\n  padding: 16px 24px;\n  border-radius: 12px;\n  cursor: pointer;\n  font-weight: 600;\n  transition: all 0.3s ease;\n  white-space: nowrap;\n  position: relative;\n  overflow: hidden;\n}\n\n.youtube-btn::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: -100%;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);\n  transition: left 0.5s;\n}\n\n.youtube-btn:hover::before {\n  left: 100%;\n}\n\n.youtube-btn:hover, .tiktok-btn:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 8px 25px rgba(255, 0, 0, 0.3);\n}\n\n.tiktok-btn {\n  background: linear-gradient(45deg, #ff0050, #ff4081);\n}\n\n.tiktok-btn:hover {\n  box-shadow: 0 8px 25px rgba(255, 0, 80, 0.3);\n}\n\n.youtube-btn:disabled, .tiktok-btn:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n  transform: none;\n}\n\n.youtube-preview {\n  margin-top: 20px;\n  padding: 20px;\n  background: var(--glass-bg);\n  border-radius: 12px;\n  border: 1px solid var(--glass-border);\n  display: none;\n  position: relative;\n  z-index: 1;\n}\n\n.youtube-thumbnail {\n  width: 100%;\n  max-width: 320px;\n  border-radius: 8px;\n  margin-bottom: 15px;\n}\n\n.youtube-info h4 {\n  color: var(--text-light);\n  margin-bottom: 8px;\n  font-size: 1.1rem;\n}\n\n.youtube-info p {\n  color: rgba(255, 255, 255, 0.7);\n  font-size: 0.9rem;\n}\n\n.youtube-options {\n  display: flex;\n  gap: 20px;\n  align-items: center;\n  margin-top: 15px;\n  flex-wrap: wrap;\n  position: relative;\n  z-index: 1;\n}\n\n.youtube-quality-select {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  color: var(--text-light);\n}\n\n.youtube-quality-select label {\n  font-weight: 500;\n  margin-bottom: 0;\n}\n\n.youtube-quality-select select {\n  padding: 10px 15px;\n  border: 2px solid var(--glass-border);\n  border-radius: 8px;\n  background: rgba(255, 255, 255, 0.9);\n  color: var(--text-dark);\n  font-family: inherit;\n  font-size: 0.95rem;\n}\n\n.youtube-audio-checkbox {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  color: var(--text-light);\n  white-space: nowrap;\n}\n\n.youtube-audio-checkbox input[type=\"checkbox\"] {\n  accent-color: var(--primary-color);\n  transform: scale(1.2);\n  cursor: pointer;\n}\n\n/* Modern Button */\n.submit-btn {\n  background: linear-gradient(45deg, var(--primary-color), var(--secondary-color));\n  color: white;\n  border: none;\n  padding: 18px 36px;\n  font-size: 1.1rem;\n  font-weight: 600;\n  border-radius: 12px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  width: 100%;\n  margin-top: 30px;\n  position: relative;\n  overflow: hidden;\n  font-family: inherit;\n}\n\n.pulse-animation {\n  animation: pulse 2s infinite;\n}\n\n@keyframes pulse {\n  0% { box-shadow: 0 0 0 0 rgba(102, 126, 234, 0.7); }\n  70% { box-shadow: 0 0 0 10px rgba(102, 126, 234, 0); }\n  100% { box-shadow: 0 0 0 0 rgba(102, 126, 234, 0); }\n}\n\n.submit-btn:hover {\n  transform: translateY(-3px);\n  box-shadow: 0 12px 30px rgba(102, 126, 234, 0.4);\n}\n\n.submit-btn:active {\n  transform: translateY(-1px);\n}\n\n.submit-btn:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n  transform: none;\n}\n\n.submit-btn i {\n  margin-right: 10px;\n}\n\n/* Enhanced Video Preview */\n.video-preview {\n  margin-top: 20px;\n  padding: 25px;\n  background: var(--glass-bg);\n  border-radius: var(--border-radius);\n  border: 1px solid var(--glass-border);\n  animation: fadeIn 0.5s ease;\n}\n\n@keyframes fadeIn {\n  from { opacity: 0; transform: translateY(20px); }\n  to { opacity: 1; transform: translateY(0); }\n}\n\n.video-preview video {\n  width: 100%;\n  max-height: 350px;\n  border-radius: 12px;\n  margin-bottom: 20px;\n  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);\n}\n\n.video-info {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 15px;\n  margin-bottom: 20px;\n  padding: 20px;\n  background: rgba(0, 0, 0, 0.2);\n  border-radius: 12px;\n}\n\n.info-row {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 8px 0;\n}\n\n.info-label {\n  font-weight: 600;\n  color: var(--text-light);\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.info-value {\n  color: var(--success-color);\n  font-weight: bold;\n}\n\n/* Modal Styles */\n.modal {\n  display: none;\n  position: fixed;\n  z-index: 1000;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.8);\n  backdrop-filter: blur(5px);\n  animation: modalFadeIn 0.3s ease;\n}\n\n@keyframes modalFadeIn {\n  from { opacity: 0; }\n  to { opacity: 1; }\n}\n\n.modal-content {\n  background: var(--glass-bg);\n  backdrop-filter: blur(20px);\n  margin: 5% auto;\n  padding: 30px;\n  border: 1px solid var(--glass-border);\n  border-radius: var(--border-radius);\n  width: 90%;\n  max-width: 600px;\n  color: var(--text-light);\n  animation: modalSlideIn 0.3s ease;\n  position: relative;\n  overflow: hidden;\n}\n\n@keyframes modalSlideIn {\n  from { \n    opacity: 0;\n    transform: translateY(-50px) scale(0.9);\n  }\n  to { \n    opacity: 1;\n    transform: translateY(0) scale(1);\n  }\n}\n\n/* Progress Modal */\n.progress-header {\n  text-align: center;\n  margin-bottom: 30px;\n}\n\n.progress-header h3 {\n  color: var(--text-light);\n  margin-bottom: 10px;\n  font-size: 1.5rem;\n}\n\n.progress-stats {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 0.9rem;\n  color: rgba(255, 255, 255, 0.7);\n}\n\n.progress-container {\n  margin-bottom: 30px;\n}\n\n.progress-bar {\n  width: 100%;\n  height: 20px;\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 10px;\n  overflow: hidden;\n  position: relative;\n}\n\n.progress-fill {\n  height: 100%;\n  background: linear-gradient(45deg, var(--primary-color), var(--accent-color));\n  border-radius: 10px;\n  transition: width 0.3s ease;\n  position: relative;\n  overflow: hidden;\n}\n\n.progress-fill::after {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  background: linear-gradient(-45deg, transparent 35%, rgba(255, 255, 255, 0.3) 50%, transparent 65%);\n  animation: progressShine 2s infinite;\n}\n\n@keyframes progressShine {\n  0% { transform: translateX(-100%); }\n  100% { transform: translateX(100%); }\n}\n\n.progress-text {\n  text-align: center;\n  margin-top: 10px;\n  font-weight: 600;\n  font-size: 1.1rem;\n}\n\n.progress-message {\n  text-align: center;\n  margin-bottom: 30px;\n}\n\n.progress-message p {\n  color: rgba(255, 255, 255, 0.8);\n  font-size: 1rem;\n}\n\n.progress-steps {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 20px;\n}\n\n.step {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background: rgba(255, 255, 255, 0.1);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.3s ease;\n  position: relative;\n}\n\n.step.active {\n  background: var(--primary-color);\n  transform: scale(1.2);\n  box-shadow: 0 0 20px rgba(102, 126, 234, 0.5);\n}\n\n.step.completed {\n  background: var(--success-color);\n  transform: scale(1.1);\n}\n\n.step i {\n  color: white;\n  font-size: 0.9rem;\n}\n\n/* Success Modal */\n.success-modal {\n  text-align: center;\n}\n\n.success-header {\n  margin-bottom: 30px;\n}\n\n.success-icon {\n  font-size: 4rem;\n  color: var(--success-color);\n  margin-bottom: 20px;\n  animation: successPulse 1s ease-in-out;\n}\n\n@keyframes successPulse {\n  0% { transform: scale(0); }\n  50% { transform: scale(1.2); }\n  100% { transform: scale(1); }\n}\n\n.success-header h3 {\n  color: var(--success-color);\n  font-size: 2rem;\n  margin-bottom: 10px;\n}\n\n.download-info {\n  margin-bottom: 30px;\n  padding: 20px;\n  background: rgba(76, 175, 80, 0.1);\n  border-radius: 12px;\n  border: 1px solid rgba(76, 175, 80, 0.3);\n}\n\n.download-info h4 {\n  color: var(--text-light);\n  margin-bottom: 10px;\n  font-size: 1.3rem;\n}\n\n.modal-actions {\n  display: flex;\n  gap: 15px;\n  justify-content: center;\n}\n\n.btn {\n  padding: 12px 24px;\n  border: none;\n  border-radius: 8px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  text-decoration: none;\n  display: inline-flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.btn-primary {\n  background: linear-gradient(45deg, var(--primary-color), var(--secondary-color));\n  color: white;\n}\n\n.btn-primary:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);\n}\n\n.btn-secondary {\n  background: rgba(255, 255, 255, 0.1);\n  color: var(--text-light);\n  border: 1px solid var(--glass-border);\n}\n\n.btn-secondary:hover {\n  background: rgba(255, 255, 255, 0.2);\n  transform: translateY(-2px);\n}\n\n/* Toast Notifications */\n.toast-container {\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  z-index: 10000;\n}\n\n.toast {\n  background: var(--glass-bg);\n  backdrop-filter: blur(20px);\n  color: var(--text-light);\n  padding: 15px 20px;\n  border-radius: 12px;\n  border: 1px solid var(--glass-border);\n  margin-bottom: 10px;\n  animation: toastSlideIn 0.3s ease;\n  box-shadow: var(--shadow);\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  min-width: 300px;\n}\n\n.toast.success {\n  border-color: var(--success-color);\n  background: linear-gradient(135deg, rgba(76, 175, 80, 0.2), var(--glass-bg));\n}\n\n.toast.error {\n  border-color: var(--error-color);\n  background: linear-gradient(135deg, rgba(244, 67, 54, 0.2), var(--glass-bg));\n}\n\n.toast.warning {\n  border-color: var(--warning-color);\n  background: linear-gradient(135deg, rgba(255, 152, 0, 0.2), var(--glass-bg));\n}\n\n@keyframes toastSlideIn {\n  from {\n    opacity: 0;\n    transform: translateX(100%);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n  }\n}\n\n/* Responsive Design */\n@media (max-width: 768px) {\n  .container {\n    margin: 10px;\n    padding: 20px;\n  }\n  \n  .form-grid {\n    grid-template-columns: 1fr;\n  }\n  \n  .youtube-input-group {\n    flex-direction: column;\n    align-items: stretch;\n  }\n  \n  .youtube-options {\n    flex-direction: column;\n    align-items: stretch;\n    gap: 10px;\n  }\n  \n  .progress-steps {\n    flex-wrap: wrap;\n    gap: 10px;\n  }\n  \n  .step {\n    width: 35px;\n    height: 35px;\n  }\n  \n  .modal-content {\n    margin: 2% auto;\n    width: 95%;\n    padding: 20px;\n  }\n  \n  .modal-actions {\n    flex-direction: column;\n  }\n}\n\n/* Loading Animation */\n.loading {\n  position: relative;\n}\n\n.loading::after {\n  content: '';\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 20px;\n  height: 20px;\n  margin: -10px 0 0 -10px;\n  border: 2px solid rgba(255, 255, 255, 0.3);\n  border-top-color: white;\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  to { transform: rotate(360deg); }\n}\n\n/* Scrollbar Styling */\n::-webkit-scrollbar {\n  width: 8px;\n}\n\n::-webkit-scrollbar-track {\n  background: rgba(255, 255, 255, 0.1);\n}\n\n::-webkit-scrollbar-thumb {\n  background: linear-gradient(45deg, var(--primary-color), var(--secondary-color));\n  border-radius: 4px;\n}\n\n::-webkit-scrollbar-thumb:hover {\n  background: linear-gradient(45deg, var(--secondary-color), var(--accent-color));\n}\n\n/* Chat Widget */\n.chat-widget {\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  width: 350px;\n  max-height: 500px;\n  background: rgba(255, 255, 255, 0.1);\n  backdrop-filter: blur(20px);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  border-radius: 15px;\n  z-index: 999;\n  transition: all 0.3s ease;\n  overflow: hidden;\n}\n\n.chat-widget.collapsed .chat-body {\n  display: none;\n}\n\n.chat-header {\n  background: linear-gradient(135deg, #667eea, #764ba2);\n  padding: 12px 15px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  cursor: pointer;\n}\n\n.chat-header h4 {\n  margin: 0;\n  color: white;\n  font-size: 14px;\n  font-weight: 600;\n}\n\n.chat-toggle {\n  background: none;\n  border: none;\n  color: white;\n  cursor: pointer;\n  font-size: 12px;\n  padding: 4px;\n  border-radius: 4px;\n  transition: all 0.3s ease;\n}\n\n.chat-toggle:hover {\n  background: rgba(255, 255, 255, 0.1);\n}\n\n.chat-body {\n  height: 400px;\n  display: flex;\n  flex-direction: column;\n  padding: 15px;\n}\n\n.chat-widget .chat-messages {\n  flex: 1;\n  overflow-y: auto;\n  padding: 10px;\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 8px;\n  margin-bottom: 10px;\n  max-height: 300px;\n}\n\n.chat-widget .chat-message {\n  margin-bottom: 12px;\n  padding: 8px 12px;\n  border-radius: 12px;\n  max-width: 80%;\n  word-wrap: break-word;\n}\n\n.chat-widget .chat-message.admin {\n  background: linear-gradient(135deg, #667eea, #764ba2);\n  color: white;\n  margin-left: auto;\n  text-align: right;\n}\n\n.chat-widget .chat-message.user {\n  background: rgba(255, 255, 255, 0.1);\n  color: #fff;\n}\n\n.chat-widget .chat-message .message-header {\n  font-size: 11px;\n  opacity: 0.7;\n  margin-bottom: 4px;\n}\n\n.chat-widget .chat-message .message-content {\n  font-size: 14px;\n  line-height: 1.4;\n}\n\n.chat-widget .chat-input-container {\n  display: flex;\n  gap: 8px;\n  align-items: center;\n}\n\n.chat-widget #mainChatInput {\n  flex: 1;\n  padding: 10px 12px;\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  border-radius: 20px;\n  background: rgba(255, 255, 255, 0.1);\n  color: #fff;\n  font-size: 14px;\n}\n\n.chat-widget .chat-send-btn {\n  width: 40px;\n  height: 40px;\n  border: none;\n  border-radius: 50%;\n  background: linear-gradient(135deg, #667eea, #764ba2);\n  color: white;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.3s ease;\n}\n\n.chat-widget .chat-send-btn:hover {\n  transform: scale(1.1);\n  box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);\n}\n\n/* Media Player */\n.media-player {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: -1;\n  pointer-events: none;\n}\n\n.media-player.video-mode {\n  z-index: 1;\n  pointer-events: auto;\n}\n\n.media-content {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n\n.media-content video {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.media-controls-overlay {\n  position: absolute;\n  bottom: 20px;\n  right: 20px;\n  z-index: 10;\n}\n\n.media-control-btn {\n  width: 50px;\n  height: 50px;\n  border: none;\n  border-radius: 50%;\n  background: rgba(0, 0, 0, 0.7);\n  color: white;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.3s ease;\n  backdrop-filter: blur(10px);\n}\n\n.media-control-btn:hover {\n  background: rgba(0, 0, 0, 0.9);\n  transform: scale(1.1);\n}\n","size_bytes":23732},"main.py":{"content":"#!/usr/bin/env python3\n# BetMC Texture Generator Pro - Node.js Direct Launch\nimport os\nimport sys\nimport subprocess\n\ndef start_node_server():\n    \"\"\"Start Node.js server on port 5000\"\"\"\n    print(\"🚀 Starting BetMC Texture Generator Pro on port 5000...\")\n    \n    # Kill any existing processes on port 5000\n    os.system(\"pkill -f 'node server.js' 2>/dev/null || true\")\n    os.system(\"pkill -f gunicorn 2>/dev/null || true\")\n    os.system(\"fuser -k 5000/tcp 2>/dev/null || true\")\n    \n    # Set environment variable for port 5000\n    os.environ['PORT'] = '5000'\n    \n    # Start Node.js server directly\n    try:\n        subprocess.run(['node', 'server.js'], check=True)\n    except Exception as e:\n        print(f\"❌ Error starting Node.js server: {e}\")\n        sys.exit(1)\n\nif __name__ == \"__main__\":\n    start_node_server()\n\n# Simple Flask app for gunicorn compatibility\nfrom flask import Flask, redirect\n\napp = Flask(__name__)\n\n@app.route('/')\ndef index():\n    # Redirect to the Node.js server on port 5000\n    return redirect(\"http://localhost:5000\")\n\n@app.route('/<path:path>')\ndef proxy(path):\n    # Redirect all other routes to Node.js server\n    return redirect(f\"http://localhost:5000/{path}\")\n\n# Auto-start Node.js server when imported by gunicorn\nimport threading\nnode_thread = threading.Thread(target=start_node_server, daemon=True)\nnode_thread.start()\n","size_bytes":1367},"app.py":{"content":"import os\nimport subprocess\nimport sys\nimport threading\nimport time\nimport requests\nfrom flask import Flask, request, Response\nfrom werkzeug.middleware.proxy_fix import ProxyFix\n\n# Create Flask app\napp = Flask(__name__)\napp.secret_key = os.environ.get(\"SESSION_SECRET\", \"fallback-secret-key\")\napp.wsgi_app = ProxyFix(app.wsgi_app, x_proto=1, x_host=1)\n\n# Node.js server configuration\nNODE_SERVER_PORT = 5000\nNODE_SERVER_URL = f\"http://localhost:{NODE_SERVER_PORT}\"\n\n# Global variable to track Node.js server process\nnode_process = None\n\ndef start_node_server():\n    \"\"\"Start the Node.js server in a separate process\"\"\"\n    global node_process\n    try:\n        print(\"🚀 Starting Node.js server...\")\n        node_process = subprocess.Popen(\n            ['node', 'server.js'],\n            stdout=subprocess.PIPE,\n            stderr=subprocess.PIPE,\n            text=True\n        )\n        \n        # Wait longer for the server to start with better error handling\n        max_retries = 60  # Increased to 60 seconds\n        for i in range(max_retries):\n            try:\n                response = requests.get(f\"{NODE_SERVER_URL}/\", timeout=2)\n                if response.status_code == 200:\n                    print(f\"✅ Node.js server started successfully on port {NODE_SERVER_PORT}\")\n                    return True\n            except requests.exceptions.RequestException:\n                time.sleep(1)\n                continue\n        \n        print(\"❌ Node.js server failed to start within 60 seconds\")\n        return False\n        \n    except Exception as e:\n        print(f\"❌ Failed to start Node.js server: {e}\")\n        return False\n\n# Global flag to track server status\nnode_server_ready = False\n\ndef wait_for_node_server():\n    \"\"\"Wait for Node.js server to be ready\"\"\"\n    global node_server_ready\n    if node_server_ready:\n        return True\n        \n    max_wait = 10  # Wait up to 10 seconds for ongoing startup\n    for i in range(max_wait):\n        try:\n            response = requests.get(f\"{NODE_SERVER_URL}/\", timeout=1)\n            if response.status_code == 200:\n                node_server_ready = True\n                return True\n        except requests.exceptions.RequestException:\n            time.sleep(1)\n            continue\n    return False\n\ndef proxy_request(path=\"\"):\n    \"\"\"Proxy requests to the Node.js server\"\"\"\n    try:\n        # Wait for Node.js server to be ready\n        if not wait_for_node_server():\n            return \"Node.js server is starting up, please wait...\", 503\n            \n        # Build the URL for the Node.js server\n        url = f\"{NODE_SERVER_URL}{path}\"\n        \n        # Prepare headers for forwarding (exclude host)\n        headers = {k: v for k, v in request.headers if k.lower() not in ['host', 'content-length']}\n        \n        # Forward the request to Node.js server\n        if request.method == 'GET':\n            resp = requests.get(url, params=dict(request.args), headers=headers, stream=True, timeout=30)\n        elif request.method == 'POST':\n            resp = requests.post(\n                url, \n                data=request.get_data(),\n                headers=headers,\n                params=dict(request.args),\n                stream=True,\n                timeout=30\n            )\n        else:\n            resp = requests.request(\n                request.method,\n                url,\n                data=request.get_data(),\n                headers=headers,\n                params=dict(request.args),\n                stream=True,\n                timeout=30\n            )\n        \n        # Filter response headers to avoid conflicts\n        response_headers = dict(resp.headers)\n        response_headers.pop('content-encoding', None)  # Let Flask handle encoding\n        response_headers.pop('content-length', None)    # Let Flask calculate length\n        response_headers.pop('transfer-encoding', None)  # Remove transfer-encoding\n        \n        # For large files (like ZIP downloads), use streaming\n        def generate():\n            for chunk in resp.iter_content(chunk_size=8192):\n                if chunk:\n                    yield chunk\n        \n        # Return the response from Node.js server\n        return Response(\n            generate(),\n            status=resp.status_code,\n            headers=response_headers\n        )\n        \n    except requests.exceptions.RequestException as e:\n        print(f\"❌ Error proxying request {path}: {e}\")\n        global node_server_ready\n        node_server_ready = False  # Reset flag on connection error\n        return f\"Error connecting to Node.js server: {e}\", 502\n\n@app.route('/', defaults={'path': ''})\n@app.route('/<path:path>')\ndef catch_all(path):\n    \"\"\"Catch all routes and proxy to Node.js server\"\"\"\n    return proxy_request(f\"/{path}\" if path else \"/\")\n\n# Start Node.js server immediately when module loads\nprint(\"🚀 Initializing BetMC Texture Generator...\")\n\ndef initialize_node_server():\n    \"\"\"Initialize the Node.js server and mark as ready\"\"\"\n    global node_server_ready\n    try:\n        # Check if Node.js server is already running\n        response = requests.get(f\"{NODE_SERVER_URL}/\", timeout=2)\n        if response.status_code == 200:\n            print(\"✅ Node.js server is already running\")\n            node_server_ready = True\n            return\n    except requests.exceptions.RequestException:\n        pass\n    \n    if start_node_server():\n        node_server_ready = True\n    else:\n        print(\"❌ Failed to start Node.js server during initialization\")\n\nthreading.Thread(target=initialize_node_server, daemon=True).start()","size_bytes":5594},"attached_assets/index (10)_1754765066636.js":{"content":"const express = require('express');\nconst multer = require('multer');\nconst fs = require('fs');\nconst path = require('path');\nconst { execSync } = require('child_process');\nconst archiver = require('archiver');\nconst unzipper = require('unzipper');\nconst crypto = require('crypto');\nconst fetch = (...args) => import('node-fetch').then(({default: fetch}) => fetch(...args));\nconst nodemailer = require('nodemailer');\nconst youtubeDl = require('youtube-dl-exec');\n\nrequire('./cleaner');\n\nconst app = express();\nconst upload = multer({ dest: 'uploads/' });\n\napp.use(express.static('public'));\napp.use('/zips', express.static('zips'));\napp.use(express.json());\n\nfunction generateNamespace() {\n  return [...Array(32)].map(() => Math.random().toString(36)[2]).join('');\n}\n\nfunction escapePath(filePath) {\n  return `\"${filePath.replace(/\"/g, '\\\\\"')}\"`;\n}\n\nconst progressClients = new Map();\n\n// ตั้งค่า email transporter (ใช้ Gmail SMTP)\nconst transporter = nodemailer.createTransport({\n  service: 'gmail',\n  auth: {\n    user: process.env.EMAIL_USER, // ใส่อีเมลของคุณใน Secrets\n    pass: process.env.EMAIL_PASS  // ใส่ App Password ของ Gmail ใน Secrets\n  }\n});\n\n// ฟังก์ชันส่งอีเมลแจ้งเตือน\nasync function sendNotificationEmail(email, textureName, downloadUrl) {\n  if (!email) return;\n\n  try {\n    const mailOptions = {\n      from: process.env.EMAIL_USER,\n      to: email,\n      subject: `🎮 Texture Pack \"${textureName}\" พร้อมแล้ว!`,\n      html: `\n        <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\n          <h2 style=\"color: #4CAF50;\">🎉 Texture Pack ของคุณพร้อมแล้ว!</h2>\n          <p>สวัสดีครับ!</p>\n          <p>Texture Pack \"<strong>${textureName}</strong>\" ของคุณได้สร้างเสร็จแล้ว</p>\n          <div style=\"text-align: center; margin: 20px 0;\">\n            <a href=\"${downloadUrl}\" \n               style=\"background-color: #4CAF50; color: white; padding: 12px 24px; \n                      text-decoration: none; border-radius: 8px; font-weight: bold;\">\n              📦 ดาวน์โหลดเลย\n            </a>\n          </div>\n          <p style=\"color: #666; font-size: 12px;\">\n            หมายเหตุ: ลิงก์นี้จะหมดอายุภายใน 24 ชั่วโมง\n          </p>\n          <hr>\n          <p style=\"color: #888; font-size: 12px;\">\n            ขอบคุณที่ใช้บริการ BetMC UI Generator!\n          </p>\n        </div>\n      `\n    };\n\n    await transporter.sendMail(mailOptions);\n    console.log(`✅ ส่งอีเมลแจ้งเตือนไปยัง ${email} แล้ว`);\n  } catch (error) {\n    console.error('❌ ไม่สามารถส่งอีเมลได้:', error);\n  }\n}\n\napp.get('/progress/:sessionId', (req, res) => {\n  const sessionId = req.params.sessionId;\n\n  res.writeHead(200, {\n    'Content-Type': 'text/event-stream',\n    'Cache-Control': 'no-cache',\n    'Connection': 'keep-alive',\n    'Access-Control-Allow-Origin': '*'\n  });\n\n  progressClients.set(sessionId, res);\n\n  req.on('close', () => {\n    progressClients.delete(sessionId);\n  });\n});\n\nfunction sendProgress(sessionId, step, progress, message, timeLeft = null) {\n  const client = progressClients.get(sessionId);\n  if (client) {\n    const data = { step, progress, message, timeLeft };\n    client.write(`data: ${JSON.stringify(data)}\\n\\n`);\n  }\n}\n\n// ฟังก์ชันดาวน์โหลดวิดีโอจาก YouTube\nasync function downloadYouTubeVideo(videoId, outputPath, quality = '720') {\n  try {\n    let format;\n    switch (quality) {\n      case '480':\n        format = 'best[height<=480]';\n        break;\n      case '720':\n        format = 'best[height<=720]';\n        break;\n      case '1080':\n        format = 'best[height<=1080]';\n        break;\n      default:\n        format = 'best[height<=720]';\n    }\n\n    await youtubeDl(`https://www.youtube.com/watch?v=${videoId}`, {\n      format: format,\n      output: outputPath\n    });\n  } catch (error) {\n    throw new Error('ไม่สามารถดาวน์โหลดวิดีโอจาก YouTube ได้');\n  }\n}\n\n// ฟังก์ชันดาวน์โหลดเสียงจาก YouTube\nasync function downloadYouTubeAudio(videoId, outputPath) {\n  try {\n    await youtubeDl(`https://www.youtube.com/watch?v=${videoId}`, {\n      format: 'bestaudio[ext=m4a]',\n      output: outputPath\n    });\n  } catch (error) {\n    throw new Error('ไม่สามารถดาวน์โหลดเสียงจาก YouTube ได้');\n  }\n}\n\napp.post('/upload', upload.fields([\n  { name: 'video' },\n  { name: 'audio' },\n  { name: 'icon' },\n  // ไม่รับ manifest และ sounds_zip upload แล้ว\n]), async (req, res) => {\n  const sessionId = generateNamespace();\n\n  try {\n    const fps = parseFloat(req.body.fps);\n    const quality = parseInt(req.body.quality);\n    const textureName = req.body.textureName || 'Custom Texture';\n    const userEmail = req.body.email;\n    const youtubeVideoId = req.body.youtubeVideoId;\n    const youtubeQuality = req.body.youtubeQuality || '720';\n    const useYoutubeAudio = req.body.useYoutubeAudio === 'true';\n    const youtubeAudioId = req.body.youtubeAudioId;\n\n    if (isNaN(fps) || isNaN(quality)) {\n      return res.status(400).json({ error: 'Invalid fps or quality value' });\n    }\n\n    // ส่ง sessionId กลับไปก่อน\n    res.json({ sessionId });\n\n    const namespace = generateNamespace();\n    const outputDir = path.join('output', namespace);\n    const frameDir = path.join(outputDir, 'subpacks/1080/betmc_background/betmc_background_frame');\n    fs.mkdirSync(frameDir, { recursive: true });\n\n    sendProgress(sessionId, 1, 5, 'เริ่มต้นการประมวลผล...');\n\n    let videoPath;\n    let audioPath;\n\n    // ตรวจสอบว่าเป็น YouTube video หรือไฟล์อัปโหลด\n    if (youtubeVideoId) {\n      sendProgress(sessionId, 2, 10, `กำลังดาวน์โหลดวิดีโอจาก YouTube (${youtubeQuality}p)...`);\n      const downloadPath = path.join('uploads', `${namespace}_youtube.%(ext)s`);\n      await downloadYouTubeVideo(youtubeVideoId, downloadPath, youtubeQuality);\n      \n      // หาไฟล์วิดีโอที่ดาวน์โหลดมา\n      const videoFiles = fs.readdirSync('uploads').filter(f => f.startsWith(`${namespace}_youtube.`));\n      if (videoFiles.length === 0) {\n        throw new Error('ไม่สามารถดาวน์โหลดวิดีโอจาก YouTube ได้');\n      }\n      videoPath = path.join('uploads', videoFiles[0]);\n\n      // ดาวน์โหลดเสียงจาก YouTube ถ้าเลือกใช้\n      if (useYoutubeAudio) {\n        sendProgress(sessionId, 2, 12, 'กำลังดาวน์โหลดเสียงจาก YouTube...');\n        const audioDownloadPath = path.join('uploads', `${namespace}_audio.%(ext)s`);\n        await downloadYouTubeAudio(youtubeVideoId, audioDownloadPath);\n        \n        // หาไฟล์เสียงที่ดาวน์โหลดมา\n        const audioFiles = fs.readdirSync('uploads').filter(f => f.startsWith(`${namespace}_audio.`));\n        if (audioFiles.length > 0) {\n          audioPath = path.join('uploads', audioFiles[0]);\n        }\n      }\n      \n      // ดาวน์โหลดเสียงจาก YouTube Audio ID แยกต่างหาก\n      if (youtubeAudioId) {\n        sendProgress(sessionId, 2, 14, 'กำลังดาวน์โหลดเสียงจาก YouTube...');\n        const audioDownloadPath = path.join('uploads', `${namespace}_separate_audio.%(ext)s`);\n        await downloadYouTubeAudio(youtubeAudioId, audioDownloadPath);\n        \n        // หาไฟล์เสียงที่ดาวน์โหลดมา\n        const audioFiles = fs.readdirSync('uploads').filter(f => f.startsWith(`${namespace}_separate_audio.`));\n        if (audioFiles.length > 0) {\n          audioPath = path.join('uploads', audioFiles[0]);\n        }\n      }\n    } else if (req.files.video) {\n      videoPath = req.files.video[0].path;\n    } else {\n      throw new Error('กรุณาอัปโหลดไฟล์วิดีโอหรือใส่ URL YouTube');\n    }\n\n    // ใช้เสียงจาก YouTube ถ้ามี หรือจากไฟล์อัปโหลด\n    const finalAudioPath = audioPath || (req.files.audio ? req.files.audio[0].path : null);\n\n    sendProgress(sessionId, 3, 15, 'กำลังแยกเฟรมจากวิดีโอ...');\n    execSync(`ffmpeg -i ${escapePath(videoPath)} -vf fps=${fps} ${escapePath(path.join(frameDir, 'betmc_img_%d_frame.png'))}`);\n\n    // ลบไฟล์วิดีโอ YouTube ที่ดาวน์โหลดมา\n    if (youtubeVideoId && fs.existsSync(videoPath)) {\n      fs.unlinkSync(videoPath);\n    }\n\n    const frames = fs.readdirSync(frameDir).filter(f => f.endsWith('.png'));\n    sendProgress(sessionId, 4, 25, `พบ ${frames.length} เฟรม กำลังบีบอัดรูปภาพ...`);\n\n    const totalFrames = frames.length;\n    for (let i = 0; i < frames.length; i++) {\n      const file = frames[i];\n      const input = path.join(frameDir, file);\n      const output = path.join(frameDir, `compressed_${file.replace('.png', '.jpg')}`);\n      execSync(`magick ${escapePath(input)} -strip -quality ${quality} ${escapePath(output)}`);\n      fs.unlinkSync(input);\n\n      const progress = 25 + Math.floor((i + 1) / totalFrames * 25); // 25-50%\n      const timeLeft = Math.ceil((totalFrames - i - 1) * 0.5); // ประมาณ 0.5 วินาทีต่อเฟรม\n      sendProgress(sessionId, 4, progress, `บีบอัดเฟรม ${i + 1}/${totalFrames}`, timeLeft);\n    }\n\n    sendProgress(sessionId, 5, 50, 'จัดระเบียบไฟล์...');\n    fs.readdirSync(frameDir).forEach(file => {\n      if (file.startsWith('compressed_')) {\n        fs.renameSync(\n          path.join(frameDir, file),\n          path.join(frameDir, file.replace('compressed_', ''))\n        );\n      }\n    });\n\n    // คัดลอกภาพ patch static จากเฟรมที่ 60 ถ้ามี\n    const frame60 = path.join(frameDir, 'betmc_img_60_frame.jpg');\n    const staticPatch = path.join(outputDir, 'subpacks/0/betmc_background/betmc_background_static_patch.jpg');\n    fs.mkdirSync(path.dirname(staticPatch), { recursive: true });\n    if (fs.existsSync(frame60)) {\n      fs.copyFileSync(frame60, staticPatch);\n    }\n\n    sendProgress(sessionId, 6, 55, 'ดาวน์โหลด manifest.json...');\n    // --- โหลด manifest.json จาก GitHub ---\n    const manifestUrl = req.body.manifestUrl || 'https://raw.githubusercontent.com/HEENAO9k/Sounds/main/manifest.json';\n    const manifestResponse = await fetch(manifestUrl);\n    if (!manifestResponse.ok) throw new Error(`Failed to fetch manifest.json from ${manifestUrl}`);\n    const manifestText = await manifestResponse.text();\n    const manifest = JSON.parse(manifestText);\n\n    manifest.header.name = textureName;\n    manifest.header.uuid = crypto.randomUUID();\n    manifest.modules[0].uuid = crypto.randomUUID();\n\n    const manifestPath = path.join(outputDir, 'manifest.json');\n    fs.writeFileSync(manifestPath, JSON.stringify(manifest, null, 2));\n\n    sendProgress(sessionId, 7, 60, 'ดาวน์โหลดไฟล์เสียง...');\n    // --- โหลด sounds.zip จาก GitHub และแตกไฟล์ ---\n    const soundsZipUrl = req.body.soundsZipUrl || 'https://github.com/HEENAO9k/Sounds/raw/main/sounds.zip';\n    const soundsResponse = await fetch(soundsZipUrl);\n    if (!soundsResponse.ok) throw new Error(`Failed to fetch sounds.zip from ${soundsZipUrl}`);\n\n    const soundsZipPath = path.join('uploads', `${namespace}_sounds.zip`);\n    const soundsZipStream = fs.createWriteStream(soundsZipPath);\n    await new Promise((resolve, reject) => {\n      soundsResponse.body.pipe(soundsZipStream);\n      soundsResponse.body.on('error', reject);\n      soundsZipStream.on('finish', resolve);\n    });\n\n    sendProgress(sessionId, 8, 65, 'แตกไฟล์เสียง...');\n    await fs.createReadStream(soundsZipPath)\n      .pipe(unzipper.Extract({ path: path.join(outputDir, 'sounds') }))\n      .promise();\n\n    fs.unlinkSync(soundsZipPath);\n\n    // แปลงไฟล์เสียงถ้ามี (จาก YouTube หรือไฟล์อัปโหลด)\n    if (finalAudioPath) {\n      sendProgress(sessionId, 9, 70, useYoutubeAudio ? 'แปลงไฟล์เสียงจาก YouTube...' : 'แปลงไฟล์เสียง...');\n      const audioOutput = path.join(outputDir, 'sounds/music/menu');\n      fs.mkdirSync(audioOutput, { recursive: true });\n      execSync(`ffmpeg -i ${escapePath(finalAudioPath)} -vn -c:a libvorbis ${escapePath(path.join(audioOutput, 'menu1.ogg'))}`);\n      for (let i = 2; i <= 4; i++) {\n        fs.copyFileSync(path.join(audioOutput, 'menu1.ogg'), path.join(audioOutput, `menu${i}.ogg`));\n      }\n\n      // ลบไฟล์เสียง YouTube ที่ดาวน์โหลดมา\n      if (audioPath && fs.existsSync(audioPath)) {\n        fs.unlinkSync(audioPath);\n      }\n    }\n\n    sendProgress(sessionId, 10, 75, 'คัดลอกไฟล์เพิ่มเติม...');\n    // คัดลอกไอคอนถ้ามีอัปโหลด\n    if (req.files.icon) {\n      fs.copyFileSync(req.files.icon[0].path, path.join(outputDir, 'pack_icon.png'));\n    }\n\n    sendProgress(sessionId, 11, 80, 'สร้างไฟล์ config...');\n    // สร้าง config betmc_config\n    const config0 = {\n      namespace: 'betmc_config',\n      betmc_main_config: {\n        $betmc_scr_backround_path: 'betmc_background/betmc_background_static_patch'\n      }\n    };\n    const config1080 = {\n      namespace: 'betmc_config',\n      betmc_main_config: {\n        $use_background_static_customs: false,\n        $use_setting_background_static_customs: false,\n        $use_background_animation: true,\n        $betmc_frame_duration: 1 / fps\n      }\n    };\n    fs.mkdirSync(path.join(outputDir, 'subpacks/0/betmc_config'), { recursive: true });\n    fs.mkdirSync(path.join(outputDir, 'subpacks/1080/betmc_config'), { recursive: true });\n    fs.writeFileSync(path.join(outputDir, 'subpacks/0/betmc_config/config.json'), JSON.stringify(config0, null, 2));\n    fs.writeFileSync(path.join(outputDir, 'subpacks/1080/betmc_config/config.json'), JSON.stringify(config1080, null, 2));\n\n    sendProgress(sessionId, 12, 85, 'สร้างไฟล์ UI...');\n    // สร้างไฟล์ UI\n    const betmcCommonPath = path.join(outputDir, 'betmc_ui/betmc_common');\n    const uiPath = path.join(outputDir, 'ui');\n    fs.mkdirSync(betmcCommonPath, { recursive: true });\n    fs.mkdirSync(uiPath, { recursive: true });\n\n    let yBottom = 1500;\n    const animFrames = [];\n    while (animFrames.length < frames.length) {\n      for (let y = 1500; y >= -1400 && animFrames.length < frames.length; y -= 100) {\n        animFrames.push({ from: [`${y}%`, `${yBottom}%`] });\n      }\n      yBottom -= 100;\n    }\n\n    // ตรวจสอบว่ามี frames อย่างน้อย 1 เฟรม\n    if (animFrames.length === 0) {\n      throw new Error('ไม่พบเฟรมวิดีโอ กรุณาอัปโหลดไฟล์วิดีโอที่ถูกต้อง');\n    }\n\n    const animJson = { namespace };\n    animJson[`${namespace}.app-js:8:19`] = {\n      from: animFrames[0].from,\n      to: animFrames[0].from,\n      next: `@${namespace}.app-js:8:19-1`,\n      anim_type: 'offset',\n      duration: 1 / fps\n    };\n    animFrames.forEach((f, i) => {\n      if (i === 0) return;\n      const key = `${namespace}.app-js:8:19-${i}`;\n      animJson[key] = {\n        from: f.from,\n        to: f.from,\n        next: i + 1 < animFrames.length ? `@${namespace}.app-js:8:19-${i + 1}` : `@${namespace}.app-js:8:19`,\n        anim_type: 'offset',\n        duration: 1 / fps\n      };\n    });\n    fs.writeFileSync(path.join(betmcCommonPath, `${namespace}.json`), JSON.stringify(animJson, null, 2));\n\n    const bgCommon = {\n      namespace: 'betmc_background',\n      'betmc_animation_background_frame@betmc_common.empty_panel': {\n        anims: [`@${namespace}.app-js:8:19`],\n        controls: [],\n        size: ['100%', '100%'],\n        offset: `@${namespace}.app-js:8:19`,\n        anchor_from: 'center',\n        anchor_to: 'center'\n      }\n    };\n    const controls = [];\n    const defs = {};\n    let x = -1500, y = -1500;\n    for (let i = 0; i < frames.length; i++) {\n      const key = i > 0 ? `app-js:31:30[${i}]` : 'app-js:31:30';\n      const id = crypto.randomUUID().replace(/-/g, '');\n      controls.push({ [`${id}@betmc_background.${key}`]: {} });\n      defs[key] = {\n        type: 'image',\n        texture: `betmc_background/betmc_background_frame/betmc_img_${i + 1}_frame`,\n        fill: true,\n        size: ['100%', '100%'],\n        offset: [`${x}%`, `${y}%`]\n      };\n      x += 100;\n      if (x > 1400) {\n        x = -1500;\n        y += 100;\n      }\n      if (y > 1400) y = -1500;\n    }\n    bgCommon['betmc_animation_background_frame@betmc_common.empty_panel'].controls = controls;\n    Object.assign(bgCommon, defs);\n    fs.writeFileSync(path.join(betmcCommonPath, 'betmc_bg_common.json'), JSON.stringify(bgCommon, null, 2));\n\n    const uiDefs = { ui_defs: [`betmc_ui/betmc_common/${namespace}.json`] };\n    fs.writeFileSync(path.join(uiPath, '_ui_defs.json'), JSON.stringify(uiDefs, null, 2));\n\n    sendProgress(sessionId, 13, 90, 'สร้างไฟล์ ZIP...');\n    // สร้าง zip\n    const zipPath = path.join('zips', `${namespace}.zip`);\n    fs.mkdirSync('zips', { recursive: true });\n    const output = fs.createWriteStream(zipPath);\n    const archive = archiver('zip');\n    archive.pipe(output);\n    archive.directory(outputDir, false);\n    await archive.finalize();\n\n    sendProgress(sessionId, 14, 100, 'เสร็จสิ้น!', 0);\n\n    // ส่งอีเมลแจ้งเตือน (ถ้ามี)\n    if (userEmail) {\n      const downloadUrl = `${req.protocol}://${req.get('host')}/${zipPath}`;\n      await sendNotificationEmail(userEmail, textureName, downloadUrl);\n    }\n\n    // ส่งผลลัพธ์สุดท้าย\n    setTimeout(() => {\n      const client = progressClients.get(sessionId);\n      if (client) {\n        client.write(`data: ${JSON.stringify({ completed: true, zip: `/${zipPath}` })}\\n\\n`);\n        client.end();\n        progressClients.delete(sessionId);\n      }\n    }, 1000);\n\n  } catch (err) {\n    console.error('Error:', err);\n    sendProgress(sessionId, 0, 0, 'เกิดข้อผิดพลาด: ' + err.message);\n    const client = progressClients.get(sessionId);\n    if (client) {\n      client.write(`data: ${JSON.stringify({ error: 'Error processing files' })}\\n\\n`);\n      client.end();\n      progressClients.delete(sessionId);\n    }\n  }\n});\n\napp.listen(3000, () => {\n  console.log('Server listening at http://localhost:3000');\n});","size_bytes":19594},"start_server.js":{"content":"#!/usr/bin/env node\n\n// Direct server starter for port 5000\nconst { spawn } = require('child_process');\nconst path = require('path');\n\nconsole.log('🚀 Starting BetMC on port 5000...');\n\n// Set environment to force port 5000\nprocess.env.PORT = '5000';\n\n// Kill any existing servers\nconst killExisting = spawn('pkill', ['-f', 'server.js'], { stdio: 'inherit' });\n\nkillExisting.on('close', () => {\n  // Start the main server\n  const server = spawn('node', ['server.js'], {\n    stdio: 'inherit',\n    cwd: path.resolve(__dirname),\n    env: { ...process.env, PORT: '5000' }\n  });\n\n  server.on('error', (error) => {\n    console.error('❌ Failed to start server:', error);\n    process.exit(1);\n  });\n\n  server.on('close', (code) => {\n    console.log(`🛑 Server process exited with code ${code}`);\n    if (code !== 0) {\n      process.exit(code);\n    }\n  });\n});","size_bytes":857},"attached_assets/routes (2)_1754801745818.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { videoRequestSchema } from \"@shared/schema\";\nimport { z } from \"zod\";\nimport ytdl from \"@distube/ytdl-core\";\nimport { exec } from \"child_process\";\nimport { promisify } from \"util\";\n\nconst execAsync = promisify(exec);\n\n// Video data interface for both TikTok and YouTube\ninterface VideoData {\n  id: string;\n  title: string;\n  description: string;\n  author: string;\n  authorUsername: string;\n  duration: number;\n  views: number;\n  likes: number;\n  thumbnailUrl: string;\n  videoUrl: string;\n  audioUrl?: string;\n  platform: \"tiktok\" | \"youtube\";\n}\n\n// Extract TikTok video data using Toby API\nasync function extractTikTokVideo(url: string): Promise<VideoData> {\n  try {\n    console.log(`Extracting TikTok video from: ${url}`);\n    \n    const Tiktok = await import(\"@tobyg74/tiktok-api-dl\");\n    let result;\n    \n    try {\n      result = await Tiktok.default.Downloader(url, { version: \"v2\" });\n    } catch (error) {\n      console.log(\"v2 failed, trying v1:\", (error as any).message);\n      result = await Tiktok.default.Downloader(url, { version: \"v1\" });\n    }\n\n    if (!result || result.status !== \"success\") {\n      throw new Error(`Failed to extract video data from TikTok: ${result?.message || 'Unknown error'}`);\n    }\n\n    const data = result.result as any;\n    const videoId = data?.id || extractVideoId(url);\n    \n    const title = data?.desc || \"TikTok Video\";\n    const description = data?.desc || \"\";\n    const author = data?.author?.nickname || \"Unknown User\";\n    const authorUsername = `@${data?.author?.nickname?.toLowerCase().replace(/\\s+/g, '') || 'unknown'}`;\n    const duration = data?.video?.duration || 0;\n    const views = data?.statistics?.playCount || 0;\n    const likes = data?.statistics?.diggCount || 0;\n    const thumbnailUrl = data?.video?.cover || data?.author?.avatar || \"\";\n    const videoUrl = data?.video?.playAddr?.[0] || \"\";\n    const audioUrl = data?.music?.playUrl?.[0] || undefined;\n    \n    return {\n      id: videoId,\n      title,\n      description,\n      author,\n      authorUsername,\n      duration,\n      views,\n      likes,\n      thumbnailUrl,\n      videoUrl,\n      audioUrl,\n      platform: \"tiktok\",\n    };\n  } catch (error) {\n    console.error(\"Error extracting TikTok video:\", error);\n    throw new Error(\"Failed to extract video data. The video might be private or unavailable.\");\n  }\n}\n\n// Extract YouTube video data using fallback methods\nasync function extractYouTubeVideo(url: string): Promise<VideoData> {\n  console.log(`Extracting YouTube video from: ${url}`);\n  \n  // First try ytdl-core\n  try {\n    const info = await ytdl.getInfo(url);\n    const videoDetails = info.videoDetails;\n    \n    // Get best quality video format\n    const formats = ytdl.filterFormats(info.formats, 'videoandaudio');\n    const bestFormat = ytdl.chooseFormat(formats, { quality: 'highest' });\n    \n    // Get audio-only format\n    const audioFormats = ytdl.filterFormats(info.formats, 'audioonly');\n    const audioFormat = ytdl.chooseFormat(audioFormats, { quality: 'highestaudio' });\n    \n    return {\n      id: videoDetails.videoId,\n      title: videoDetails.title || \"YouTube Video\",\n      description: videoDetails.description || \"\",\n      author: videoDetails.author.name || \"Unknown Channel\",\n      authorUsername: `@${videoDetails.author.name?.toLowerCase().replace(/\\s+/g, '') || 'unknown'}`,\n      duration: parseInt(videoDetails.lengthSeconds) || 0,\n      views: parseInt(videoDetails.viewCount) || 0,\n      likes: 0,\n      thumbnailUrl: videoDetails.thumbnails[0]?.url || \"\",\n      videoUrl: bestFormat?.url || \"\",\n      audioUrl: audioFormat?.url || undefined,\n      platform: \"youtube\",\n    };\n  } catch (error) {\n    console.log(\"ytdl-core failed, trying alternative method:\", (error as any).message);\n    \n    // Fallback: Extract basic info and provide alternative download approach\n    try {\n      const videoId = ytdl.getVideoID(url);\n      \n      // Create a more basic response that relies on client-side or external service\n      return {\n        id: videoId,\n        title: \"YouTube Video (Click to view details)\",\n        description: \"Video information will be loaded when you download. YouTube has bot protection that prevents direct metadata extraction.\",\n        author: \"YouTube Channel\",\n        authorUsername: \"@youtube\",\n        duration: 0,\n        views: 0,\n        likes: 0,\n        thumbnailUrl: `https://img.youtube.com/vi/${videoId}/hqdefault.jpg`,\n        videoUrl: `https://www.youtube.com/watch?v=${videoId}`, // Fallback URL\n        audioUrl: undefined,\n        platform: \"youtube\",\n      };\n    } catch (fallbackError) {\n      console.error(\"All YouTube extraction methods failed:\", fallbackError);\n      \n      // Last resort: try to extract video ID and provide basic info\n      try {\n        const videoId = ytdl.getVideoID(url);\n        return {\n          id: videoId,\n          title: \"YouTube Video (Bot Protection Active)\",\n          description: \"YouTube is currently blocking metadata extraction. You can still access the video through the download link.\",\n          author: \"YouTube Channel\",\n          authorUsername: \"@youtube\",\n          duration: 0,\n          views: 0,\n          likes: 0,\n          thumbnailUrl: `https://img.youtube.com/vi/${videoId}/hqdefault.jpg`,\n          videoUrl: `https://www.youtube.com/watch?v=${videoId}`,\n          audioUrl: `https://www.youtube.com/watch?v=${videoId}`,\n          platform: \"youtube\",\n        };\n      } catch (finalError) {\n        throw new Error(\"Failed to extract YouTube video data. The video might be private, unavailable, or the URL is invalid.\");\n      }\n    }\n  }\n}\n\nfunction extractVideoId(url: string): string {\n  // Extract video ID from various TikTok URL formats\n  const patterns = [\n    /\\/video\\/(\\d+)/,\n    /\\/v\\/(\\d+)/,\n    /vm\\.tiktok\\.com\\/([A-Za-z0-9]+)/,\n    /tiktok\\.com\\/t\\/([A-Za-z0-9]+)/,\n  ];\n  \n  for (const pattern of patterns) {\n    const match = url.match(pattern);\n    if (match) return match[1];\n  }\n  \n  return url.split('/').pop() || 'unknown';\n}\n\nfunction detectPlatform(url: string): \"tiktok\" | \"youtube\" {\n  const tiktokPatterns = [\n    /^https?:\\/\\/(www\\.)?tiktok\\.com/,\n    /^https?:\\/\\/vm\\.tiktok\\.com/,\n    /^https?:\\/\\/vt\\.tiktok\\.com/,\n    /^https?:\\/\\/m\\.tiktok\\.com/,\n  ];\n\n  const youtubePatterns = [\n    /^https?:\\/\\/(www\\.)?youtube\\.com/,\n    /^https?:\\/\\/youtu\\.be/,\n    /^https?:\\/\\/(www\\.)?m\\.youtube\\.com/,\n  ];\n\n  if (tiktokPatterns.some(pattern => pattern.test(url))) {\n    return \"tiktok\";\n  }\n\n  if (youtubePatterns.some(pattern => pattern.test(url))) {\n    return \"youtube\";\n  }\n\n  // Default to tiktok for backward compatibility\n  return \"tiktok\";\n}\n\nfunction isValidTikTokUrl(url: string): boolean {\n  const patterns = [\n    /^https?:\\/\\/(www\\.)?tiktok\\.com\\/@[\\w.-]+\\/video\\/\\d+/,\n    /^https?:\\/\\/vm\\.tiktok\\.com\\/[\\w]+/,\n    /^https?:\\/\\/vt\\.tiktok\\.com\\/[\\w]+/,\n    /^https?:\\/\\/m\\.tiktok\\.com\\/v\\/\\d+/,\n    /^https?:\\/\\/tiktok\\.com\\/t\\/[\\w]+/,\n    /^https?:\\/\\/(www\\.)?tiktok\\.com\\/.*\\/video\\/\\d+/,\n  ];\n  \n  return patterns.some(pattern => pattern.test(url));\n}\n\nfunction isValidYouTubeUrl(url: string): boolean {\n  const patterns = [\n    /^https?:\\/\\/(www\\.)?youtube\\.com\\/watch\\?v=[\\w-]+/,\n    /^https?:\\/\\/youtu\\.be\\/[\\w-]+/,\n    /^https?:\\/\\/(www\\.)?m\\.youtube\\.com\\/watch\\?v=[\\w-]+/,\n    /^https?:\\/\\/(www\\.)?youtube\\.com\\/embed\\/[\\w-]+/,\n    /^https?:\\/\\/(www\\.)?youtube\\.com\\/v\\/[\\w-]+/,\n  ];\n  \n  return patterns.some(pattern => pattern.test(url));\n}\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Extract video data from TikTok or YouTube URL\n  app.post(\"/api/extract\", async (req, res) => {\n    try {\n      const { url } = videoRequestSchema.parse(req.body);\n      const platform = detectPlatform(url);\n      \n      // Validate URL based on platform\n      if (platform === \"tiktok\" && !isValidTikTokUrl(url)) {\n        return res.status(400).json({ \n          message: \"Invalid TikTok URL format. Please enter a valid TikTok video URL.\" \n        });\n      }\n      \n      if (platform === \"youtube\" && !isValidYouTubeUrl(url)) {\n        return res.status(400).json({ \n          message: \"Invalid YouTube URL format. Please enter a valid YouTube video URL.\" \n        });\n      }\n      \n      // Check if we already have this video\n      const videoId = platform === \"tiktok\" ? extractVideoId(url) : ytdl.getVideoID(url);\n      const existing = await storage.getDownloadByVideoId(videoId);\n      \n      if (existing && !existing.isProcessing) {\n        return res.json(existing);\n      }\n      \n      // Extract video data based on platform\n      let videoData: VideoData;\n      if (platform === \"tiktok\") {\n        videoData = await extractTikTokVideo(url);\n      } else {\n        videoData = await extractYouTubeVideo(url);\n      }\n      \n      // Save to storage\n      const download = await storage.createDownload({\n        originalUrl: url,\n        videoId: videoData.id,\n        platform: videoData.platform,\n        title: videoData.title,\n        description: videoData.description,\n        author: videoData.author,\n        authorUsername: videoData.authorUsername,\n        duration: videoData.duration,\n        views: videoData.views,\n        likes: videoData.likes,\n        thumbnailUrl: videoData.thumbnailUrl,\n        videoUrl: videoData.videoUrl,\n        audioUrl: videoData.audioUrl,\n        downloadCount: 0,\n        isProcessing: false,\n      });\n      \n      res.json(download);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ \n          message: error.errors[0]?.message || \"Invalid request data\" \n        });\n      }\n      \n      console.error(\"Error extracting video:\", error);\n      res.status(500).json({ \n        message: \"Failed to extract video data. Please check the URL and try again.\" \n      });\n    }\n  });\n  \n  // Download video\n  app.post(\"/api/download/:id\", async (req, res) => {\n    try {\n      const { id } = req.params;\n      const download = await storage.getDownload(id);\n      \n      if (!download) {\n        return res.status(404).json({ message: \"Video not found\" });\n      }\n      \n      if (!download.videoUrl) {\n        return res.status(400).json({ message: \"Video URL not available\" });\n      }\n      \n      // Increment download count\n      await storage.incrementDownloadCount(id);\n      \n      // Handle YouTube videos that may not have direct URLs due to bot protection\n      if (download.platform === 'youtube' && (!download.videoUrl || download.videoUrl.includes('youtube.com'))) {\n        return res.json({\n          downloadUrl: `https://www.youtube.com/watch?v=${download.videoId}`,\n          filename: `youtube_${download.videoId}.mp4`,\n          message: \"Due to YouTube's bot protection, please use the YouTube link to download manually or try a different video.\",\n          isRedirect: true\n        });\n      }\n      \n      // Return the direct download URL for working videos\n      res.json({ \n        downloadUrl: download.videoUrl,\n        filename: `${download.authorUsername?.replace('@', '') || 'video'}_${download.videoId}.mp4`\n      });\n    } catch (error) {\n      console.error(\"Error downloading video:\", error);\n      res.status(500).json({ message: \"Failed to process download\" });\n    }\n  });\n  \n  // Download audio only\n  app.post(\"/api/download-audio/:id\", async (req, res) => {\n    try {\n      const { id } = req.params;\n      const download = await storage.getDownload(id);\n      \n      if (!download) {\n        return res.status(404).json({ message: \"Video not found\" });\n      }\n      \n      if (!download.audioUrl) {\n        return res.status(400).json({ message: \"Audio not available for this video\" });\n      }\n      \n      await storage.incrementDownloadCount(id);\n      \n      // Handle YouTube audio that may not be available due to bot protection\n      if (download.platform === 'youtube' && (!download.audioUrl || download.audioUrl.includes('youtube.com'))) {\n        return res.json({\n          downloadUrl: `https://www.youtube.com/watch?v=${download.videoId}`,\n          filename: `youtube_${download.videoId}.mp3`,\n          message: \"Due to YouTube's bot protection, please use the YouTube link to download audio manually.\",\n          isRedirect: true\n        });\n      }\n      \n      res.json({ \n        downloadUrl: download.audioUrl,\n        filename: `${download.authorUsername?.replace('@', '') || 'video'}_${download.videoId}.mp3`\n      });\n    } catch (error) {\n      console.error(\"Error downloading audio:\", error);\n      res.status(500).json({ message: \"Failed to process audio download\" });\n    }\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n","size_bytes":12796},"start.js":{"content":"// Simple server starter to avoid port conflicts\nconst { spawn } = require('child_process');\nconst path = require('path');\n\nconsole.log('🚀 Starting BetMC Server...');\n\n// Kill any existing processes on port 5000\nconst killProcess = spawn('pkill', ['-f', 'node.*server.js'], { stdio: 'ignore' });\n\nkillProcess.on('close', () => {\n  setTimeout(() => {\n    // Start the server\n    const serverPath = path.join(__dirname, 'server.js');\n    const server = spawn('node', [serverPath], {\n      stdio: 'inherit',\n      detached: false\n    });\n\n    server.on('error', (err) => {\n      console.error('Failed to start server:', err);\n    });\n\n    server.on('close', (code) => {\n      console.log(`Server process exited with code ${code}`);\n    });\n\n    // Handle graceful shutdown\n    process.on('SIGTERM', () => {\n      server.kill('SIGTERM');\n    });\n    \n    process.on('SIGINT', () => {\n      server.kill('SIGINT');\n    });\n  }, 2000);\n});","size_bytes":935}}}